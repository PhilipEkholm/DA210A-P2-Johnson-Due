
SlaveDue.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00003d30  00080000  00080000  00010000  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .ARM.exidx    00000008  00083d30  00083d30  00013d30  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  2 .relocate     00000ae0  20070000  00083d38  00020000  2**3
                  CONTENTS, ALLOC, LOAD, CODE
  3 .bss          00000198  20070ae0  00084818  00020ae0  2**2
                  ALLOC
  4 .stack        00002000  20070c78  000849b0  00020ae0  2**0
                  ALLOC
  5 .ARM.attributes 00000029  00000000  00000000  00020ae0  2**0
                  CONTENTS, READONLY
  6 .comment      00000059  00000000  00000000  00020b09  2**0
                  CONTENTS, READONLY
  7 .debug_info   00015458  00000000  00000000  00020b62  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_abbrev 000031f5  00000000  00000000  00035fba  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_loc    00003f49  00000000  00000000  000391af  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_aranges 000009c8  00000000  00000000  0003d0f8  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 000008f8  00000000  00000000  0003dac0  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_macro  00019658  00000000  00000000  0003e3b8  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_line   0000f864  00000000  00000000  00057a10  2**0
                  CONTENTS, READONLY, DEBUGGING
 14 .debug_str    0006410f  00000000  00000000  00067274  2**0
                  CONTENTS, READONLY, DEBUGGING
 15 .debug_frame  000021cc  00000000  00000000  000cb384  2**2
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00080000 <exception_table>:
   80000:	78 2c 07 20 ad 0a 08 00 a9 0a 08 00 a9 0a 08 00     x,. ............
   80010:	a9 0a 08 00 a9 0a 08 00 a9 0a 08 00 00 00 00 00     ................
	...
   8002c:	a9 0a 08 00 a9 0a 08 00 00 00 00 00 a9 0a 08 00     ................
   8003c:	a9 0a 08 00 a9 0a 08 00 a9 0a 08 00 a9 0a 08 00     ................
   8004c:	a9 0a 08 00 a9 0a 08 00 a9 0a 08 00 a9 0a 08 00     ................
   8005c:	a9 0a 08 00 a9 0a 08 00 a9 0a 08 00 00 00 00 00     ................
   8006c:	1d 09 08 00 31 09 08 00 45 09 08 00 59 09 08 00     ....1...E...Y...
	...
   80084:	c9 01 08 00 a9 0a 08 00 a9 0a 08 00 a9 0a 08 00     ................
   80094:	a9 0a 08 00 a9 0a 08 00 a9 0a 08 00 a9 0a 08 00     ................
   800a4:	00 00 00 00 a9 0a 08 00 a9 0a 08 00 a9 0a 08 00     ................
   800b4:	a9 0a 08 00 a9 0a 08 00 a9 0a 08 00 a9 0a 08 00     ................
   800c4:	a9 0a 08 00 a9 0a 08 00 a9 0a 08 00 a9 0a 08 00     ................
   800d4:	a9 0a 08 00 a9 0a 08 00 a9 0a 08 00 a9 0a 08 00     ................
   800e4:	a9 0a 08 00 a9 0a 08 00 a9 0a 08 00 a9 0a 08 00     ................

000800f4 <__do_global_dtors_aux>:
   800f4:	b510      	push	{r4, lr}
   800f6:	4c05      	ldr	r4, [pc, #20]	; (8010c <__do_global_dtors_aux+0x18>)
   800f8:	7823      	ldrb	r3, [r4, #0]
   800fa:	b933      	cbnz	r3, 8010a <__do_global_dtors_aux+0x16>
   800fc:	4b04      	ldr	r3, [pc, #16]	; (80110 <__do_global_dtors_aux+0x1c>)
   800fe:	b113      	cbz	r3, 80106 <__do_global_dtors_aux+0x12>
   80100:	4804      	ldr	r0, [pc, #16]	; (80114 <__do_global_dtors_aux+0x20>)
   80102:	f3af 8000 	nop.w
   80106:	2301      	movs	r3, #1
   80108:	7023      	strb	r3, [r4, #0]
   8010a:	bd10      	pop	{r4, pc}
   8010c:	20070ae0 	.word	0x20070ae0
   80110:	00000000 	.word	0x00000000
   80114:	00083d38 	.word	0x00083d38

00080118 <frame_dummy>:
   80118:	4b0c      	ldr	r3, [pc, #48]	; (8014c <frame_dummy+0x34>)
   8011a:	b143      	cbz	r3, 8012e <frame_dummy+0x16>
   8011c:	480c      	ldr	r0, [pc, #48]	; (80150 <frame_dummy+0x38>)
   8011e:	b510      	push	{r4, lr}
   80120:	490c      	ldr	r1, [pc, #48]	; (80154 <frame_dummy+0x3c>)
   80122:	f3af 8000 	nop.w
   80126:	480c      	ldr	r0, [pc, #48]	; (80158 <frame_dummy+0x40>)
   80128:	6803      	ldr	r3, [r0, #0]
   8012a:	b923      	cbnz	r3, 80136 <frame_dummy+0x1e>
   8012c:	bd10      	pop	{r4, pc}
   8012e:	480a      	ldr	r0, [pc, #40]	; (80158 <frame_dummy+0x40>)
   80130:	6803      	ldr	r3, [r0, #0]
   80132:	b933      	cbnz	r3, 80142 <frame_dummy+0x2a>
   80134:	4770      	bx	lr
   80136:	4b09      	ldr	r3, [pc, #36]	; (8015c <frame_dummy+0x44>)
   80138:	2b00      	cmp	r3, #0
   8013a:	d0f7      	beq.n	8012c <frame_dummy+0x14>
   8013c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
   80140:	4718      	bx	r3
   80142:	4b06      	ldr	r3, [pc, #24]	; (8015c <frame_dummy+0x44>)
   80144:	2b00      	cmp	r3, #0
   80146:	d0f5      	beq.n	80134 <frame_dummy+0x1c>
   80148:	4718      	bx	r3
   8014a:	bf00      	nop
   8014c:	00000000 	.word	0x00000000
   80150:	00083d38 	.word	0x00083d38
   80154:	20070ae4 	.word	0x20070ae4
   80158:	00083d38 	.word	0x00083d38
   8015c:	00000000 	.word	0x00000000

00080160 <_read>:
int __attribute__((weak))
_read (int file, char * ptr, int len); // Remove GCC compiler warning

int __attribute__((weak))
_read (int file, char * ptr, int len)
{
   80160:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
	int nChars = 0;

	if (file != 0) {
   80164:	b980      	cbnz	r0, 80188 <_read+0x28>
   80166:	460c      	mov	r4, r1
   80168:	4690      	mov	r8, r2
		return -1;
	}

	for (; len > 0; --len) {
   8016a:	2a00      	cmp	r2, #0
   8016c:	dd0f      	ble.n	8018e <_read+0x2e>
   8016e:	188f      	adds	r7, r1, r2
		ptr_get(stdio_base, ptr);
   80170:	4e08      	ldr	r6, [pc, #32]	; (80194 <_read+0x34>)
   80172:	4d09      	ldr	r5, [pc, #36]	; (80198 <_read+0x38>)
   80174:	6830      	ldr	r0, [r6, #0]
   80176:	4621      	mov	r1, r4
   80178:	682b      	ldr	r3, [r5, #0]
   8017a:	4798      	blx	r3
		ptr++;
   8017c:	3401      	adds	r4, #1
	for (; len > 0; --len) {
   8017e:	42bc      	cmp	r4, r7
   80180:	d1f8      	bne.n	80174 <_read+0x14>
		nChars++;
	}
	return nChars;
}
   80182:	4640      	mov	r0, r8
   80184:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
		return -1;
   80188:	f04f 38ff 	mov.w	r8, #4294967295
   8018c:	e7f9      	b.n	80182 <_read+0x22>
	for (; len > 0; --len) {
   8018e:	4680      	mov	r8, r0
   80190:	e7f7      	b.n	80182 <_read+0x22>
   80192:	bf00      	nop
   80194:	20070c4c 	.word	0x20070c4c
   80198:	20070c44 	.word	0x20070c44

0008019c <usart_write>:
 * \retval 0 on success.
 * \retval 1 on failure.
 */
uint32_t usart_write(Usart *p_usart, uint32_t c)
{
	if (!(p_usart->US_CSR & US_CSR_TXRDY)) {
   8019c:	6943      	ldr	r3, [r0, #20]
   8019e:	f013 0f02 	tst.w	r3, #2
		return 1;
	}

	p_usart->US_THR = US_THR_TXCHR(c);
   801a2:	bf1d      	ittte	ne
   801a4:	f3c1 0108 	ubfxne	r1, r1, #0, #9
   801a8:	61c1      	strne	r1, [r0, #28]
	return 0;
   801aa:	2000      	movne	r0, #0
		return 1;
   801ac:	2001      	moveq	r0, #1
}
   801ae:	4770      	bx	lr

000801b0 <usart_read>:
 * \retval 0 on success.
 * \retval 1 if no data is available or errors.
 */
uint32_t usart_read(Usart *p_usart, uint32_t *c)
{
	if (!(p_usart->US_CSR & US_CSR_RXRDY)) {
   801b0:	6943      	ldr	r3, [r0, #20]
   801b2:	f013 0f01 	tst.w	r3, #1
   801b6:	d005      	beq.n	801c4 <usart_read+0x14>
		return 1;
	}

	/* Read character */
	*c = p_usart->US_RHR & US_RHR_RXCHR_Msk;
   801b8:	6983      	ldr	r3, [r0, #24]
   801ba:	f3c3 0308 	ubfx	r3, r3, #0, #9
   801be:	600b      	str	r3, [r1, #0]

	return 0;
   801c0:	2000      	movs	r0, #0
   801c2:	4770      	bx	lr
		return 1;
   801c4:	2001      	movs	r0, #1
}
   801c6:	4770      	bx	lr

000801c8 <USART0_Handler>:
#if SAMD || SAMR21 || SAML21 || SAMR30
void USART_HOST_ISR_VECT(uint8_t instance)
#else
USART_HOST_ISR_VECT()
#endif
{
   801c8:	b500      	push	{lr}
   801ca:	b083      	sub	sp, #12
#if SAMD || SAMR21 || SAML21 || SAMR30
	usart_serial_read_packet(&host_uart_module, &temp, 1);
#elif SAM4E || SAM4S
	usart_serial_read_packet((Usart *)USART_HOST, &temp, 1);
#else
    usart_serial_read_packet(USART_HOST, &temp, 1);
   801cc:	2201      	movs	r2, #1
   801ce:	f10d 0107 	add.w	r1, sp, #7
   801d2:	4810      	ldr	r0, [pc, #64]	; (80214 <USART0_Handler+0x4c>)
   801d4:	4b10      	ldr	r3, [pc, #64]	; (80218 <USART0_Handler+0x50>)
   801d6:	4798      	blx	r3
  This function disables IRQ interrupts by setting the I-bit in the CPSR.
  Can only be executed in Privileged modes.
 */
__attribute__( ( always_inline ) ) __STATIC_INLINE void __disable_irq(void)
{
  __ASM volatile ("cpsid i" : : : "memory");
   801d8:	b672      	cpsid	i
    This function ensures the apparent order of the explicit memory operations before
    and after the instruction, without ensuring their completion.
 */
__attribute__( ( always_inline ) ) __STATIC_INLINE void __DMB(void)
{
  __ASM volatile ("dmb");
   801da:	f3bf 8f5f 	dmb	sy
#endif

	/* Introducing critical section to avoid buffer corruption. */
	cpu_irq_disable();
   801de:	2200      	movs	r2, #0
   801e0:	4b0e      	ldr	r3, [pc, #56]	; (8021c <USART0_Handler+0x54>)
   801e2:	701a      	strb	r2, [r3, #0]

	/* The number of data in the receive buffer is incremented and the
	 * buffer is updated. */

	serial_rx_buf[serial_rx_buf_tail] = temp;
   801e4:	4b0e      	ldr	r3, [pc, #56]	; (80220 <USART0_Handler+0x58>)
   801e6:	781b      	ldrb	r3, [r3, #0]
   801e8:	f89d 1007 	ldrb.w	r1, [sp, #7]
   801ec:	4a0d      	ldr	r2, [pc, #52]	; (80224 <USART0_Handler+0x5c>)
   801ee:	54d1      	strb	r1, [r2, r3]

	if ((SERIAL_RX_BUF_SIZE_HOST - 1) == serial_rx_buf_tail) {
   801f0:	2b9b      	cmp	r3, #155	; 0x9b
   801f2:	d00b      	beq.n	8020c <USART0_Handler+0x44>
		/* Reached the end of buffer, revert back to beginning of
		 * buffer. */
		serial_rx_buf_tail = 0x00;
	} else {
		serial_rx_buf_tail++;
   801f4:	3301      	adds	r3, #1
   801f6:	4a0a      	ldr	r2, [pc, #40]	; (80220 <USART0_Handler+0x58>)
   801f8:	7013      	strb	r3, [r2, #0]
	}

	cpu_irq_enable();
   801fa:	2201      	movs	r2, #1
   801fc:	4b07      	ldr	r3, [pc, #28]	; (8021c <USART0_Handler+0x54>)
   801fe:	701a      	strb	r2, [r3, #0]
   80200:	f3bf 8f5f 	dmb	sy
  __ASM volatile ("cpsie i" : : : "memory");
   80204:	b662      	cpsie	i
}
   80206:	b003      	add	sp, #12
   80208:	f85d fb04 	ldr.w	pc, [sp], #4
		serial_rx_buf_tail = 0x00;
   8020c:	2200      	movs	r2, #0
   8020e:	4b04      	ldr	r3, [pc, #16]	; (80220 <USART0_Handler+0x58>)
   80210:	701a      	strb	r2, [r3, #0]
   80212:	e7f2      	b.n	801fa <USART0_Handler+0x32>
   80214:	40098000 	.word	0x40098000
   80218:	000802e1 	.word	0x000802e1
   8021c:	2007012c 	.word	0x2007012c
   80220:	20070b98 	.word	0x20070b98
   80224:	20070afc 	.word	0x20070afc

00080228 <Slave_init>:
/* Low level time limit of I2C Fast Mode. */
#include <asf.h>
#define LOW_LEVEL_TIME_LIMIT 384000
#define I2C_FAST_MODE_SPEED  400000

void Slave_init(int8_t ul_device_addr){
   80228:	b510      	push	{r4, lr}
   8022a:	4604      	mov	r4, r0
		pmc_enable_periph_clk(ID_TWI0); /* power the clock for the TWI with pmc */
   8022c:	2016      	movs	r0, #22
   8022e:	4b0d      	ldr	r3, [pc, #52]	; (80264 <Slave_init+0x3c>)
   80230:	4798      	blx	r3
		PIOA->PIO_PDR|= (PIO_PB17)|(PIO_PB18);	/* Enable TWI pios */
   80232:	4a0d      	ldr	r2, [pc, #52]	; (80268 <Slave_init+0x40>)
   80234:	6853      	ldr	r3, [r2, #4]
   80236:	f443 23c0 	orr.w	r3, r3, #393216	; 0x60000
   8023a:	6053      	str	r3, [r2, #4]
	/* Disable TWI interrupts */
	TWI0->TWI_IDR = ~0UL;
   8023c:	4b0b      	ldr	r3, [pc, #44]	; (8026c <Slave_init+0x44>)
   8023e:	f04f 32ff 	mov.w	r2, #4294967295
   80242:	629a      	str	r2, [r3, #40]	; 0x28
	TWI0->TWI_SR;
   80244:	6a1a      	ldr	r2, [r3, #32]
	/* Set SWRST bit to reset TWI peripheral */
	TWI0->TWI_CR = TWI_CR_SWRST;
   80246:	2280      	movs	r2, #128	; 0x80
   80248:	601a      	str	r2, [r3, #0]
	TWI0->TWI_RHR;
   8024a:	6b1a      	ldr	r2, [r3, #48]	; 0x30
	/* Set slave address in slave mode */
	TWI0->TWI_SMR = TWI_SMR_SADR(ul_device_addr);
   8024c:	0424      	lsls	r4, r4, #16
   8024e:	f404 04fe 	and.w	r4, r4, #8323072	; 0x7f0000
   80252:	609c      	str	r4, [r3, #8]
	/* Set Master Disable bit and Slave Disable bit */
	TWI0->TWI_CR = TWI_CR_MSDIS;
   80254:	2208      	movs	r2, #8
   80256:	601a      	str	r2, [r3, #0]
	TWI0->TWI_CR = TWI_CR_SVDIS;
   80258:	2220      	movs	r2, #32
   8025a:	601a      	str	r2, [r3, #0]

	/* Set Slave Enable bit */
	TWI0->TWI_CR = TWI_CR_SVEN;
   8025c:	2210      	movs	r2, #16
   8025e:	601a      	str	r2, [r3, #0]
   80260:	bd10      	pop	{r4, pc}
   80262:	bf00      	nop
   80264:	00080a55 	.word	0x00080a55
   80268:	400e0e00 	.word	0x400e0e00
   8026c:	4008c000 	.word	0x4008c000

00080270 <slave_write>:
}


void slave_write(int8_t data){		
		//write data  to THR
		TWI0->TWI_THR |= data;
   80270:	4b06      	ldr	r3, [pc, #24]	; (8028c <slave_write+0x1c>)
   80272:	6b5a      	ldr	r2, [r3, #52]	; 0x34
   80274:	4310      	orrs	r0, r2
   80276:	6358      	str	r0, [r3, #52]	; 0x34
		TWI0->TWI_CR |= (0x1u << 1); //Sett a STOP Condition
   80278:	681a      	ldr	r2, [r3, #0]
   8027a:	f042 0202 	orr.w	r2, r2, #2
   8027e:	601a      	str	r2, [r3, #0]
			//wait for Nack/ack
		while (!(TWI0->TWI_SR & TWI_SR_TXRDY)){}
   80280:	461a      	mov	r2, r3
   80282:	6a13      	ldr	r3, [r2, #32]
   80284:	f013 0f04 	tst.w	r3, #4
   80288:	d0fb      	beq.n	80282 <slave_write+0x12>
		//while (!(TWI0->TWI_SR & TWI_SR_TXCOMP)){}


}
   8028a:	4770      	bx	lr
   8028c:	4008c000 	.word	0x4008c000

00080290 <_write>:
int __attribute__((weak))
_write (int file, const char *ptr, int len)
{
	int nChars = 0;

	if ((file != 1) && (file != 2) && (file!=3)) {
   80290:	3801      	subs	r0, #1
   80292:	2802      	cmp	r0, #2
   80294:	d815      	bhi.n	802c2 <_write+0x32>
{
   80296:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
   8029a:	460e      	mov	r6, r1
   8029c:	4614      	mov	r4, r2
		return -1;
	}

	for (; len != 0; --len) {
   8029e:	b19a      	cbz	r2, 802c8 <_write+0x38>
   802a0:	460d      	mov	r5, r1
		if (ptr_put(stdio_base, *ptr++) < 0) {
   802a2:	f8df 8038 	ldr.w	r8, [pc, #56]	; 802dc <_write+0x4c>
   802a6:	4f0c      	ldr	r7, [pc, #48]	; (802d8 <_write+0x48>)
   802a8:	f8d8 0000 	ldr.w	r0, [r8]
   802ac:	f815 1b01 	ldrb.w	r1, [r5], #1
   802b0:	683b      	ldr	r3, [r7, #0]
   802b2:	4798      	blx	r3
   802b4:	2800      	cmp	r0, #0
   802b6:	db0a      	blt.n	802ce <_write+0x3e>
   802b8:	1ba8      	subs	r0, r5, r6
	for (; len != 0; --len) {
   802ba:	3c01      	subs	r4, #1
   802bc:	d1f4      	bne.n	802a8 <_write+0x18>
   802be:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
		return -1;
   802c2:	f04f 30ff 	mov.w	r0, #4294967295
   802c6:	4770      	bx	lr
	for (; len != 0; --len) {
   802c8:	4610      	mov	r0, r2
   802ca:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
			return -1;
   802ce:	f04f 30ff 	mov.w	r0, #4294967295
		}
		++nChars;
	}
	return nChars;
}
   802d2:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
   802d6:	bf00      	nop
   802d8:	20070c48 	.word	0x20070c48
   802dc:	20070c4c 	.word	0x20070c4c

000802e0 <usart_serial_read_packet>:
 *
 */
status_code_t usart_serial_read_packet(usart_if usart, uint8_t *data,
		size_t len)
{
	while (len) {
   802e0:	2a00      	cmp	r2, #0
   802e2:	d051      	beq.n	80388 <usart_serial_read_packet+0xa8>
{
   802e4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   802e8:	b083      	sub	sp, #12
   802ea:	4605      	mov	r5, r0
   802ec:	460c      	mov	r4, r1
   802ee:	4692      	mov	sl, r2
   802f0:	448a      	add	sl, r1

	/* Avoid Cppcheck Warning */
	UNUSED(val);

#ifdef UART
	if (UART == (Uart*)p_usart) {
   802f2:	4f26      	ldr	r7, [pc, #152]	; (8038c <usart_serial_read_packet+0xac>)
		while (uart_read((Uart*)p_usart, data));
   802f4:	f8df 90a8 	ldr.w	r9, [pc, #168]	; 803a0 <usart_serial_read_packet+0xc0>
		while (usart_read(p_usart, &val));
		*data = (uint8_t)(val & 0xFF);
	}
# endif
# ifdef USART3
	if (USART3 == p_usart) {
   802f8:	4e25      	ldr	r6, [pc, #148]	; (80390 <usart_serial_read_packet+0xb0>)
   802fa:	e01d      	b.n	80338 <usart_serial_read_packet+0x58>
		while (uart_read((Uart*)p_usart, data));
   802fc:	4621      	mov	r1, r4
   802fe:	4638      	mov	r0, r7
   80300:	47c8      	blx	r9
   80302:	2800      	cmp	r0, #0
   80304:	d1fa      	bne.n	802fc <usart_serial_read_packet+0x1c>
   80306:	e021      	b.n	8034c <usart_serial_read_packet+0x6c>
		while (usart_read(p_usart, &val));
   80308:	469b      	mov	fp, r3
   8030a:	f8df 8098 	ldr.w	r8, [pc, #152]	; 803a4 <usart_serial_read_packet+0xc4>
   8030e:	a901      	add	r1, sp, #4
   80310:	4658      	mov	r0, fp
   80312:	47c0      	blx	r8
   80314:	2800      	cmp	r0, #0
   80316:	d1fa      	bne.n	8030e <usart_serial_read_packet+0x2e>
		*data = (uint8_t)(val & 0xFF);
   80318:	9b01      	ldr	r3, [sp, #4]
   8031a:	7023      	strb	r3, [r4, #0]
   8031c:	e019      	b.n	80352 <usart_serial_read_packet+0x72>
		while (usart_read(p_usart, &val));
   8031e:	469b      	mov	fp, r3
   80320:	f8df 8080 	ldr.w	r8, [pc, #128]	; 803a4 <usart_serial_read_packet+0xc4>
   80324:	a901      	add	r1, sp, #4
   80326:	4658      	mov	r0, fp
   80328:	47c0      	blx	r8
   8032a:	2800      	cmp	r0, #0
   8032c:	d1fa      	bne.n	80324 <usart_serial_read_packet+0x44>
		*data = (uint8_t)(val & 0xFF);
   8032e:	9b01      	ldr	r3, [sp, #4]
   80330:	7023      	strb	r3, [r4, #0]
		usart_serial_getchar(usart, data);
		len--;
		data++;
   80332:	3401      	adds	r4, #1
	while (len) {
   80334:	4554      	cmp	r4, sl
   80336:	d023      	beq.n	80380 <usart_serial_read_packet+0xa0>
	uint32_t val = 0;
   80338:	2300      	movs	r3, #0
   8033a:	9301      	str	r3, [sp, #4]
	if (UART == (Uart*)p_usart) {
   8033c:	42bd      	cmp	r5, r7
   8033e:	d0dd      	beq.n	802fc <usart_serial_read_packet+0x1c>
	if (USART0 == p_usart) {
   80340:	4b14      	ldr	r3, [pc, #80]	; (80394 <usart_serial_read_packet+0xb4>)
   80342:	429d      	cmp	r5, r3
   80344:	d0e0      	beq.n	80308 <usart_serial_read_packet+0x28>
	if (USART1 == p_usart) {
   80346:	4b14      	ldr	r3, [pc, #80]	; (80398 <usart_serial_read_packet+0xb8>)
   80348:	429d      	cmp	r5, r3
   8034a:	d0e8      	beq.n	8031e <usart_serial_read_packet+0x3e>
	if (USART2 == p_usart) {
   8034c:	4b13      	ldr	r3, [pc, #76]	; (8039c <usart_serial_read_packet+0xbc>)
   8034e:	429d      	cmp	r5, r3
   80350:	d00b      	beq.n	8036a <usart_serial_read_packet+0x8a>
	if (USART3 == p_usart) {
   80352:	42b5      	cmp	r5, r6
   80354:	d1ed      	bne.n	80332 <usart_serial_read_packet+0x52>
		while (usart_read(p_usart, &val));
   80356:	f8df 804c 	ldr.w	r8, [pc, #76]	; 803a4 <usart_serial_read_packet+0xc4>
   8035a:	a901      	add	r1, sp, #4
   8035c:	4630      	mov	r0, r6
   8035e:	47c0      	blx	r8
   80360:	2800      	cmp	r0, #0
   80362:	d1fa      	bne.n	8035a <usart_serial_read_packet+0x7a>
		*data = (uint8_t)(val & 0xFF);
   80364:	9b01      	ldr	r3, [sp, #4]
   80366:	7023      	strb	r3, [r4, #0]
   80368:	e7e3      	b.n	80332 <usart_serial_read_packet+0x52>
		while (usart_read(p_usart, &val));
   8036a:	469b      	mov	fp, r3
   8036c:	f8df 8034 	ldr.w	r8, [pc, #52]	; 803a4 <usart_serial_read_packet+0xc4>
   80370:	a901      	add	r1, sp, #4
   80372:	4658      	mov	r0, fp
   80374:	47c0      	blx	r8
   80376:	2800      	cmp	r0, #0
   80378:	d1fa      	bne.n	80370 <usart_serial_read_packet+0x90>
		*data = (uint8_t)(val & 0xFF);
   8037a:	9b01      	ldr	r3, [sp, #4]
   8037c:	7023      	strb	r3, [r4, #0]
   8037e:	e7d8      	b.n	80332 <usart_serial_read_packet+0x52>
	}
	return STATUS_OK;
}
   80380:	2000      	movs	r0, #0
   80382:	b003      	add	sp, #12
   80384:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   80388:	2000      	movs	r0, #0
   8038a:	4770      	bx	lr
   8038c:	400e0800 	.word	0x400e0800
   80390:	400a4000 	.word	0x400a4000
   80394:	40098000 	.word	0x40098000
   80398:	4009c000 	.word	0x4009c000
   8039c:	400a0000 	.word	0x400a0000
   803a0:	000803ef 	.word	0x000803ef
   803a4:	000801b1 	.word	0x000801b1

000803a8 <uart_init>:
 *
 * \retval 0 Success.
 * \retval 1 Bad baud rate generator value.
 */
uint32_t uart_init(Uart *p_uart, const sam_uart_opt_t *p_uart_opt)
{
   803a8:	b410      	push	{r4}
	uint32_t cd = 0;

	/* Reset and disable receiver & transmitter */
	p_uart->UART_CR = UART_CR_RSTRX | UART_CR_RSTTX
   803aa:	23ac      	movs	r3, #172	; 0xac
   803ac:	6003      	str	r3, [r0, #0]
			| UART_CR_RXDIS | UART_CR_TXDIS;

	/* Check and configure baudrate */
	/* Asynchronous, no oversampling */
	cd = (p_uart_opt->ul_mck / p_uart_opt->ul_baudrate) / UART_MCK_DIV;
   803ae:	680b      	ldr	r3, [r1, #0]
   803b0:	684a      	ldr	r2, [r1, #4]
   803b2:	fbb3 f3f2 	udiv	r3, r3, r2
   803b6:	091b      	lsrs	r3, r3, #4
	if (cd < UART_MCK_DIV_MIN_FACTOR || cd > UART_MCK_DIV_MAX_FACTOR)
   803b8:	1e5c      	subs	r4, r3, #1
   803ba:	f64f 72fe 	movw	r2, #65534	; 0xfffe
   803be:	4294      	cmp	r4, r2
   803c0:	d80b      	bhi.n	803da <uart_init+0x32>
		return 1;

	p_uart->UART_BRGR = cd;
   803c2:	6203      	str	r3, [r0, #32]
	/* Configure mode */
	p_uart->UART_MR = p_uart_opt->ul_mode;
   803c4:	688b      	ldr	r3, [r1, #8]
   803c6:	6043      	str	r3, [r0, #4]

#if (!SAMV71 && !SAMV70 && !SAME70 && !SAMS70)
	/* Disable PDC channel */
	p_uart->UART_PTCR = UART_PTCR_RXTDIS | UART_PTCR_TXTDIS;
   803c8:	f240 2302 	movw	r3, #514	; 0x202
   803cc:	f8c0 3120 	str.w	r3, [r0, #288]	; 0x120
#endif

	/* Enable receiver and transmitter */
	p_uart->UART_CR = UART_CR_RXEN | UART_CR_TXEN;
   803d0:	2350      	movs	r3, #80	; 0x50
   803d2:	6003      	str	r3, [r0, #0]

	return 0;
   803d4:	2000      	movs	r0, #0
}
   803d6:	bc10      	pop	{r4}
   803d8:	4770      	bx	lr
		return 1;
   803da:	2001      	movs	r0, #1
   803dc:	e7fb      	b.n	803d6 <uart_init+0x2e>

000803de <uart_write>:
 * \retval 1 I/O Failure, UART is not ready.
 */
uint32_t uart_write(Uart *p_uart, const uint8_t uc_data)
{
	/* Check if the transmitter is ready */
	if (!(p_uart->UART_SR & UART_SR_TXRDY))
   803de:	6943      	ldr	r3, [r0, #20]
   803e0:	f013 0f02 	tst.w	r3, #2
		return 1;

	/* Send character */
	p_uart->UART_THR = uc_data;
   803e4:	bf1a      	itte	ne
   803e6:	61c1      	strne	r1, [r0, #28]
	return 0;
   803e8:	2000      	movne	r0, #0
		return 1;
   803ea:	2001      	moveq	r0, #1
}
   803ec:	4770      	bx	lr

000803ee <uart_read>:
 * \retval 1 I/O Failure, UART is not ready.
 */
uint32_t uart_read(Uart *p_uart, uint8_t *puc_data)
{
	/* Check if the receiver is ready */
	if ((p_uart->UART_SR & UART_SR_RXRDY) == 0)
   803ee:	6943      	ldr	r3, [r0, #20]
   803f0:	f013 0f01 	tst.w	r3, #1
		return 1;

	/* Read character */
	*puc_data = (uint8_t) p_uart->UART_RHR;
   803f4:	bf1d      	ittte	ne
   803f6:	6983      	ldrne	r3, [r0, #24]
   803f8:	700b      	strbne	r3, [r1, #0]
	return 0;
   803fa:	2000      	movne	r0, #0
		return 1;
   803fc:	2001      	moveq	r0, #1
}
   803fe:	4770      	bx	lr

00080400 <usart_serial_getchar>:
{
   80400:	b5f0      	push	{r4, r5, r6, r7, lr}
   80402:	b083      	sub	sp, #12
   80404:	4604      	mov	r4, r0
   80406:	460d      	mov	r5, r1
	uint32_t val = 0;
   80408:	2300      	movs	r3, #0
   8040a:	9301      	str	r3, [sp, #4]
	if (UART == (Uart*)p_usart) {
   8040c:	4b20      	ldr	r3, [pc, #128]	; (80490 <usart_serial_getchar+0x90>)
   8040e:	4298      	cmp	r0, r3
   80410:	d00d      	beq.n	8042e <usart_serial_getchar+0x2e>
	if (USART0 == p_usart) {
   80412:	4b20      	ldr	r3, [pc, #128]	; (80494 <usart_serial_getchar+0x94>)
   80414:	4298      	cmp	r0, r3
   80416:	d012      	beq.n	8043e <usart_serial_getchar+0x3e>
	if (USART1 == p_usart) {
   80418:	4b1f      	ldr	r3, [pc, #124]	; (80498 <usart_serial_getchar+0x98>)
   8041a:	4298      	cmp	r0, r3
   8041c:	d019      	beq.n	80452 <usart_serial_getchar+0x52>
	if (USART2 == p_usart) {
   8041e:	4b1f      	ldr	r3, [pc, #124]	; (8049c <usart_serial_getchar+0x9c>)
   80420:	429c      	cmp	r4, r3
   80422:	d020      	beq.n	80466 <usart_serial_getchar+0x66>
	if (USART3 == p_usart) {
   80424:	4b1e      	ldr	r3, [pc, #120]	; (804a0 <usart_serial_getchar+0xa0>)
   80426:	429c      	cmp	r4, r3
   80428:	d027      	beq.n	8047a <usart_serial_getchar+0x7a>
		*data = (uint8_t)(val & 0xFF);
	}
# endif
#endif /* ifdef USART */

}
   8042a:	b003      	add	sp, #12
   8042c:	bdf0      	pop	{r4, r5, r6, r7, pc}
		while (uart_read((Uart*)p_usart, data));
   8042e:	461f      	mov	r7, r3
   80430:	4e1c      	ldr	r6, [pc, #112]	; (804a4 <usart_serial_getchar+0xa4>)
   80432:	4629      	mov	r1, r5
   80434:	4638      	mov	r0, r7
   80436:	47b0      	blx	r6
   80438:	2800      	cmp	r0, #0
   8043a:	d1fa      	bne.n	80432 <usart_serial_getchar+0x32>
   8043c:	e7ef      	b.n	8041e <usart_serial_getchar+0x1e>
		while (usart_read(p_usart, &val));
   8043e:	461f      	mov	r7, r3
   80440:	4e19      	ldr	r6, [pc, #100]	; (804a8 <usart_serial_getchar+0xa8>)
   80442:	a901      	add	r1, sp, #4
   80444:	4638      	mov	r0, r7
   80446:	47b0      	blx	r6
   80448:	2800      	cmp	r0, #0
   8044a:	d1fa      	bne.n	80442 <usart_serial_getchar+0x42>
		*data = (uint8_t)(val & 0xFF);
   8044c:	9b01      	ldr	r3, [sp, #4]
   8044e:	702b      	strb	r3, [r5, #0]
   80450:	e7e8      	b.n	80424 <usart_serial_getchar+0x24>
		while (usart_read(p_usart, &val));
   80452:	461e      	mov	r6, r3
   80454:	4c14      	ldr	r4, [pc, #80]	; (804a8 <usart_serial_getchar+0xa8>)
   80456:	a901      	add	r1, sp, #4
   80458:	4630      	mov	r0, r6
   8045a:	47a0      	blx	r4
   8045c:	2800      	cmp	r0, #0
   8045e:	d1fa      	bne.n	80456 <usart_serial_getchar+0x56>
		*data = (uint8_t)(val & 0xFF);
   80460:	9b01      	ldr	r3, [sp, #4]
   80462:	702b      	strb	r3, [r5, #0]
   80464:	e7e1      	b.n	8042a <usart_serial_getchar+0x2a>
		while (usart_read(p_usart, &val));
   80466:	461e      	mov	r6, r3
   80468:	4c0f      	ldr	r4, [pc, #60]	; (804a8 <usart_serial_getchar+0xa8>)
   8046a:	a901      	add	r1, sp, #4
   8046c:	4630      	mov	r0, r6
   8046e:	47a0      	blx	r4
   80470:	2800      	cmp	r0, #0
   80472:	d1fa      	bne.n	8046a <usart_serial_getchar+0x6a>
		*data = (uint8_t)(val & 0xFF);
   80474:	9b01      	ldr	r3, [sp, #4]
   80476:	702b      	strb	r3, [r5, #0]
   80478:	e7d7      	b.n	8042a <usart_serial_getchar+0x2a>
		while (usart_read(p_usart, &val));
   8047a:	461e      	mov	r6, r3
   8047c:	4c0a      	ldr	r4, [pc, #40]	; (804a8 <usart_serial_getchar+0xa8>)
   8047e:	a901      	add	r1, sp, #4
   80480:	4630      	mov	r0, r6
   80482:	47a0      	blx	r4
   80484:	2800      	cmp	r0, #0
   80486:	d1fa      	bne.n	8047e <usart_serial_getchar+0x7e>
		*data = (uint8_t)(val & 0xFF);
   80488:	9b01      	ldr	r3, [sp, #4]
   8048a:	702b      	strb	r3, [r5, #0]
}
   8048c:	e7cd      	b.n	8042a <usart_serial_getchar+0x2a>
   8048e:	bf00      	nop
   80490:	400e0800 	.word	0x400e0800
   80494:	40098000 	.word	0x40098000
   80498:	4009c000 	.word	0x4009c000
   8049c:	400a0000 	.word	0x400a0000
   804a0:	400a4000 	.word	0x400a4000
   804a4:	000803ef 	.word	0x000803ef
   804a8:	000801b1 	.word	0x000801b1

000804ac <usart_serial_putchar>:
{
   804ac:	b570      	push	{r4, r5, r6, lr}
   804ae:	460c      	mov	r4, r1
	if (UART == (Uart*)p_usart) {
   804b0:	4b1e      	ldr	r3, [pc, #120]	; (8052c <usart_serial_putchar+0x80>)
   804b2:	4298      	cmp	r0, r3
   804b4:	d00d      	beq.n	804d2 <usart_serial_putchar+0x26>
	if (USART0 == p_usart) {
   804b6:	4b1e      	ldr	r3, [pc, #120]	; (80530 <usart_serial_putchar+0x84>)
   804b8:	4298      	cmp	r0, r3
   804ba:	d013      	beq.n	804e4 <usart_serial_putchar+0x38>
	if (USART1 == p_usart) {
   804bc:	4b1d      	ldr	r3, [pc, #116]	; (80534 <usart_serial_putchar+0x88>)
   804be:	4298      	cmp	r0, r3
   804c0:	d019      	beq.n	804f6 <usart_serial_putchar+0x4a>
	if (USART2 == p_usart) {
   804c2:	4b1d      	ldr	r3, [pc, #116]	; (80538 <usart_serial_putchar+0x8c>)
   804c4:	4298      	cmp	r0, r3
   804c6:	d01f      	beq.n	80508 <usart_serial_putchar+0x5c>
	if (USART3 == p_usart) {
   804c8:	4b1c      	ldr	r3, [pc, #112]	; (8053c <usart_serial_putchar+0x90>)
   804ca:	4298      	cmp	r0, r3
   804cc:	d025      	beq.n	8051a <usart_serial_putchar+0x6e>
	return 0;
   804ce:	2000      	movs	r0, #0
}
   804d0:	bd70      	pop	{r4, r5, r6, pc}
		while (uart_write((Uart*)p_usart, c)!=0);
   804d2:	461e      	mov	r6, r3
   804d4:	4d1a      	ldr	r5, [pc, #104]	; (80540 <usart_serial_putchar+0x94>)
   804d6:	4621      	mov	r1, r4
   804d8:	4630      	mov	r0, r6
   804da:	47a8      	blx	r5
   804dc:	2800      	cmp	r0, #0
   804de:	d1fa      	bne.n	804d6 <usart_serial_putchar+0x2a>
		return 1;
   804e0:	2001      	movs	r0, #1
   804e2:	bd70      	pop	{r4, r5, r6, pc}
		while (usart_write(p_usart, c)!=0);
   804e4:	461e      	mov	r6, r3
   804e6:	4d17      	ldr	r5, [pc, #92]	; (80544 <usart_serial_putchar+0x98>)
   804e8:	4621      	mov	r1, r4
   804ea:	4630      	mov	r0, r6
   804ec:	47a8      	blx	r5
   804ee:	2800      	cmp	r0, #0
   804f0:	d1fa      	bne.n	804e8 <usart_serial_putchar+0x3c>
		return 1;
   804f2:	2001      	movs	r0, #1
   804f4:	bd70      	pop	{r4, r5, r6, pc}
		while (usart_write(p_usart, c)!=0);
   804f6:	461e      	mov	r6, r3
   804f8:	4d12      	ldr	r5, [pc, #72]	; (80544 <usart_serial_putchar+0x98>)
   804fa:	4621      	mov	r1, r4
   804fc:	4630      	mov	r0, r6
   804fe:	47a8      	blx	r5
   80500:	2800      	cmp	r0, #0
   80502:	d1fa      	bne.n	804fa <usart_serial_putchar+0x4e>
		return 1;
   80504:	2001      	movs	r0, #1
   80506:	bd70      	pop	{r4, r5, r6, pc}
		while (usart_write(p_usart, c)!=0);
   80508:	461e      	mov	r6, r3
   8050a:	4d0e      	ldr	r5, [pc, #56]	; (80544 <usart_serial_putchar+0x98>)
   8050c:	4621      	mov	r1, r4
   8050e:	4630      	mov	r0, r6
   80510:	47a8      	blx	r5
   80512:	2800      	cmp	r0, #0
   80514:	d1fa      	bne.n	8050c <usart_serial_putchar+0x60>
		return 1;
   80516:	2001      	movs	r0, #1
   80518:	bd70      	pop	{r4, r5, r6, pc}
		while (usart_write(p_usart, c)!=0);
   8051a:	461e      	mov	r6, r3
   8051c:	4d09      	ldr	r5, [pc, #36]	; (80544 <usart_serial_putchar+0x98>)
   8051e:	4621      	mov	r1, r4
   80520:	4630      	mov	r0, r6
   80522:	47a8      	blx	r5
   80524:	2800      	cmp	r0, #0
   80526:	d1fa      	bne.n	8051e <usart_serial_putchar+0x72>
		return 1;
   80528:	2001      	movs	r0, #1
   8052a:	bd70      	pop	{r4, r5, r6, pc}
   8052c:	400e0800 	.word	0x400e0800
   80530:	40098000 	.word	0x40098000
   80534:	4009c000 	.word	0x4009c000
   80538:	400a0000 	.word	0x400a0000
   8053c:	400a4000 	.word	0x400a4000
   80540:	000803df 	.word	0x000803df
   80544:	0008019d 	.word	0x0008019d

00080548 <configureConsole>:
#include "consoleFunctions.h"

void configureConsole(void)
/* Enables feedback through the USB-cable back to terminal within Atmel Studio */
/* Note that  the baudrate, parity and other parameters must be set in conf/conf_uart_serial.h */
{
   80548:	b530      	push	{r4, r5, lr}
   8054a:	b085      	sub	sp, #20
 *
 * \param ul_id Id (number) of the peripheral clock.
 */
static inline void sysclk_enable_peripheral_clock(uint32_t ul_id)
{
	pmc_enable_periph_clk(ul_id);
   8054c:	2008      	movs	r0, #8
   8054e:	4d15      	ldr	r5, [pc, #84]	; (805a4 <configureConsole+0x5c>)
   80550:	47a8      	blx	r5
 * \param opt         Options needed to set up RS232 communication (see \ref usart_options_t).
 *
 */
static inline void stdio_serial_init(volatile void *usart, const usart_serial_options_t *opt)
{
	stdio_base = (void *)usart;
   80552:	4c15      	ldr	r4, [pc, #84]	; (805a8 <configureConsole+0x60>)
   80554:	4b15      	ldr	r3, [pc, #84]	; (805ac <configureConsole+0x64>)
   80556:	601c      	str	r4, [r3, #0]
	ptr_put = (int (*)(void volatile*,char))&usart_serial_putchar;
   80558:	4a15      	ldr	r2, [pc, #84]	; (805b0 <configureConsole+0x68>)
   8055a:	4b16      	ldr	r3, [pc, #88]	; (805b4 <configureConsole+0x6c>)
   8055c:	601a      	str	r2, [r3, #0]
	ptr_get = (void (*)(void volatile*,char*))&usart_serial_getchar;
   8055e:	4a16      	ldr	r2, [pc, #88]	; (805b8 <configureConsole+0x70>)
   80560:	4b16      	ldr	r3, [pc, #88]	; (805bc <configureConsole+0x74>)
   80562:	601a      	str	r2, [r3, #0]
	uart_settings.ul_mck = sysclk_get_peripheral_hz();
   80564:	4b16      	ldr	r3, [pc, #88]	; (805c0 <configureConsole+0x78>)
   80566:	9301      	str	r3, [sp, #4]
	uart_settings.ul_baudrate = opt->baudrate;
   80568:	f44f 33e1 	mov.w	r3, #115200	; 0x1c200
   8056c:	9302      	str	r3, [sp, #8]
	uart_settings.ul_mode = opt->paritytype;
   8056e:	f44f 6300 	mov.w	r3, #2048	; 0x800
   80572:	9303      	str	r3, [sp, #12]
   80574:	2008      	movs	r0, #8
   80576:	47a8      	blx	r5
		uart_init((Uart*)p_usart, &uart_settings);
   80578:	a901      	add	r1, sp, #4
   8057a:	4620      	mov	r0, r4
   8057c:	4b11      	ldr	r3, [pc, #68]	; (805c4 <configureConsole+0x7c>)
   8057e:	4798      	blx	r3
	fdevopen((int (*)(char, FILE*))(_write),(int (*)(FILE*))(_read));
#  endif
#  if UC3 || SAM
	// For AVR32 and SAM GCC
	// Specify that stdout and stdin should not be buffered.
	setbuf(stdout, NULL);
   80580:	4d11      	ldr	r5, [pc, #68]	; (805c8 <configureConsole+0x80>)
   80582:	682b      	ldr	r3, [r5, #0]
   80584:	2100      	movs	r1, #0
   80586:	6898      	ldr	r0, [r3, #8]
   80588:	4c10      	ldr	r4, [pc, #64]	; (805cc <configureConsole+0x84>)
   8058a:	47a0      	blx	r4
	setbuf(stdin, NULL);
   8058c:	682b      	ldr	r3, [r5, #0]
   8058e:	2100      	movs	r1, #0
   80590:	6858      	ldr	r0, [r3, #4]
   80592:	47a0      	blx	r4

	/* Configure console UART. */
	sysclk_enable_peripheral_clock(CONSOLE_UART_ID);
	stdio_serial_init(CONF_UART, &uart_serial_options);
	
	printf("Console ready\n");
   80594:	480e      	ldr	r0, [pc, #56]	; (805d0 <configureConsole+0x88>)
   80596:	4c0f      	ldr	r4, [pc, #60]	; (805d4 <configureConsole+0x8c>)
   80598:	47a0      	blx	r4
	printf("=============\n");
   8059a:	480f      	ldr	r0, [pc, #60]	; (805d8 <configureConsole+0x90>)
   8059c:	47a0      	blx	r4
   8059e:	b005      	add	sp, #20
   805a0:	bd30      	pop	{r4, r5, pc}
   805a2:	bf00      	nop
   805a4:	00080a55 	.word	0x00080a55
   805a8:	400e0800 	.word	0x400e0800
   805ac:	20070c4c 	.word	0x20070c4c
   805b0:	000804ad 	.word	0x000804ad
   805b4:	20070c48 	.word	0x20070c48
   805b8:	00080401 	.word	0x00080401
   805bc:	20070c44 	.word	0x20070c44
   805c0:	0501bd00 	.word	0x0501bd00
   805c4:	000803a9 	.word	0x000803a9
   805c8:	20070134 	.word	0x20070134
   805cc:	00080e09 	.word	0x00080e09
   805d0:	00083b74 	.word	0x00083b74
   805d4:	00080d45 	.word	0x00080d45
   805d8:	00083b84 	.word	0x00083b84

000805dc <sysclk_init>:
	pmc_disable_udpck();
}
#endif // CONFIG_USBCLK_SOURCE

void sysclk_init(void)
{
   805dc:	b510      	push	{r4, lr}
	struct pll_config pllcfg;

	/* Set flash wait state to max in case the below clock switching. */
	system_init_flash(CHIP_FREQ_CPU_MAX);
   805de:	480e      	ldr	r0, [pc, #56]	; (80618 <sysclk_init+0x3c>)
   805e0:	4b0e      	ldr	r3, [pc, #56]	; (8061c <sysclk_init+0x40>)
   805e2:	4798      	blx	r3
		pmc_switch_mainck_to_fastrc(CKGR_MOR_MOSCRCF_12_MHz);
		break;


	case OSC_MAINCK_XTAL:
		pmc_switch_mainck_to_xtal(PMC_OSC_XTAL,
   805e4:	213e      	movs	r1, #62	; 0x3e
   805e6:	2000      	movs	r0, #0
   805e8:	4b0d      	ldr	r3, [pc, #52]	; (80620 <sysclk_init+0x44>)
   805ea:	4798      	blx	r3
	case OSC_MAINCK_4M_RC:
	case OSC_MAINCK_8M_RC:
	case OSC_MAINCK_12M_RC:
	case OSC_MAINCK_XTAL:
	case OSC_MAINCK_BYPASS:
		return pmc_osc_is_ready_mainck();
   805ec:	4c0d      	ldr	r4, [pc, #52]	; (80624 <sysclk_init+0x48>)
   805ee:	47a0      	blx	r4
 *
 * \param id A number identifying the oscillator to wait for.
 */
static inline void osc_wait_ready(uint8_t id)
{
	while (!osc_is_ready(id)) {
   805f0:	2800      	cmp	r0, #0
   805f2:	d0fc      	beq.n	805ee <sysclk_init+0x12>
static inline void pll_enable(const struct pll_config *p_cfg, uint32_t ul_pll_id)
{
	Assert(ul_pll_id < NR_PLLS);

	if (ul_pll_id == PLLA_ID) {
		pmc_disable_pllack(); // Always stop PLL first!
   805f4:	4b0c      	ldr	r3, [pc, #48]	; (80628 <sysclk_init+0x4c>)
   805f6:	4798      	blx	r3
		PMC->CKGR_PLLAR = CKGR_PLLAR_ONE | p_cfg->ctrl;
   805f8:	4a0c      	ldr	r2, [pc, #48]	; (8062c <sysclk_init+0x50>)
   805fa:	4b0d      	ldr	r3, [pc, #52]	; (80630 <sysclk_init+0x54>)
   805fc:	629a      	str	r2, [r3, #40]	; 0x28
static inline uint32_t pll_is_locked(uint32_t ul_pll_id)
{
	Assert(ul_pll_id < NR_PLLS);

	if (ul_pll_id == PLLA_ID) {
		return pmc_is_locked_pllack();
   805fe:	4c0d      	ldr	r4, [pc, #52]	; (80634 <sysclk_init+0x58>)
   80600:	47a0      	blx	r4
 */
static inline int pll_wait_for_lock(unsigned int pll_id)
{
	Assert(pll_id < NR_PLLS);

	while (!pll_is_locked(pll_id)) {
   80602:	2800      	cmp	r0, #0
   80604:	d0fc      	beq.n	80600 <sysclk_init+0x24>
	else if (CONFIG_SYSCLK_SOURCE == SYSCLK_SRC_PLLACK) {
		pll_enable_source(CONFIG_PLL0_SOURCE);
		pll_config_defaults(&pllcfg, 0);
		pll_enable(&pllcfg, 0);
		pll_wait_for_lock(0);
		pmc_switch_mck_to_pllack(CONFIG_SYSCLK_PRES);
   80606:	2010      	movs	r0, #16
   80608:	4b0b      	ldr	r3, [pc, #44]	; (80638 <sysclk_init+0x5c>)
   8060a:	4798      	blx	r3
		pll_wait_for_lock(1);
		pmc_switch_mck_to_upllck(CONFIG_SYSCLK_PRES);
	}

	/* Update the SystemFrequency variable */
	SystemCoreClockUpdate();
   8060c:	4b0b      	ldr	r3, [pc, #44]	; (8063c <sysclk_init+0x60>)
   8060e:	4798      	blx	r3

	/* Set a flash wait state depending on the new cpu frequency */
	system_init_flash(sysclk_get_cpu_hz());
   80610:	4801      	ldr	r0, [pc, #4]	; (80618 <sysclk_init+0x3c>)
   80612:	4b02      	ldr	r3, [pc, #8]	; (8061c <sysclk_init+0x40>)
   80614:	4798      	blx	r3
   80616:	bd10      	pop	{r4, pc}
   80618:	0501bd00 	.word	0x0501bd00
   8061c:	200700a5 	.word	0x200700a5
   80620:	000809d1 	.word	0x000809d1
   80624:	00080a25 	.word	0x00080a25
   80628:	00080a35 	.word	0x00080a35
   8062c:	200d3f01 	.word	0x200d3f01
   80630:	400e0600 	.word	0x400e0600
   80634:	00080a45 	.word	0x00080a45
   80638:	0008096d 	.word	0x0008096d
   8063c:	00080b45 	.word	0x00080b45

00080640 <board_init>:
#include "conf_board.h"
#include "gpio.h"
#include "ioport.h"

void board_init(void)
{
   80640:	b510      	push	{r4, lr}
#ifndef CONF_BOARD_KEEP_WATCHDOG_AT_INIT
	/* Disable the watchdog */
	WDT->WDT_MR = WDT_MR_WDDIS;
   80642:	f44f 4200 	mov.w	r2, #32768	; 0x8000
   80646:	4b16      	ldr	r3, [pc, #88]	; (806a0 <board_init+0x60>)
   80648:	605a      	str	r2, [r3, #4]
   8064a:	200b      	movs	r0, #11
   8064c:	4c15      	ldr	r4, [pc, #84]	; (806a4 <board_init+0x64>)
   8064e:	47a0      	blx	r4
   80650:	200c      	movs	r0, #12
   80652:	47a0      	blx	r4
   80654:	200d      	movs	r0, #13
   80656:	47a0      	blx	r4
   80658:	200e      	movs	r0, #14
   8065a:	47a0      	blx	r4
	 * In new designs IOPORT is used instead.
	 * Here IOPORT must be initialized for others to use before setting up IO.
	 */
	ioport_init();
	/* Configure LED pins */
	gpio_configure_pin(LED0_GPIO, LED0_FLAGS);
   8065c:	f04f 5160 	mov.w	r1, #939524096	; 0x38000000
   80660:	203b      	movs	r0, #59	; 0x3b
   80662:	4c11      	ldr	r4, [pc, #68]	; (806a8 <board_init+0x68>)
   80664:	47a0      	blx	r4
	gpio_configure_pin(LED1_GPIO, LED1_FLAGS);
   80666:	f04f 5160 	mov.w	r1, #939524096	; 0x38000000
   8066a:	2055      	movs	r0, #85	; 0x55
   8066c:	47a0      	blx	r4
	gpio_configure_pin(LED2_GPIO, LED2_FLAGS);
   8066e:	f04f 5160 	mov.w	r1, #939524096	; 0x38000000
   80672:	2056      	movs	r0, #86	; 0x56
   80674:	47a0      	blx	r4

	/* Configure Push Button pins */
	gpio_configure_pin(GPIO_PUSH_BUTTON_1, GPIO_PUSH_BUTTON_1_FLAGS);
   80676:	490d      	ldr	r1, [pc, #52]	; (806ac <board_init+0x6c>)
   80678:	2068      	movs	r0, #104	; 0x68
   8067a:	47a0      	blx	r4
	gpio_configure_pin(GPIO_PUSH_BUTTON_2, GPIO_PUSH_BUTTON_2_FLAGS);
   8067c:	490c      	ldr	r1, [pc, #48]	; (806b0 <board_init+0x70>)
   8067e:	205c      	movs	r0, #92	; 0x5c
   80680:	47a0      	blx	r4

#ifdef CONF_BOARD_UART_CONSOLE
	/* Configure UART pins */
	gpio_configure_group(PINS_UART_PIO, PINS_UART, PINS_UART_FLAGS);
   80682:	4a0c      	ldr	r2, [pc, #48]	; (806b4 <board_init+0x74>)
   80684:	f44f 7140 	mov.w	r1, #768	; 0x300
   80688:	480b      	ldr	r0, [pc, #44]	; (806b8 <board_init+0x78>)
   8068a:	4b0c      	ldr	r3, [pc, #48]	; (806bc <board_init+0x7c>)
   8068c:	4798      	blx	r3
	gpio_configure_pin(PIN_USART0_TXD_IDX, PIN_USART0_TXD_FLAGS);
#endif

#ifdef CONF_BOARD_USB_PORT
	/* Configure USB_ID (UOTGID) pin */
	gpio_configure_pin(USB_ID_GPIO, USB_ID_FLAGS);
   8068e:	f04f 6100 	mov.w	r1, #134217728	; 0x8000000
   80692:	202b      	movs	r0, #43	; 0x2b
   80694:	47a0      	blx	r4
	/* Configure USB_VBOF (UOTGVBOF) pin */
	gpio_configure_pin(USB_VBOF_GPIO, USB_VBOF_FLAGS);
   80696:	f04f 6100 	mov.w	r1, #134217728	; 0x8000000
   8069a:	202a      	movs	r0, #42	; 0x2a
   8069c:	47a0      	blx	r4
   8069e:	bd10      	pop	{r4, pc}
   806a0:	400e1a50 	.word	0x400e1a50
   806a4:	00080a55 	.word	0x00080a55
   806a8:	00080761 	.word	0x00080761
   806ac:	28000079 	.word	0x28000079
   806b0:	28000001 	.word	0x28000001
   806b4:	08000001 	.word	0x08000001
   806b8:	400e0e00 	.word	0x400e0e00
   806bc:	00080831 	.word	0x00080831

000806c0 <pio_set_peripheral>:
		const uint32_t ul_mask)
{
	uint32_t ul_sr;

	/* Disable interrupts on the pin(s) */
	p_pio->PIO_IDR = ul_mask;
   806c0:	6442      	str	r2, [r0, #68]	; 0x44
	case PIO_OUTPUT_1:
	case PIO_NOT_A_PIN:
		return;
	}
#elif (SAM3XA|| SAM3U)
	switch (ul_type) {
   806c2:	f1b1 5f80 	cmp.w	r1, #268435456	; 0x10000000
   806c6:	d016      	beq.n	806f6 <pio_set_peripheral+0x36>
   806c8:	d80b      	bhi.n	806e2 <pio_set_peripheral+0x22>
   806ca:	b149      	cbz	r1, 806e0 <pio_set_peripheral+0x20>
   806cc:	f1b1 6f00 	cmp.w	r1, #134217728	; 0x8000000
   806d0:	d105      	bne.n	806de <pio_set_peripheral+0x1e>
	case PIO_PERIPH_A:
		ul_sr = p_pio->PIO_ABSR;
   806d2:	6f03      	ldr	r3, [r0, #112]	; 0x70
		p_pio->PIO_ABSR &= (~ul_mask & ul_sr);
   806d4:	6f01      	ldr	r1, [r0, #112]	; 0x70
   806d6:	400b      	ands	r3, r1
   806d8:	ea23 0302 	bic.w	r3, r3, r2
   806dc:	6703      	str	r3, [r0, #112]	; 0x70
#else
#error "Unsupported device"
#endif

	/* Remove the pins from under the control of PIO */
	p_pio->PIO_PDR = ul_mask;
   806de:	6042      	str	r2, [r0, #4]
   806e0:	4770      	bx	lr
	switch (ul_type) {
   806e2:	f1b1 5f40 	cmp.w	r1, #805306368	; 0x30000000
   806e6:	d0fb      	beq.n	806e0 <pio_set_peripheral+0x20>
   806e8:	f1b1 5f60 	cmp.w	r1, #939524096	; 0x38000000
   806ec:	d0f8      	beq.n	806e0 <pio_set_peripheral+0x20>
   806ee:	f1b1 5f20 	cmp.w	r1, #671088640	; 0x28000000
   806f2:	d1f4      	bne.n	806de <pio_set_peripheral+0x1e>
   806f4:	4770      	bx	lr
		ul_sr = p_pio->PIO_ABSR;
   806f6:	6f03      	ldr	r3, [r0, #112]	; 0x70
		p_pio->PIO_ABSR = (ul_mask | ul_sr);
   806f8:	4313      	orrs	r3, r2
   806fa:	6703      	str	r3, [r0, #112]	; 0x70
		break;
   806fc:	e7ef      	b.n	806de <pio_set_peripheral+0x1e>

000806fe <pio_set_input>:
 * \param p_pio Pointer to a PIO instance.
 * \param ul_mask Interrupt sources bit map.
 */
void pio_disable_interrupt(Pio *p_pio, const uint32_t ul_mask)
{
	p_pio->PIO_IDR = ul_mask;
   806fe:	6441      	str	r1, [r0, #68]	; 0x44
	if (ul_pull_up_enable) {
   80700:	f012 0f01 	tst.w	r2, #1
		p_pio->PIO_PUER = ul_mask;
   80704:	bf14      	ite	ne
   80706:	6641      	strne	r1, [r0, #100]	; 0x64
		p_pio->PIO_PUDR = ul_mask;
   80708:	6601      	streq	r1, [r0, #96]	; 0x60
	if (ul_attribute & (PIO_DEGLITCH | PIO_DEBOUNCE)) {
   8070a:	f012 0f0a 	tst.w	r2, #10
		p_pio->PIO_IFER = ul_mask;
   8070e:	bf14      	ite	ne
   80710:	6201      	strne	r1, [r0, #32]
		p_pio->PIO_IFDR = ul_mask;
   80712:	6241      	streq	r1, [r0, #36]	; 0x24
	if (ul_attribute & PIO_DEGLITCH) {
   80714:	f012 0f02 	tst.w	r2, #2
   80718:	d107      	bne.n	8072a <pio_set_input+0x2c>
		if (ul_attribute & PIO_DEBOUNCE) {
   8071a:	f012 0f08 	tst.w	r2, #8
			p_pio->PIO_DIFSR = ul_mask;
   8071e:	bf18      	it	ne
   80720:	f8c0 1084 	strne.w	r1, [r0, #132]	; 0x84
	p_pio->PIO_ODR = ul_mask;
   80724:	6141      	str	r1, [r0, #20]
	p_pio->PIO_PER = ul_mask;
   80726:	6001      	str	r1, [r0, #0]
   80728:	4770      	bx	lr
		p_pio->PIO_SCIFSR = ul_mask;
   8072a:	f8c0 1080 	str.w	r1, [r0, #128]	; 0x80
   8072e:	e7f9      	b.n	80724 <pio_set_input+0x26>

00080730 <pio_set_output>:
{
   80730:	b410      	push	{r4}
   80732:	9c01      	ldr	r4, [sp, #4]
	p_pio->PIO_IDR = ul_mask;
   80734:	6441      	str	r1, [r0, #68]	; 0x44
	if (ul_pull_up_enable) {
   80736:	b944      	cbnz	r4, 8074a <pio_set_output+0x1a>
		p_pio->PIO_PUDR = ul_mask;
   80738:	6601      	str	r1, [r0, #96]	; 0x60
	if (ul_multidrive_enable) {
   8073a:	b143      	cbz	r3, 8074e <pio_set_output+0x1e>
		p_pio->PIO_MDER = ul_mask;
   8073c:	6501      	str	r1, [r0, #80]	; 0x50
	if (ul_default_level) {
   8073e:	b942      	cbnz	r2, 80752 <pio_set_output+0x22>
		p_pio->PIO_CODR = ul_mask;
   80740:	6341      	str	r1, [r0, #52]	; 0x34
	p_pio->PIO_OER = ul_mask;
   80742:	6101      	str	r1, [r0, #16]
	p_pio->PIO_PER = ul_mask;
   80744:	6001      	str	r1, [r0, #0]
}
   80746:	bc10      	pop	{r4}
   80748:	4770      	bx	lr
		p_pio->PIO_PUER = ul_mask;
   8074a:	6641      	str	r1, [r0, #100]	; 0x64
   8074c:	e7f5      	b.n	8073a <pio_set_output+0xa>
		p_pio->PIO_MDDR = ul_mask;
   8074e:	6541      	str	r1, [r0, #84]	; 0x54
   80750:	e7f5      	b.n	8073e <pio_set_output+0xe>
		p_pio->PIO_SODR = ul_mask;
   80752:	6301      	str	r1, [r0, #48]	; 0x30
   80754:	e7f5      	b.n	80742 <pio_set_output+0x12>

00080756 <pio_get_interrupt_status>:
 *
 * \return The interrupt status value.
 */
uint32_t pio_get_interrupt_status(const Pio *p_pio)
{
	return p_pio->PIO_ISR;
   80756:	6cc0      	ldr	r0, [r0, #76]	; 0x4c
}
   80758:	4770      	bx	lr

0008075a <pio_get_interrupt_mask>:
 *
 * \return The interrupt mask value.
 */
uint32_t pio_get_interrupt_mask(const Pio *p_pio)
{
	return p_pio->PIO_IMR;
   8075a:	6c80      	ldr	r0, [r0, #72]	; 0x48
}
   8075c:	4770      	bx	lr
	...

00080760 <pio_configure_pin>:
 * \param ul_flags Pins attributes.
 *
 * \return Whether the pin(s) have been configured properly.
 */
uint32_t pio_configure_pin(uint32_t ul_pin, const uint32_t ul_flags)
{
   80760:	b570      	push	{r4, r5, r6, lr}
   80762:	b082      	sub	sp, #8
   80764:	460d      	mov	r5, r1
		p_pio = PIOC;
	} else {
		p_pio = (Pio *)((uint32_t)PIOA + (PIO_DELTA * (ul_pin >> 5)));
	}
#else
	p_pio = (Pio *)((uint32_t)PIOA + (PIO_DELTA * (ul_pin >> 5)));
   80766:	0943      	lsrs	r3, r0, #5
   80768:	f503 1300 	add.w	r3, r3, #2097152	; 0x200000
   8076c:	f203 7307 	addw	r3, r3, #1799	; 0x707
   80770:	025c      	lsls	r4, r3, #9
	switch (ul_flags & PIO_TYPE_Msk) {
   80772:	f001 43f0 	and.w	r3, r1, #2013265920	; 0x78000000
   80776:	f1b3 5f20 	cmp.w	r3, #671088640	; 0x28000000
   8077a:	d031      	beq.n	807e0 <pio_configure_pin+0x80>
   8077c:	d816      	bhi.n	807ac <pio_configure_pin+0x4c>
   8077e:	f1b3 6f00 	cmp.w	r3, #134217728	; 0x8000000
   80782:	d01b      	beq.n	807bc <pio_configure_pin+0x5c>
   80784:	f1b3 5f80 	cmp.w	r3, #268435456	; 0x10000000
   80788:	d116      	bne.n	807b8 <pio_configure_pin+0x58>
		pio_set_peripheral(p_pio, PIO_PERIPH_B, (1 << (ul_pin & 0x1F)));
   8078a:	f000 001f 	and.w	r0, r0, #31
   8078e:	2601      	movs	r6, #1
   80790:	4086      	lsls	r6, r0
   80792:	4632      	mov	r2, r6
   80794:	f04f 5180 	mov.w	r1, #268435456	; 0x10000000
   80798:	4620      	mov	r0, r4
   8079a:	4b22      	ldr	r3, [pc, #136]	; (80824 <pio_configure_pin+0xc4>)
   8079c:	4798      	blx	r3
	if (ul_pull_up_enable) {
   8079e:	f015 0f01 	tst.w	r5, #1
		p_pio->PIO_PUER = ul_mask;
   807a2:	bf14      	ite	ne
   807a4:	6666      	strne	r6, [r4, #100]	; 0x64
		p_pio->PIO_PUDR = ul_mask;
   807a6:	6626      	streq	r6, [r4, #96]	; 0x60
	return 1;
   807a8:	2001      	movs	r0, #1
   807aa:	e017      	b.n	807dc <pio_configure_pin+0x7c>
	switch (ul_flags & PIO_TYPE_Msk) {
   807ac:	f1b3 5f40 	cmp.w	r3, #805306368	; 0x30000000
   807b0:	d021      	beq.n	807f6 <pio_configure_pin+0x96>
   807b2:	f1b3 5f60 	cmp.w	r3, #939524096	; 0x38000000
   807b6:	d01e      	beq.n	807f6 <pio_configure_pin+0x96>
		return 0;
   807b8:	2000      	movs	r0, #0
   807ba:	e00f      	b.n	807dc <pio_configure_pin+0x7c>
		pio_set_peripheral(p_pio, PIO_PERIPH_A, (1 << (ul_pin & 0x1F)));
   807bc:	f000 001f 	and.w	r0, r0, #31
   807c0:	2601      	movs	r6, #1
   807c2:	4086      	lsls	r6, r0
   807c4:	4632      	mov	r2, r6
   807c6:	f04f 6100 	mov.w	r1, #134217728	; 0x8000000
   807ca:	4620      	mov	r0, r4
   807cc:	4b15      	ldr	r3, [pc, #84]	; (80824 <pio_configure_pin+0xc4>)
   807ce:	4798      	blx	r3
	if (ul_pull_up_enable) {
   807d0:	f015 0f01 	tst.w	r5, #1
		p_pio->PIO_PUER = ul_mask;
   807d4:	bf14      	ite	ne
   807d6:	6666      	strne	r6, [r4, #100]	; 0x64
		p_pio->PIO_PUDR = ul_mask;
   807d8:	6626      	streq	r6, [r4, #96]	; 0x60
	return 1;
   807da:	2001      	movs	r0, #1
}
   807dc:	b002      	add	sp, #8
   807de:	bd70      	pop	{r4, r5, r6, pc}
		pio_set_input(p_pio, (1 << (ul_pin & 0x1F)), ul_flags);
   807e0:	f000 011f 	and.w	r1, r0, #31
   807e4:	2601      	movs	r6, #1
   807e6:	462a      	mov	r2, r5
   807e8:	fa06 f101 	lsl.w	r1, r6, r1
   807ec:	4620      	mov	r0, r4
   807ee:	4b0e      	ldr	r3, [pc, #56]	; (80828 <pio_configure_pin+0xc8>)
   807f0:	4798      	blx	r3
	return 1;
   807f2:	4630      	mov	r0, r6
		break;
   807f4:	e7f2      	b.n	807dc <pio_configure_pin+0x7c>
				((ul_flags & PIO_TYPE_PIO_OUTPUT_1)
   807f6:	f005 5260 	and.w	r2, r5, #939524096	; 0x38000000
		pio_set_output(p_pio, (1 << (ul_pin & 0x1F)),
   807fa:	f000 011f 	and.w	r1, r0, #31
   807fe:	2601      	movs	r6, #1
   80800:	ea05 0306 	and.w	r3, r5, r6
   80804:	9300      	str	r3, [sp, #0]
   80806:	f3c5 0380 	ubfx	r3, r5, #2, #1
   8080a:	f1b2 5f60 	cmp.w	r2, #939524096	; 0x38000000
   8080e:	bf14      	ite	ne
   80810:	2200      	movne	r2, #0
   80812:	2201      	moveq	r2, #1
   80814:	fa06 f101 	lsl.w	r1, r6, r1
   80818:	4620      	mov	r0, r4
   8081a:	4c04      	ldr	r4, [pc, #16]	; (8082c <pio_configure_pin+0xcc>)
   8081c:	47a0      	blx	r4
	return 1;
   8081e:	4630      	mov	r0, r6
		break;
   80820:	e7dc      	b.n	807dc <pio_configure_pin+0x7c>
   80822:	bf00      	nop
   80824:	000806c1 	.word	0x000806c1
   80828:	000806ff 	.word	0x000806ff
   8082c:	00080731 	.word	0x00080731

00080830 <pio_configure_pin_group>:
{
   80830:	b570      	push	{r4, r5, r6, lr}
   80832:	b082      	sub	sp, #8
   80834:	4605      	mov	r5, r0
   80836:	460e      	mov	r6, r1
   80838:	4614      	mov	r4, r2
	switch (ul_flags & PIO_TYPE_Msk) {
   8083a:	f002 43f0 	and.w	r3, r2, #2013265920	; 0x78000000
   8083e:	f1b3 5f20 	cmp.w	r3, #671088640	; 0x28000000
   80842:	d027      	beq.n	80894 <pio_configure_pin_group+0x64>
   80844:	d811      	bhi.n	8086a <pio_configure_pin_group+0x3a>
   80846:	f1b3 6f00 	cmp.w	r3, #134217728	; 0x8000000
   8084a:	d016      	beq.n	8087a <pio_configure_pin_group+0x4a>
   8084c:	f1b3 5f80 	cmp.w	r3, #268435456	; 0x10000000
   80850:	d111      	bne.n	80876 <pio_configure_pin_group+0x46>
		pio_set_peripheral(p_pio, PIO_PERIPH_B, ul_mask);
   80852:	460a      	mov	r2, r1
   80854:	f04f 5180 	mov.w	r1, #268435456	; 0x10000000
   80858:	4b19      	ldr	r3, [pc, #100]	; (808c0 <pio_configure_pin_group+0x90>)
   8085a:	4798      	blx	r3
	if (ul_pull_up_enable) {
   8085c:	f014 0f01 	tst.w	r4, #1
		p_pio->PIO_PUER = ul_mask;
   80860:	bf14      	ite	ne
   80862:	666e      	strne	r6, [r5, #100]	; 0x64
		p_pio->PIO_PUDR = ul_mask;
   80864:	662e      	streq	r6, [r5, #96]	; 0x60
	return 1;
   80866:	2001      	movs	r0, #1
   80868:	e012      	b.n	80890 <pio_configure_pin_group+0x60>
	switch (ul_flags & PIO_TYPE_Msk) {
   8086a:	f1b3 5f40 	cmp.w	r3, #805306368	; 0x30000000
   8086e:	d015      	beq.n	8089c <pio_configure_pin_group+0x6c>
   80870:	f1b3 5f60 	cmp.w	r3, #939524096	; 0x38000000
   80874:	d012      	beq.n	8089c <pio_configure_pin_group+0x6c>
		return 0;
   80876:	2000      	movs	r0, #0
   80878:	e00a      	b.n	80890 <pio_configure_pin_group+0x60>
		pio_set_peripheral(p_pio, PIO_PERIPH_A, ul_mask);
   8087a:	460a      	mov	r2, r1
   8087c:	f04f 6100 	mov.w	r1, #134217728	; 0x8000000
   80880:	4b0f      	ldr	r3, [pc, #60]	; (808c0 <pio_configure_pin_group+0x90>)
   80882:	4798      	blx	r3
	if (ul_pull_up_enable) {
   80884:	f014 0f01 	tst.w	r4, #1
		p_pio->PIO_PUER = ul_mask;
   80888:	bf14      	ite	ne
   8088a:	666e      	strne	r6, [r5, #100]	; 0x64
		p_pio->PIO_PUDR = ul_mask;
   8088c:	662e      	streq	r6, [r5, #96]	; 0x60
	return 1;
   8088e:	2001      	movs	r0, #1
}
   80890:	b002      	add	sp, #8
   80892:	bd70      	pop	{r4, r5, r6, pc}
		pio_set_input(p_pio, ul_mask, ul_flags);
   80894:	4b0b      	ldr	r3, [pc, #44]	; (808c4 <pio_configure_pin_group+0x94>)
   80896:	4798      	blx	r3
	return 1;
   80898:	2001      	movs	r0, #1
		break;
   8089a:	e7f9      	b.n	80890 <pio_configure_pin_group+0x60>
				((ul_flags & PIO_TYPE_PIO_OUTPUT_1)
   8089c:	f004 5260 	and.w	r2, r4, #939524096	; 0x38000000
		pio_set_output(p_pio, ul_mask,
   808a0:	f004 0301 	and.w	r3, r4, #1
   808a4:	9300      	str	r3, [sp, #0]
   808a6:	f3c4 0380 	ubfx	r3, r4, #2, #1
   808aa:	f1b2 5f60 	cmp.w	r2, #939524096	; 0x38000000
   808ae:	bf14      	ite	ne
   808b0:	2200      	movne	r2, #0
   808b2:	2201      	moveq	r2, #1
   808b4:	4631      	mov	r1, r6
   808b6:	4628      	mov	r0, r5
   808b8:	4c03      	ldr	r4, [pc, #12]	; (808c8 <pio_configure_pin_group+0x98>)
   808ba:	47a0      	blx	r4
	return 1;
   808bc:	2001      	movs	r0, #1
		break;
   808be:	e7e7      	b.n	80890 <pio_configure_pin_group+0x60>
   808c0:	000806c1 	.word	0x000806c1
   808c4:	000806ff 	.word	0x000806ff
   808c8:	00080731 	.word	0x00080731

000808cc <pio_handler_process>:
 *
 * \param p_pio PIO controller base address.
 * \param ul_id PIO controller ID.
 */
void pio_handler_process(Pio *p_pio, uint32_t ul_id)
{
   808cc:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
   808d0:	4604      	mov	r4, r0
   808d2:	4688      	mov	r8, r1
	uint32_t status;
	uint32_t i;

	/* Read PIO controller status */
	status = pio_get_interrupt_status(p_pio);
   808d4:	4b0e      	ldr	r3, [pc, #56]	; (80910 <pio_handler_process+0x44>)
   808d6:	4798      	blx	r3
   808d8:	4605      	mov	r5, r0
	status &= pio_get_interrupt_mask(p_pio);
   808da:	4620      	mov	r0, r4
   808dc:	4b0d      	ldr	r3, [pc, #52]	; (80914 <pio_handler_process+0x48>)
   808de:	4798      	blx	r3

	/* Check pending events */
	if (status != 0) {
   808e0:	4005      	ands	r5, r0
   808e2:	d013      	beq.n	8090c <pio_handler_process+0x40>
   808e4:	4c0c      	ldr	r4, [pc, #48]	; (80918 <pio_handler_process+0x4c>)
   808e6:	f104 0660 	add.w	r6, r4, #96	; 0x60
   808ea:	e003      	b.n	808f4 <pio_handler_process+0x28>
							gs_interrupt_sources[i].mask);
					status &= ~(gs_interrupt_sources[i].mask);
				}
			}
			i++;
			if (i >= MAX_INTERRUPT_SOURCES) {
   808ec:	42b4      	cmp	r4, r6
   808ee:	d00d      	beq.n	8090c <pio_handler_process+0x40>
   808f0:	3410      	adds	r4, #16
		while (status != 0) {
   808f2:	b15d      	cbz	r5, 8090c <pio_handler_process+0x40>
			if (gs_interrupt_sources[i].id == ul_id) {
   808f4:	6820      	ldr	r0, [r4, #0]
   808f6:	4540      	cmp	r0, r8
   808f8:	d1f8      	bne.n	808ec <pio_handler_process+0x20>
				if ((status & gs_interrupt_sources[i].mask) != 0) {
   808fa:	6861      	ldr	r1, [r4, #4]
   808fc:	4229      	tst	r1, r5
   808fe:	d0f5      	beq.n	808ec <pio_handler_process+0x20>
					gs_interrupt_sources[i].handler(gs_interrupt_sources[i].id,
   80900:	68e3      	ldr	r3, [r4, #12]
   80902:	4798      	blx	r3
					status &= ~(gs_interrupt_sources[i].mask);
   80904:	6863      	ldr	r3, [r4, #4]
   80906:	ea25 0503 	bic.w	r5, r5, r3
   8090a:	e7ef      	b.n	808ec <pio_handler_process+0x20>
   8090c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
   80910:	00080757 	.word	0x00080757
   80914:	0008075b 	.word	0x0008075b
   80918:	20070b9c 	.word	0x20070b9c

0008091c <PIOA_Handler>:
/**
 * \brief Parallel IO Controller A interrupt handler.
 * Redefined PIOA interrupt handler for NVIC interrupt table.
 */
void PIOA_Handler(void)
{
   8091c:	b508      	push	{r3, lr}
	pio_handler_process(PIOA, ID_PIOA);
   8091e:	210b      	movs	r1, #11
   80920:	4801      	ldr	r0, [pc, #4]	; (80928 <PIOA_Handler+0xc>)
   80922:	4b02      	ldr	r3, [pc, #8]	; (8092c <PIOA_Handler+0x10>)
   80924:	4798      	blx	r3
   80926:	bd08      	pop	{r3, pc}
   80928:	400e0e00 	.word	0x400e0e00
   8092c:	000808cd 	.word	0x000808cd

00080930 <PIOB_Handler>:
/**
 * \brief Parallel IO Controller B interrupt handler
 * Redefined PIOB interrupt handler for NVIC interrupt table.
 */
void PIOB_Handler(void)
{
   80930:	b508      	push	{r3, lr}
    pio_handler_process(PIOB, ID_PIOB);
   80932:	210c      	movs	r1, #12
   80934:	4801      	ldr	r0, [pc, #4]	; (8093c <PIOB_Handler+0xc>)
   80936:	4b02      	ldr	r3, [pc, #8]	; (80940 <PIOB_Handler+0x10>)
   80938:	4798      	blx	r3
   8093a:	bd08      	pop	{r3, pc}
   8093c:	400e1000 	.word	0x400e1000
   80940:	000808cd 	.word	0x000808cd

00080944 <PIOC_Handler>:
/**
 * \brief Parallel IO Controller C interrupt handler.
 * Redefined PIOC interrupt handler for NVIC interrupt table.
 */
void PIOC_Handler(void)
{
   80944:	b508      	push	{r3, lr}
	pio_handler_process(PIOC, ID_PIOC);
   80946:	210d      	movs	r1, #13
   80948:	4801      	ldr	r0, [pc, #4]	; (80950 <PIOC_Handler+0xc>)
   8094a:	4b02      	ldr	r3, [pc, #8]	; (80954 <PIOC_Handler+0x10>)
   8094c:	4798      	blx	r3
   8094e:	bd08      	pop	{r3, pc}
   80950:	400e1200 	.word	0x400e1200
   80954:	000808cd 	.word	0x000808cd

00080958 <PIOD_Handler>:
/**
 * \brief Parallel IO Controller D interrupt handler.
 * Redefined PIOD interrupt handler for NVIC interrupt table.
 */
void PIOD_Handler(void)
{
   80958:	b508      	push	{r3, lr}
	pio_handler_process(PIOD, ID_PIOD);
   8095a:	210e      	movs	r1, #14
   8095c:	4801      	ldr	r0, [pc, #4]	; (80964 <PIOD_Handler+0xc>)
   8095e:	4b02      	ldr	r3, [pc, #8]	; (80968 <PIOD_Handler+0x10>)
   80960:	4798      	blx	r3
   80962:	bd08      	pop	{r3, pc}
   80964:	400e1400 	.word	0x400e1400
   80968:	000808cd 	.word	0x000808cd

0008096c <pmc_switch_mck_to_pllack>:
 */
uint32_t pmc_switch_mck_to_pllack(uint32_t ul_pres)
{
	uint32_t ul_timeout;

	PMC->PMC_MCKR = (PMC->PMC_MCKR & (~PMC_MCKR_PRES_Msk)) | ul_pres;
   8096c:	4a17      	ldr	r2, [pc, #92]	; (809cc <pmc_switch_mck_to_pllack+0x60>)
   8096e:	6b13      	ldr	r3, [r2, #48]	; 0x30
   80970:	f023 0370 	bic.w	r3, r3, #112	; 0x70
   80974:	4318      	orrs	r0, r3
   80976:	6310      	str	r0, [r2, #48]	; 0x30
	for (ul_timeout = PMC_TIMEOUT; !(PMC->PMC_SR & PMC_SR_MCKRDY);
   80978:	6e93      	ldr	r3, [r2, #104]	; 0x68
   8097a:	f013 0f08 	tst.w	r3, #8
   8097e:	d10a      	bne.n	80996 <pmc_switch_mck_to_pllack+0x2a>
   80980:	f44f 6300 	mov.w	r3, #2048	; 0x800
   80984:	4911      	ldr	r1, [pc, #68]	; (809cc <pmc_switch_mck_to_pllack+0x60>)
   80986:	6e8a      	ldr	r2, [r1, #104]	; 0x68
   80988:	f012 0f08 	tst.w	r2, #8
   8098c:	d103      	bne.n	80996 <pmc_switch_mck_to_pllack+0x2a>
			--ul_timeout) {
		if (ul_timeout == 0) {
   8098e:	3b01      	subs	r3, #1
   80990:	d1f9      	bne.n	80986 <pmc_switch_mck_to_pllack+0x1a>
			return 1;
   80992:	2001      	movs	r0, #1
   80994:	4770      	bx	lr
		}
	}

	PMC->PMC_MCKR = (PMC->PMC_MCKR & (~PMC_MCKR_CSS_Msk)) |
   80996:	4a0d      	ldr	r2, [pc, #52]	; (809cc <pmc_switch_mck_to_pllack+0x60>)
   80998:	6b13      	ldr	r3, [r2, #48]	; 0x30
   8099a:	f023 0303 	bic.w	r3, r3, #3
   8099e:	f043 0302 	orr.w	r3, r3, #2
   809a2:	6313      	str	r3, [r2, #48]	; 0x30
			PMC_MCKR_CSS_PLLA_CLK;

	for (ul_timeout = PMC_TIMEOUT; !(PMC->PMC_SR & PMC_SR_MCKRDY);
   809a4:	6e93      	ldr	r3, [r2, #104]	; 0x68
   809a6:	f013 0f08 	tst.w	r3, #8
   809aa:	d10a      	bne.n	809c2 <pmc_switch_mck_to_pllack+0x56>
   809ac:	f44f 6300 	mov.w	r3, #2048	; 0x800
   809b0:	4906      	ldr	r1, [pc, #24]	; (809cc <pmc_switch_mck_to_pllack+0x60>)
   809b2:	6e8a      	ldr	r2, [r1, #104]	; 0x68
   809b4:	f012 0f08 	tst.w	r2, #8
   809b8:	d105      	bne.n	809c6 <pmc_switch_mck_to_pllack+0x5a>
			--ul_timeout) {
		if (ul_timeout == 0) {
   809ba:	3b01      	subs	r3, #1
   809bc:	d1f9      	bne.n	809b2 <pmc_switch_mck_to_pllack+0x46>
			return 1;
   809be:	2001      	movs	r0, #1
		}
	}

	return 0;
}
   809c0:	4770      	bx	lr
	return 0;
   809c2:	2000      	movs	r0, #0
   809c4:	4770      	bx	lr
   809c6:	2000      	movs	r0, #0
   809c8:	4770      	bx	lr
   809ca:	bf00      	nop
   809cc:	400e0600 	.word	0x400e0600

000809d0 <pmc_switch_mainck_to_xtal>:
 */
void pmc_switch_mainck_to_xtal(uint32_t ul_bypass,
		uint32_t ul_xtal_startup_time)
{
	/* Enable Main Xtal oscillator */
	if (ul_bypass) {
   809d0:	b9c8      	cbnz	r0, 80a06 <pmc_switch_mainck_to_xtal+0x36>
		PMC->CKGR_MOR = (PMC->CKGR_MOR & ~CKGR_MOR_MOSCXTEN) |
				CKGR_MOR_KEY_PASSWD | CKGR_MOR_MOSCXTBY |
				CKGR_MOR_MOSCSEL;
	} else {
		PMC->CKGR_MOR = (PMC->CKGR_MOR & ~CKGR_MOR_MOSCXTBY) |
   809d2:	4a11      	ldr	r2, [pc, #68]	; (80a18 <pmc_switch_mainck_to_xtal+0x48>)
   809d4:	6a13      	ldr	r3, [r2, #32]
				CKGR_MOR_KEY_PASSWD | CKGR_MOR_MOSCXTEN |
				CKGR_MOR_MOSCXTST(ul_xtal_startup_time);
   809d6:	0209      	lsls	r1, r1, #8
   809d8:	b289      	uxth	r1, r1
				CKGR_MOR_KEY_PASSWD | CKGR_MOR_MOSCXTEN |
   809da:	f423 135c 	bic.w	r3, r3, #3604480	; 0x370000
   809de:	f023 0303 	bic.w	r3, r3, #3
   809e2:	f443 135c 	orr.w	r3, r3, #3604480	; 0x370000
   809e6:	f043 0301 	orr.w	r3, r3, #1
   809ea:	430b      	orrs	r3, r1
		PMC->CKGR_MOR = (PMC->CKGR_MOR & ~CKGR_MOR_MOSCXTBY) |
   809ec:	6213      	str	r3, [r2, #32]
		/* Wait the Xtal to stabilize */
		while (!(PMC->PMC_SR & PMC_SR_MOSCXTS));
   809ee:	6e93      	ldr	r3, [r2, #104]	; 0x68
   809f0:	f013 0f01 	tst.w	r3, #1
   809f4:	d0fb      	beq.n	809ee <pmc_switch_mainck_to_xtal+0x1e>

		PMC->CKGR_MOR |= CKGR_MOR_KEY_PASSWD | CKGR_MOR_MOSCSEL;
   809f6:	4a08      	ldr	r2, [pc, #32]	; (80a18 <pmc_switch_mainck_to_xtal+0x48>)
   809f8:	6a13      	ldr	r3, [r2, #32]
   809fa:	f043 739b 	orr.w	r3, r3, #20316160	; 0x1360000
   809fe:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
   80a02:	6213      	str	r3, [r2, #32]
   80a04:	4770      	bx	lr
		PMC->CKGR_MOR = (PMC->CKGR_MOR & ~CKGR_MOR_MOSCXTEN) |
   80a06:	4904      	ldr	r1, [pc, #16]	; (80a18 <pmc_switch_mainck_to_xtal+0x48>)
   80a08:	6a0b      	ldr	r3, [r1, #32]
				CKGR_MOR_KEY_PASSWD | CKGR_MOR_MOSCXTBY |
   80a0a:	4a04      	ldr	r2, [pc, #16]	; (80a1c <pmc_switch_mainck_to_xtal+0x4c>)
   80a0c:	401a      	ands	r2, r3
   80a0e:	4b04      	ldr	r3, [pc, #16]	; (80a20 <pmc_switch_mainck_to_xtal+0x50>)
   80a10:	4313      	orrs	r3, r2
		PMC->CKGR_MOR = (PMC->CKGR_MOR & ~CKGR_MOR_MOSCXTEN) |
   80a12:	620b      	str	r3, [r1, #32]
   80a14:	4770      	bx	lr
   80a16:	bf00      	nop
   80a18:	400e0600 	.word	0x400e0600
   80a1c:	fec8fffc 	.word	0xfec8fffc
   80a20:	01370002 	.word	0x01370002

00080a24 <pmc_osc_is_ready_mainck>:
 * \retval 1 Xtal is ready.
 * \retval 0 Xtal is not ready.
 */
uint32_t pmc_osc_is_ready_mainck(void)
{
	return PMC->PMC_SR & PMC_SR_MOSCSELS;
   80a24:	4b02      	ldr	r3, [pc, #8]	; (80a30 <pmc_osc_is_ready_mainck+0xc>)
   80a26:	6e98      	ldr	r0, [r3, #104]	; 0x68
}
   80a28:	f400 3080 	and.w	r0, r0, #65536	; 0x10000
   80a2c:	4770      	bx	lr
   80a2e:	bf00      	nop
   80a30:	400e0600 	.word	0x400e0600

00080a34 <pmc_disable_pllack>:
void pmc_disable_pllack(void)
{
#if (SAM4C || SAM4CM || SAM4CP || SAMG)
	PMC->CKGR_PLLAR = CKGR_PLLAR_MULA(0);
#else
	PMC->CKGR_PLLAR = CKGR_PLLAR_ONE | CKGR_PLLAR_MULA(0);
   80a34:	f04f 5200 	mov.w	r2, #536870912	; 0x20000000
   80a38:	4b01      	ldr	r3, [pc, #4]	; (80a40 <pmc_disable_pllack+0xc>)
   80a3a:	629a      	str	r2, [r3, #40]	; 0x28
   80a3c:	4770      	bx	lr
   80a3e:	bf00      	nop
   80a40:	400e0600 	.word	0x400e0600

00080a44 <pmc_is_locked_pllack>:
 * \retval 0 Not locked.
 * \retval 1 Locked.
 */
uint32_t pmc_is_locked_pllack(void)
{
	return (PMC->PMC_SR & PMC_SR_LOCKA);
   80a44:	4b02      	ldr	r3, [pc, #8]	; (80a50 <pmc_is_locked_pllack+0xc>)
   80a46:	6e98      	ldr	r0, [r3, #104]	; 0x68
}
   80a48:	f000 0002 	and.w	r0, r0, #2
   80a4c:	4770      	bx	lr
   80a4e:	bf00      	nop
   80a50:	400e0600 	.word	0x400e0600

00080a54 <pmc_enable_periph_clk>:
 * \retval 0 Success.
 * \retval 1 Invalid parameter.
 */
uint32_t pmc_enable_periph_clk(uint32_t ul_id)
{
	if (ul_id > MAX_PERIPH_ID) {
   80a54:	282c      	cmp	r0, #44	; 0x2c
   80a56:	d81e      	bhi.n	80a96 <pmc_enable_periph_clk+0x42>
		return 1;
	}

	if (ul_id < 32) {
   80a58:	281f      	cmp	r0, #31
   80a5a:	d80c      	bhi.n	80a76 <pmc_enable_periph_clk+0x22>
		if ((PMC->PMC_PCSR0 & (1u << ul_id)) != (1u << ul_id)) {
   80a5c:	4b11      	ldr	r3, [pc, #68]	; (80aa4 <pmc_enable_periph_clk+0x50>)
   80a5e:	699a      	ldr	r2, [r3, #24]
   80a60:	2301      	movs	r3, #1
   80a62:	4083      	lsls	r3, r0
   80a64:	4393      	bics	r3, r2
   80a66:	d018      	beq.n	80a9a <pmc_enable_periph_clk+0x46>
			PMC->PMC_PCER0 = 1 << ul_id;
   80a68:	2301      	movs	r3, #1
   80a6a:	fa03 f000 	lsl.w	r0, r3, r0
   80a6e:	4b0d      	ldr	r3, [pc, #52]	; (80aa4 <pmc_enable_periph_clk+0x50>)
   80a70:	6118      	str	r0, [r3, #16]
			PMC->PMC_PCER1 = 1 << ul_id;
		}
#endif
	}

	return 0;
   80a72:	2000      	movs	r0, #0
   80a74:	4770      	bx	lr
		ul_id -= 32;
   80a76:	3820      	subs	r0, #32
		if ((PMC->PMC_PCSR1 & (1u << ul_id)) != (1u << ul_id)) {
   80a78:	4b0a      	ldr	r3, [pc, #40]	; (80aa4 <pmc_enable_periph_clk+0x50>)
   80a7a:	f8d3 2108 	ldr.w	r2, [r3, #264]	; 0x108
   80a7e:	2301      	movs	r3, #1
   80a80:	4083      	lsls	r3, r0
   80a82:	4393      	bics	r3, r2
   80a84:	d00b      	beq.n	80a9e <pmc_enable_periph_clk+0x4a>
			PMC->PMC_PCER1 = 1 << ul_id;
   80a86:	2301      	movs	r3, #1
   80a88:	fa03 f000 	lsl.w	r0, r3, r0
   80a8c:	4b05      	ldr	r3, [pc, #20]	; (80aa4 <pmc_enable_periph_clk+0x50>)
   80a8e:	f8c3 0100 	str.w	r0, [r3, #256]	; 0x100
	return 0;
   80a92:	2000      	movs	r0, #0
   80a94:	4770      	bx	lr
		return 1;
   80a96:	2001      	movs	r0, #1
   80a98:	4770      	bx	lr
	return 0;
   80a9a:	2000      	movs	r0, #0
   80a9c:	4770      	bx	lr
   80a9e:	2000      	movs	r0, #0
}
   80aa0:	4770      	bx	lr
   80aa2:	bf00      	nop
   80aa4:	400e0600 	.word	0x400e0600

00080aa8 <Dummy_Handler>:

/**
 * \brief Default interrupt handler for unused IRQs.
 */
void Dummy_Handler(void)
{
   80aa8:	e7fe      	b.n	80aa8 <Dummy_Handler>
	...

00080aac <Reset_Handler>:
/**
 * \brief This is the code that gets called on processor reset.
 * To initialize the device, and call the main() routine.
 */
void Reset_Handler(void)
{
   80aac:	b508      	push	{r3, lr}

	/* Initialize the relocate segment */
	pSrc = &_etext;
	pDest = &_srelocate;

	if (pSrc != pDest) {
   80aae:	4b1c      	ldr	r3, [pc, #112]	; (80b20 <Reset_Handler+0x74>)
   80ab0:	4a1c      	ldr	r2, [pc, #112]	; (80b24 <Reset_Handler+0x78>)
   80ab2:	429a      	cmp	r2, r3
   80ab4:	d010      	beq.n	80ad8 <Reset_Handler+0x2c>
		for (; pDest < &_erelocate;) {
   80ab6:	4b1c      	ldr	r3, [pc, #112]	; (80b28 <Reset_Handler+0x7c>)
   80ab8:	4a19      	ldr	r2, [pc, #100]	; (80b20 <Reset_Handler+0x74>)
   80aba:	429a      	cmp	r2, r3
   80abc:	d20c      	bcs.n	80ad8 <Reset_Handler+0x2c>
   80abe:	3b01      	subs	r3, #1
   80ac0:	1a9b      	subs	r3, r3, r2
   80ac2:	f023 0303 	bic.w	r3, r3, #3
   80ac6:	3304      	adds	r3, #4
   80ac8:	4413      	add	r3, r2
   80aca:	4916      	ldr	r1, [pc, #88]	; (80b24 <Reset_Handler+0x78>)
			*pDest++ = *pSrc++;
   80acc:	f851 0b04 	ldr.w	r0, [r1], #4
   80ad0:	f842 0b04 	str.w	r0, [r2], #4
		for (; pDest < &_erelocate;) {
   80ad4:	429a      	cmp	r2, r3
   80ad6:	d1f9      	bne.n	80acc <Reset_Handler+0x20>
		}
	}

	/* Clear the zero segment */
	for (pDest = &_szero; pDest < &_ezero;) {
   80ad8:	4b14      	ldr	r3, [pc, #80]	; (80b2c <Reset_Handler+0x80>)
   80ada:	4a15      	ldr	r2, [pc, #84]	; (80b30 <Reset_Handler+0x84>)
   80adc:	429a      	cmp	r2, r3
   80ade:	d20a      	bcs.n	80af6 <Reset_Handler+0x4a>
   80ae0:	3b01      	subs	r3, #1
   80ae2:	1a9b      	subs	r3, r3, r2
   80ae4:	f023 0303 	bic.w	r3, r3, #3
   80ae8:	3304      	adds	r3, #4
   80aea:	4413      	add	r3, r2
		*pDest++ = 0;
   80aec:	2100      	movs	r1, #0
   80aee:	f842 1b04 	str.w	r1, [r2], #4
	for (pDest = &_szero; pDest < &_ezero;) {
   80af2:	4293      	cmp	r3, r2
   80af4:	d1fb      	bne.n	80aee <Reset_Handler+0x42>
	}

	/* Set the vector table base address */
	pSrc = (uint32_t *) & _sfixed;
	SCB->VTOR = ((uint32_t) pSrc & SCB_VTOR_TBLOFF_Msk);
   80af6:	4b0f      	ldr	r3, [pc, #60]	; (80b34 <Reset_Handler+0x88>)
   80af8:	f023 4260 	bic.w	r2, r3, #3758096384	; 0xe0000000
   80afc:	f022 027f 	bic.w	r2, r2, #127	; 0x7f
   80b00:	490d      	ldr	r1, [pc, #52]	; (80b38 <Reset_Handler+0x8c>)
   80b02:	608a      	str	r2, [r1, #8]

	if (((uint32_t) pSrc >= IRAM0_ADDR) && ((uint32_t) pSrc < NFC_RAM_ADDR)) {
   80b04:	f103 4360 	add.w	r3, r3, #3758096384	; 0xe0000000
   80b08:	f5b3 1f80 	cmp.w	r3, #1048576	; 0x100000
   80b0c:	d203      	bcs.n	80b16 <Reset_Handler+0x6a>
		SCB->VTOR |= 1 << SCB_VTOR_TBLBASE_Pos;
   80b0e:	688b      	ldr	r3, [r1, #8]
   80b10:	f043 5300 	orr.w	r3, r3, #536870912	; 0x20000000
   80b14:	608b      	str	r3, [r1, #8]
	}

	/* Initialize the C library */
	__libc_init_array();
   80b16:	4b09      	ldr	r3, [pc, #36]	; (80b3c <Reset_Handler+0x90>)
   80b18:	4798      	blx	r3

	/* Branch to main function */
	main();
   80b1a:	4b09      	ldr	r3, [pc, #36]	; (80b40 <Reset_Handler+0x94>)
   80b1c:	4798      	blx	r3
   80b1e:	e7fe      	b.n	80b1e <Reset_Handler+0x72>
   80b20:	20070000 	.word	0x20070000
   80b24:	00083d38 	.word	0x00083d38
   80b28:	20070ae0 	.word	0x20070ae0
   80b2c:	20070c78 	.word	0x20070c78
   80b30:	20070ae0 	.word	0x20070ae0
   80b34:	00080000 	.word	0x00080000
   80b38:	e000ed00 	.word	0xe000ed00
   80b3c:	00080cf5 	.word	0x00080cf5
   80b40:	00080cad 	.word	0x00080cad

00080b44 <SystemCoreClockUpdate>:
}

void SystemCoreClockUpdate(void)
{
	/* Determine clock frequency according to clock register values */
	switch (PMC->PMC_MCKR & PMC_MCKR_CSS_Msk) {
   80b44:	4b3d      	ldr	r3, [pc, #244]	; (80c3c <SystemCoreClockUpdate+0xf8>)
   80b46:	6b1b      	ldr	r3, [r3, #48]	; 0x30
   80b48:	f003 0303 	and.w	r3, r3, #3
   80b4c:	2b03      	cmp	r3, #3
   80b4e:	d80e      	bhi.n	80b6e <SystemCoreClockUpdate+0x2a>
   80b50:	e8df f003 	tbb	[pc, r3]
   80b54:	38381c02 	.word	0x38381c02
	case PMC_MCKR_CSS_SLOW_CLK:	/* Slow clock */
		if (SUPC->SUPC_SR & SUPC_SR_OSCSEL) {
   80b58:	4b39      	ldr	r3, [pc, #228]	; (80c40 <SystemCoreClockUpdate+0xfc>)
   80b5a:	695b      	ldr	r3, [r3, #20]
   80b5c:	f013 0f80 	tst.w	r3, #128	; 0x80
			SystemCoreClock = CHIP_FREQ_XTAL_32K;
   80b60:	bf14      	ite	ne
   80b62:	f44f 4200 	movne.w	r2, #32768	; 0x8000
		} else {
			SystemCoreClock = CHIP_FREQ_SLCK_RC;
   80b66:	f44f 42fa 	moveq.w	r2, #32000	; 0x7d00
   80b6a:	4b36      	ldr	r3, [pc, #216]	; (80c44 <SystemCoreClockUpdate+0x100>)
   80b6c:	601a      	str	r2, [r3, #0]
			SystemCoreClock = SYS_UTMIPLL / 2U;
		}
		break;
	}

	if ((PMC->PMC_MCKR & PMC_MCKR_PRES_Msk) == PMC_MCKR_PRES_CLK_3) {
   80b6e:	4b33      	ldr	r3, [pc, #204]	; (80c3c <SystemCoreClockUpdate+0xf8>)
   80b70:	6b1b      	ldr	r3, [r3, #48]	; 0x30
   80b72:	f003 0370 	and.w	r3, r3, #112	; 0x70
   80b76:	2b70      	cmp	r3, #112	; 0x70
   80b78:	d057      	beq.n	80c2a <SystemCoreClockUpdate+0xe6>
		SystemCoreClock /= 3U;
	} else {
		SystemCoreClock >>= ((PMC->PMC_MCKR & PMC_MCKR_PRES_Msk) >> 
   80b7a:	4b30      	ldr	r3, [pc, #192]	; (80c3c <SystemCoreClockUpdate+0xf8>)
   80b7c:	6b1a      	ldr	r2, [r3, #48]	; 0x30
   80b7e:	4931      	ldr	r1, [pc, #196]	; (80c44 <SystemCoreClockUpdate+0x100>)
   80b80:	f3c2 1202 	ubfx	r2, r2, #4, #3
   80b84:	680b      	ldr	r3, [r1, #0]
   80b86:	40d3      	lsrs	r3, r2
   80b88:	600b      	str	r3, [r1, #0]
   80b8a:	4770      	bx	lr
		if (PMC->CKGR_MOR & CKGR_MOR_MOSCSEL) {
   80b8c:	4b2b      	ldr	r3, [pc, #172]	; (80c3c <SystemCoreClockUpdate+0xf8>)
   80b8e:	6a1b      	ldr	r3, [r3, #32]
   80b90:	f013 7f80 	tst.w	r3, #16777216	; 0x1000000
   80b94:	d003      	beq.n	80b9e <SystemCoreClockUpdate+0x5a>
			SystemCoreClock = CHIP_FREQ_XTAL_12M;
   80b96:	4a2c      	ldr	r2, [pc, #176]	; (80c48 <SystemCoreClockUpdate+0x104>)
   80b98:	4b2a      	ldr	r3, [pc, #168]	; (80c44 <SystemCoreClockUpdate+0x100>)
   80b9a:	601a      	str	r2, [r3, #0]
   80b9c:	e7e7      	b.n	80b6e <SystemCoreClockUpdate+0x2a>
			SystemCoreClock = CHIP_FREQ_MAINCK_RC_4MHZ;
   80b9e:	4a2b      	ldr	r2, [pc, #172]	; (80c4c <SystemCoreClockUpdate+0x108>)
   80ba0:	4b28      	ldr	r3, [pc, #160]	; (80c44 <SystemCoreClockUpdate+0x100>)
   80ba2:	601a      	str	r2, [r3, #0]
			switch (PMC->CKGR_MOR & CKGR_MOR_MOSCRCF_Msk) {
   80ba4:	4b25      	ldr	r3, [pc, #148]	; (80c3c <SystemCoreClockUpdate+0xf8>)
   80ba6:	6a1b      	ldr	r3, [r3, #32]
   80ba8:	f003 0370 	and.w	r3, r3, #112	; 0x70
   80bac:	2b10      	cmp	r3, #16
   80bae:	d005      	beq.n	80bbc <SystemCoreClockUpdate+0x78>
   80bb0:	2b20      	cmp	r3, #32
   80bb2:	d1dc      	bne.n	80b6e <SystemCoreClockUpdate+0x2a>
				SystemCoreClock *= 3U;
   80bb4:	4a24      	ldr	r2, [pc, #144]	; (80c48 <SystemCoreClockUpdate+0x104>)
   80bb6:	4b23      	ldr	r3, [pc, #140]	; (80c44 <SystemCoreClockUpdate+0x100>)
   80bb8:	601a      	str	r2, [r3, #0]
				break;
   80bba:	e7d8      	b.n	80b6e <SystemCoreClockUpdate+0x2a>
				SystemCoreClock *= 2U;
   80bbc:	4a24      	ldr	r2, [pc, #144]	; (80c50 <SystemCoreClockUpdate+0x10c>)
   80bbe:	4b21      	ldr	r3, [pc, #132]	; (80c44 <SystemCoreClockUpdate+0x100>)
   80bc0:	601a      	str	r2, [r3, #0]
				break;
   80bc2:	e7d4      	b.n	80b6e <SystemCoreClockUpdate+0x2a>
		if (PMC->CKGR_MOR & CKGR_MOR_MOSCSEL) {
   80bc4:	4b1d      	ldr	r3, [pc, #116]	; (80c3c <SystemCoreClockUpdate+0xf8>)
   80bc6:	6a1b      	ldr	r3, [r3, #32]
   80bc8:	f013 7f80 	tst.w	r3, #16777216	; 0x1000000
   80bcc:	d00c      	beq.n	80be8 <SystemCoreClockUpdate+0xa4>
			SystemCoreClock = CHIP_FREQ_XTAL_12M;
   80bce:	4a1e      	ldr	r2, [pc, #120]	; (80c48 <SystemCoreClockUpdate+0x104>)
   80bd0:	4b1c      	ldr	r3, [pc, #112]	; (80c44 <SystemCoreClockUpdate+0x100>)
   80bd2:	601a      	str	r2, [r3, #0]
		if ((PMC->PMC_MCKR & PMC_MCKR_CSS_Msk) == PMC_MCKR_CSS_PLLA_CLK) {
   80bd4:	4b19      	ldr	r3, [pc, #100]	; (80c3c <SystemCoreClockUpdate+0xf8>)
   80bd6:	6b1b      	ldr	r3, [r3, #48]	; 0x30
   80bd8:	f003 0303 	and.w	r3, r3, #3
   80bdc:	2b02      	cmp	r3, #2
   80bde:	d016      	beq.n	80c0e <SystemCoreClockUpdate+0xca>
			SystemCoreClock = SYS_UTMIPLL / 2U;
   80be0:	4a1c      	ldr	r2, [pc, #112]	; (80c54 <SystemCoreClockUpdate+0x110>)
   80be2:	4b18      	ldr	r3, [pc, #96]	; (80c44 <SystemCoreClockUpdate+0x100>)
   80be4:	601a      	str	r2, [r3, #0]
   80be6:	e7c2      	b.n	80b6e <SystemCoreClockUpdate+0x2a>
			SystemCoreClock = CHIP_FREQ_MAINCK_RC_4MHZ;
   80be8:	4a18      	ldr	r2, [pc, #96]	; (80c4c <SystemCoreClockUpdate+0x108>)
   80bea:	4b16      	ldr	r3, [pc, #88]	; (80c44 <SystemCoreClockUpdate+0x100>)
   80bec:	601a      	str	r2, [r3, #0]
			switch (PMC->CKGR_MOR & CKGR_MOR_MOSCRCF_Msk) {
   80bee:	4b13      	ldr	r3, [pc, #76]	; (80c3c <SystemCoreClockUpdate+0xf8>)
   80bf0:	6a1b      	ldr	r3, [r3, #32]
   80bf2:	f003 0370 	and.w	r3, r3, #112	; 0x70
   80bf6:	2b10      	cmp	r3, #16
   80bf8:	d005      	beq.n	80c06 <SystemCoreClockUpdate+0xc2>
   80bfa:	2b20      	cmp	r3, #32
   80bfc:	d1ea      	bne.n	80bd4 <SystemCoreClockUpdate+0x90>
				SystemCoreClock *= 3U;
   80bfe:	4a12      	ldr	r2, [pc, #72]	; (80c48 <SystemCoreClockUpdate+0x104>)
   80c00:	4b10      	ldr	r3, [pc, #64]	; (80c44 <SystemCoreClockUpdate+0x100>)
   80c02:	601a      	str	r2, [r3, #0]
				break;
   80c04:	e7e6      	b.n	80bd4 <SystemCoreClockUpdate+0x90>
				SystemCoreClock *= 2U;
   80c06:	4a12      	ldr	r2, [pc, #72]	; (80c50 <SystemCoreClockUpdate+0x10c>)
   80c08:	4b0e      	ldr	r3, [pc, #56]	; (80c44 <SystemCoreClockUpdate+0x100>)
   80c0a:	601a      	str	r2, [r3, #0]
				break;
   80c0c:	e7e2      	b.n	80bd4 <SystemCoreClockUpdate+0x90>
			SystemCoreClock *= ((((PMC->CKGR_PLLAR) & CKGR_PLLAR_MULA_Msk) >> 
   80c0e:	4a0b      	ldr	r2, [pc, #44]	; (80c3c <SystemCoreClockUpdate+0xf8>)
   80c10:	6a91      	ldr	r1, [r2, #40]	; 0x28
			SystemCoreClock /= ((((PMC->CKGR_PLLAR) & CKGR_PLLAR_DIVA_Msk) >> 
   80c12:	6a92      	ldr	r2, [r2, #40]	; 0x28
   80c14:	480b      	ldr	r0, [pc, #44]	; (80c44 <SystemCoreClockUpdate+0x100>)
			SystemCoreClock *= ((((PMC->CKGR_PLLAR) & CKGR_PLLAR_MULA_Msk) >> 
   80c16:	f3c1 410a 	ubfx	r1, r1, #16, #11
   80c1a:	6803      	ldr	r3, [r0, #0]
   80c1c:	fb01 3303 	mla	r3, r1, r3, r3
			SystemCoreClock /= ((((PMC->CKGR_PLLAR) & CKGR_PLLAR_DIVA_Msk) >> 
   80c20:	b2d2      	uxtb	r2, r2
   80c22:	fbb3 f3f2 	udiv	r3, r3, r2
   80c26:	6003      	str	r3, [r0, #0]
   80c28:	e7a1      	b.n	80b6e <SystemCoreClockUpdate+0x2a>
		SystemCoreClock /= 3U;
   80c2a:	4a06      	ldr	r2, [pc, #24]	; (80c44 <SystemCoreClockUpdate+0x100>)
   80c2c:	6813      	ldr	r3, [r2, #0]
   80c2e:	490a      	ldr	r1, [pc, #40]	; (80c58 <SystemCoreClockUpdate+0x114>)
   80c30:	fba1 1303 	umull	r1, r3, r1, r3
   80c34:	085b      	lsrs	r3, r3, #1
   80c36:	6013      	str	r3, [r2, #0]
   80c38:	4770      	bx	lr
   80c3a:	bf00      	nop
   80c3c:	400e0600 	.word	0x400e0600
   80c40:	400e1a10 	.word	0x400e1a10
   80c44:	20070130 	.word	0x20070130
   80c48:	00b71b00 	.word	0x00b71b00
   80c4c:	003d0900 	.word	0x003d0900
   80c50:	007a1200 	.word	0x007a1200
   80c54:	0e4e1c00 	.word	0x0e4e1c00
   80c58:	aaaaaaab 	.word	0xaaaaaaab

00080c5c <_sbrk>:
{
	static unsigned char *heap = NULL;
	unsigned char *prev_heap;
	int ramend = (int)&__ram_end__;

	if (heap == NULL) {
   80c5c:	4b0a      	ldr	r3, [pc, #40]	; (80c88 <_sbrk+0x2c>)
   80c5e:	681b      	ldr	r3, [r3, #0]
   80c60:	b153      	cbz	r3, 80c78 <_sbrk+0x1c>
		heap = (unsigned char *)&_end;
	}
	prev_heap = heap;
   80c62:	4b09      	ldr	r3, [pc, #36]	; (80c88 <_sbrk+0x2c>)
   80c64:	681b      	ldr	r3, [r3, #0]

	if (((int)prev_heap + incr) > ramend) {
   80c66:	181a      	adds	r2, r3, r0
   80c68:	4908      	ldr	r1, [pc, #32]	; (80c8c <_sbrk+0x30>)
   80c6a:	4291      	cmp	r1, r2
   80c6c:	db08      	blt.n	80c80 <_sbrk+0x24>
		return (caddr_t) -1;	
	}

	heap += incr;
   80c6e:	4610      	mov	r0, r2
   80c70:	4a05      	ldr	r2, [pc, #20]	; (80c88 <_sbrk+0x2c>)
   80c72:	6010      	str	r0, [r2, #0]

	return (caddr_t) prev_heap;
   80c74:	4618      	mov	r0, r3
   80c76:	4770      	bx	lr
		heap = (unsigned char *)&_end;
   80c78:	4a05      	ldr	r2, [pc, #20]	; (80c90 <_sbrk+0x34>)
   80c7a:	4b03      	ldr	r3, [pc, #12]	; (80c88 <_sbrk+0x2c>)
   80c7c:	601a      	str	r2, [r3, #0]
   80c7e:	e7f0      	b.n	80c62 <_sbrk+0x6>
		return (caddr_t) -1;	
   80c80:	f04f 30ff 	mov.w	r0, #4294967295
}
   80c84:	4770      	bx	lr
   80c86:	bf00      	nop
   80c88:	20070c0c 	.word	0x20070c0c
   80c8c:	20087ffc 	.word	0x20087ffc
   80c90:	20072c78 	.word	0x20072c78

00080c94 <_close>:
}

extern int _close(int file)
{
	return -1;
}
   80c94:	f04f 30ff 	mov.w	r0, #4294967295
   80c98:	4770      	bx	lr

00080c9a <_fstat>:

extern int _fstat(int file, struct stat *st)
{
	st->st_mode = S_IFCHR;
   80c9a:	f44f 5300 	mov.w	r3, #8192	; 0x2000
   80c9e:	604b      	str	r3, [r1, #4]

	return 0;
}
   80ca0:	2000      	movs	r0, #0
   80ca2:	4770      	bx	lr

00080ca4 <_isatty>:

extern int _isatty(int file)
{
	return 1;
}
   80ca4:	2001      	movs	r0, #1
   80ca6:	4770      	bx	lr

00080ca8 <_lseek>:

extern int _lseek(int file, int ptr, int dir)
{
	return 0;
}
   80ca8:	2000      	movs	r0, #0
   80caa:	4770      	bx	lr

00080cac <main>:
 */
#include <asf.h>
#include "consoleFunctions.h"
#include "Functions.h"
int main (void)
{
   80cac:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
	/* Insert system clock initialization code here (sysclk_init()). */

	board_init();
   80cae:	4b0a      	ldr	r3, [pc, #40]	; (80cd8 <main+0x2c>)
   80cb0:	4798      	blx	r3
	sysclk_init();
   80cb2:	4b0a      	ldr	r3, [pc, #40]	; (80cdc <main+0x30>)
   80cb4:	4798      	blx	r3
	configureConsole();
   80cb6:	4b0a      	ldr	r3, [pc, #40]	; (80ce0 <main+0x34>)
   80cb8:	4798      	blx	r3
	Slave_init(SlaveAddress);
   80cba:	2008      	movs	r0, #8
   80cbc:	4b09      	ldr	r3, [pc, #36]	; (80ce4 <main+0x38>)
   80cbe:	4798      	blx	r3
	uint8_t x =0;
   80cc0:	2400      	movs	r4, #0
	while (1)
	{	slave_write(x);
   80cc2:	4f09      	ldr	r7, [pc, #36]	; (80ce8 <main+0x3c>)
		printf("sendByte: %d\n",x);
   80cc4:	4e09      	ldr	r6, [pc, #36]	; (80cec <main+0x40>)
   80cc6:	4d0a      	ldr	r5, [pc, #40]	; (80cf0 <main+0x44>)
	{	slave_write(x);
   80cc8:	b260      	sxtb	r0, r4
   80cca:	47b8      	blx	r7
		printf("sendByte: %d\n",x);
   80ccc:	4621      	mov	r1, r4
   80cce:	4630      	mov	r0, r6
   80cd0:	47a8      	blx	r5
		x++;
   80cd2:	3401      	adds	r4, #1
   80cd4:	b2e4      	uxtb	r4, r4
   80cd6:	e7f7      	b.n	80cc8 <main+0x1c>
   80cd8:	00080641 	.word	0x00080641
   80cdc:	000805dd 	.word	0x000805dd
   80ce0:	00080549 	.word	0x00080549
   80ce4:	00080229 	.word	0x00080229
   80ce8:	00080271 	.word	0x00080271
   80cec:	00083b94 	.word	0x00083b94
   80cf0:	00080d45 	.word	0x00080d45

00080cf4 <__libc_init_array>:
   80cf4:	b570      	push	{r4, r5, r6, lr}
   80cf6:	4e0f      	ldr	r6, [pc, #60]	; (80d34 <__libc_init_array+0x40>)
   80cf8:	4d0f      	ldr	r5, [pc, #60]	; (80d38 <__libc_init_array+0x44>)
   80cfa:	1b76      	subs	r6, r6, r5
   80cfc:	10b6      	asrs	r6, r6, #2
   80cfe:	bf18      	it	ne
   80d00:	2400      	movne	r4, #0
   80d02:	d005      	beq.n	80d10 <__libc_init_array+0x1c>
   80d04:	3401      	adds	r4, #1
   80d06:	f855 3b04 	ldr.w	r3, [r5], #4
   80d0a:	4798      	blx	r3
   80d0c:	42a6      	cmp	r6, r4
   80d0e:	d1f9      	bne.n	80d04 <__libc_init_array+0x10>
   80d10:	4e0a      	ldr	r6, [pc, #40]	; (80d3c <__libc_init_array+0x48>)
   80d12:	4d0b      	ldr	r5, [pc, #44]	; (80d40 <__libc_init_array+0x4c>)
   80d14:	f002 fffa 	bl	83d0c <_init>
   80d18:	1b76      	subs	r6, r6, r5
   80d1a:	10b6      	asrs	r6, r6, #2
   80d1c:	bf18      	it	ne
   80d1e:	2400      	movne	r4, #0
   80d20:	d006      	beq.n	80d30 <__libc_init_array+0x3c>
   80d22:	3401      	adds	r4, #1
   80d24:	f855 3b04 	ldr.w	r3, [r5], #4
   80d28:	4798      	blx	r3
   80d2a:	42a6      	cmp	r6, r4
   80d2c:	d1f9      	bne.n	80d22 <__libc_init_array+0x2e>
   80d2e:	bd70      	pop	{r4, r5, r6, pc}
   80d30:	bd70      	pop	{r4, r5, r6, pc}
   80d32:	bf00      	nop
   80d34:	00083d18 	.word	0x00083d18
   80d38:	00083d18 	.word	0x00083d18
   80d3c:	00083d20 	.word	0x00083d20
   80d40:	00083d18 	.word	0x00083d18

00080d44 <iprintf>:
   80d44:	b40f      	push	{r0, r1, r2, r3}
   80d46:	b510      	push	{r4, lr}
   80d48:	4b07      	ldr	r3, [pc, #28]	; (80d68 <iprintf+0x24>)
   80d4a:	b082      	sub	sp, #8
   80d4c:	ac04      	add	r4, sp, #16
   80d4e:	f854 2b04 	ldr.w	r2, [r4], #4
   80d52:	6818      	ldr	r0, [r3, #0]
   80d54:	4623      	mov	r3, r4
   80d56:	6881      	ldr	r1, [r0, #8]
   80d58:	9401      	str	r4, [sp, #4]
   80d5a:	f000 f965 	bl	81028 <_vfiprintf_r>
   80d5e:	b002      	add	sp, #8
   80d60:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
   80d64:	b004      	add	sp, #16
   80d66:	4770      	bx	lr
   80d68:	20070134 	.word	0x20070134

00080d6c <memset>:
   80d6c:	b470      	push	{r4, r5, r6}
   80d6e:	0786      	lsls	r6, r0, #30
   80d70:	d046      	beq.n	80e00 <memset+0x94>
   80d72:	1e54      	subs	r4, r2, #1
   80d74:	2a00      	cmp	r2, #0
   80d76:	d041      	beq.n	80dfc <memset+0x90>
   80d78:	b2ca      	uxtb	r2, r1
   80d7a:	4603      	mov	r3, r0
   80d7c:	e002      	b.n	80d84 <memset+0x18>
   80d7e:	f114 34ff 	adds.w	r4, r4, #4294967295
   80d82:	d33b      	bcc.n	80dfc <memset+0x90>
   80d84:	f803 2b01 	strb.w	r2, [r3], #1
   80d88:	079d      	lsls	r5, r3, #30
   80d8a:	d1f8      	bne.n	80d7e <memset+0x12>
   80d8c:	2c03      	cmp	r4, #3
   80d8e:	d92e      	bls.n	80dee <memset+0x82>
   80d90:	b2cd      	uxtb	r5, r1
   80d92:	ea45 2505 	orr.w	r5, r5, r5, lsl #8
   80d96:	2c0f      	cmp	r4, #15
   80d98:	ea45 4505 	orr.w	r5, r5, r5, lsl #16
   80d9c:	d919      	bls.n	80dd2 <memset+0x66>
   80d9e:	4626      	mov	r6, r4
   80da0:	f103 0210 	add.w	r2, r3, #16
   80da4:	3e10      	subs	r6, #16
   80da6:	2e0f      	cmp	r6, #15
   80da8:	f842 5c10 	str.w	r5, [r2, #-16]
   80dac:	f842 5c0c 	str.w	r5, [r2, #-12]
   80db0:	f842 5c08 	str.w	r5, [r2, #-8]
   80db4:	f842 5c04 	str.w	r5, [r2, #-4]
   80db8:	f102 0210 	add.w	r2, r2, #16
   80dbc:	d8f2      	bhi.n	80da4 <memset+0x38>
   80dbe:	f1a4 0210 	sub.w	r2, r4, #16
   80dc2:	f022 020f 	bic.w	r2, r2, #15
   80dc6:	f004 040f 	and.w	r4, r4, #15
   80dca:	3210      	adds	r2, #16
   80dcc:	2c03      	cmp	r4, #3
   80dce:	4413      	add	r3, r2
   80dd0:	d90d      	bls.n	80dee <memset+0x82>
   80dd2:	461e      	mov	r6, r3
   80dd4:	4622      	mov	r2, r4
   80dd6:	3a04      	subs	r2, #4
   80dd8:	2a03      	cmp	r2, #3
   80dda:	f846 5b04 	str.w	r5, [r6], #4
   80dde:	d8fa      	bhi.n	80dd6 <memset+0x6a>
   80de0:	1f22      	subs	r2, r4, #4
   80de2:	f022 0203 	bic.w	r2, r2, #3
   80de6:	3204      	adds	r2, #4
   80de8:	4413      	add	r3, r2
   80dea:	f004 0403 	and.w	r4, r4, #3
   80dee:	b12c      	cbz	r4, 80dfc <memset+0x90>
   80df0:	b2c9      	uxtb	r1, r1
   80df2:	441c      	add	r4, r3
   80df4:	f803 1b01 	strb.w	r1, [r3], #1
   80df8:	429c      	cmp	r4, r3
   80dfa:	d1fb      	bne.n	80df4 <memset+0x88>
   80dfc:	bc70      	pop	{r4, r5, r6}
   80dfe:	4770      	bx	lr
   80e00:	4614      	mov	r4, r2
   80e02:	4603      	mov	r3, r0
   80e04:	e7c2      	b.n	80d8c <memset+0x20>
   80e06:	bf00      	nop

00080e08 <setbuf>:
   80e08:	2900      	cmp	r1, #0
   80e0a:	bf0c      	ite	eq
   80e0c:	2202      	moveq	r2, #2
   80e0e:	2200      	movne	r2, #0
   80e10:	f44f 6380 	mov.w	r3, #1024	; 0x400
   80e14:	f000 b800 	b.w	80e18 <setvbuf>

00080e18 <setvbuf>:
   80e18:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
   80e1c:	4d61      	ldr	r5, [pc, #388]	; (80fa4 <setvbuf+0x18c>)
   80e1e:	b083      	sub	sp, #12
   80e20:	682d      	ldr	r5, [r5, #0]
   80e22:	4604      	mov	r4, r0
   80e24:	460f      	mov	r7, r1
   80e26:	4690      	mov	r8, r2
   80e28:	461e      	mov	r6, r3
   80e2a:	b115      	cbz	r5, 80e32 <setvbuf+0x1a>
   80e2c:	6bab      	ldr	r3, [r5, #56]	; 0x38
   80e2e:	2b00      	cmp	r3, #0
   80e30:	d064      	beq.n	80efc <setvbuf+0xe4>
   80e32:	f1b8 0f02 	cmp.w	r8, #2
   80e36:	d006      	beq.n	80e46 <setvbuf+0x2e>
   80e38:	f1b8 0f01 	cmp.w	r8, #1
   80e3c:	f200 809f 	bhi.w	80f7e <setvbuf+0x166>
   80e40:	2e00      	cmp	r6, #0
   80e42:	f2c0 809c 	blt.w	80f7e <setvbuf+0x166>
   80e46:	6e63      	ldr	r3, [r4, #100]	; 0x64
   80e48:	07d8      	lsls	r0, r3, #31
   80e4a:	d534      	bpl.n	80eb6 <setvbuf+0x9e>
   80e4c:	4621      	mov	r1, r4
   80e4e:	4628      	mov	r0, r5
   80e50:	f001 f882 	bl	81f58 <_fflush_r>
   80e54:	6b21      	ldr	r1, [r4, #48]	; 0x30
   80e56:	b141      	cbz	r1, 80e6a <setvbuf+0x52>
   80e58:	f104 0340 	add.w	r3, r4, #64	; 0x40
   80e5c:	4299      	cmp	r1, r3
   80e5e:	d002      	beq.n	80e66 <setvbuf+0x4e>
   80e60:	4628      	mov	r0, r5
   80e62:	f001 f9f7 	bl	82254 <_free_r>
   80e66:	2300      	movs	r3, #0
   80e68:	6323      	str	r3, [r4, #48]	; 0x30
   80e6a:	2200      	movs	r2, #0
   80e6c:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
   80e70:	61a2      	str	r2, [r4, #24]
   80e72:	6062      	str	r2, [r4, #4]
   80e74:	061a      	lsls	r2, r3, #24
   80e76:	d43a      	bmi.n	80eee <setvbuf+0xd6>
   80e78:	f423 634a 	bic.w	r3, r3, #3232	; 0xca0
   80e7c:	f023 0303 	bic.w	r3, r3, #3
   80e80:	f1b8 0f02 	cmp.w	r8, #2
   80e84:	81a3      	strh	r3, [r4, #12]
   80e86:	d01d      	beq.n	80ec4 <setvbuf+0xac>
   80e88:	ab01      	add	r3, sp, #4
   80e8a:	466a      	mov	r2, sp
   80e8c:	4621      	mov	r1, r4
   80e8e:	4628      	mov	r0, r5
   80e90:	f001 fc7e 	bl	82790 <__swhatbuf_r>
   80e94:	89a3      	ldrh	r3, [r4, #12]
   80e96:	4318      	orrs	r0, r3
   80e98:	81a0      	strh	r0, [r4, #12]
   80e9a:	2e00      	cmp	r6, #0
   80e9c:	d132      	bne.n	80f04 <setvbuf+0xec>
   80e9e:	9e00      	ldr	r6, [sp, #0]
   80ea0:	4630      	mov	r0, r6
   80ea2:	f001 fced 	bl	82880 <malloc>
   80ea6:	4607      	mov	r7, r0
   80ea8:	2800      	cmp	r0, #0
   80eaa:	d06b      	beq.n	80f84 <setvbuf+0x16c>
   80eac:	89a3      	ldrh	r3, [r4, #12]
   80eae:	f043 0380 	orr.w	r3, r3, #128	; 0x80
   80eb2:	81a3      	strh	r3, [r4, #12]
   80eb4:	e028      	b.n	80f08 <setvbuf+0xf0>
   80eb6:	89a3      	ldrh	r3, [r4, #12]
   80eb8:	0599      	lsls	r1, r3, #22
   80eba:	d4c7      	bmi.n	80e4c <setvbuf+0x34>
   80ebc:	6da0      	ldr	r0, [r4, #88]	; 0x58
   80ebe:	f001 fc63 	bl	82788 <__retarget_lock_acquire_recursive>
   80ec2:	e7c3      	b.n	80e4c <setvbuf+0x34>
   80ec4:	2500      	movs	r5, #0
   80ec6:	2600      	movs	r6, #0
   80ec8:	2001      	movs	r0, #1
   80eca:	6e61      	ldr	r1, [r4, #100]	; 0x64
   80ecc:	f104 0243 	add.w	r2, r4, #67	; 0x43
   80ed0:	f043 0302 	orr.w	r3, r3, #2
   80ed4:	60a6      	str	r6, [r4, #8]
   80ed6:	07ce      	lsls	r6, r1, #31
   80ed8:	81a3      	strh	r3, [r4, #12]
   80eda:	6160      	str	r0, [r4, #20]
   80edc:	6022      	str	r2, [r4, #0]
   80ede:	6122      	str	r2, [r4, #16]
   80ee0:	d401      	bmi.n	80ee6 <setvbuf+0xce>
   80ee2:	0598      	lsls	r0, r3, #22
   80ee4:	d53e      	bpl.n	80f64 <setvbuf+0x14c>
   80ee6:	4628      	mov	r0, r5
   80ee8:	b003      	add	sp, #12
   80eea:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
   80eee:	6921      	ldr	r1, [r4, #16]
   80ef0:	4628      	mov	r0, r5
   80ef2:	f001 f9af 	bl	82254 <_free_r>
   80ef6:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
   80efa:	e7bd      	b.n	80e78 <setvbuf+0x60>
   80efc:	4628      	mov	r0, r5
   80efe:	f001 f883 	bl	82008 <__sinit>
   80f02:	e796      	b.n	80e32 <setvbuf+0x1a>
   80f04:	2f00      	cmp	r7, #0
   80f06:	d0cb      	beq.n	80ea0 <setvbuf+0x88>
   80f08:	6bab      	ldr	r3, [r5, #56]	; 0x38
   80f0a:	2b00      	cmp	r3, #0
   80f0c:	d033      	beq.n	80f76 <setvbuf+0x15e>
   80f0e:	9b00      	ldr	r3, [sp, #0]
   80f10:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
   80f14:	429e      	cmp	r6, r3
   80f16:	bf1c      	itt	ne
   80f18:	f442 6200 	orrne.w	r2, r2, #2048	; 0x800
   80f1c:	81a2      	strhne	r2, [r4, #12]
   80f1e:	f1b8 0f01 	cmp.w	r8, #1
   80f22:	bf04      	itt	eq
   80f24:	f042 0201 	orreq.w	r2, r2, #1
   80f28:	81a2      	strheq	r2, [r4, #12]
   80f2a:	b292      	uxth	r2, r2
   80f2c:	f012 0308 	ands.w	r3, r2, #8
   80f30:	6027      	str	r7, [r4, #0]
   80f32:	6127      	str	r7, [r4, #16]
   80f34:	6166      	str	r6, [r4, #20]
   80f36:	d00e      	beq.n	80f56 <setvbuf+0x13e>
   80f38:	07d1      	lsls	r1, r2, #31
   80f3a:	d51a      	bpl.n	80f72 <setvbuf+0x15a>
   80f3c:	2300      	movs	r3, #0
   80f3e:	6e65      	ldr	r5, [r4, #100]	; 0x64
   80f40:	4276      	negs	r6, r6
   80f42:	f015 0501 	ands.w	r5, r5, #1
   80f46:	61a6      	str	r6, [r4, #24]
   80f48:	60a3      	str	r3, [r4, #8]
   80f4a:	d009      	beq.n	80f60 <setvbuf+0x148>
   80f4c:	2500      	movs	r5, #0
   80f4e:	4628      	mov	r0, r5
   80f50:	b003      	add	sp, #12
   80f52:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
   80f56:	60a3      	str	r3, [r4, #8]
   80f58:	6e65      	ldr	r5, [r4, #100]	; 0x64
   80f5a:	f015 0501 	ands.w	r5, r5, #1
   80f5e:	d1f5      	bne.n	80f4c <setvbuf+0x134>
   80f60:	0593      	lsls	r3, r2, #22
   80f62:	d4c0      	bmi.n	80ee6 <setvbuf+0xce>
   80f64:	6da0      	ldr	r0, [r4, #88]	; 0x58
   80f66:	f001 fc11 	bl	8278c <__retarget_lock_release_recursive>
   80f6a:	4628      	mov	r0, r5
   80f6c:	b003      	add	sp, #12
   80f6e:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
   80f72:	60a6      	str	r6, [r4, #8]
   80f74:	e7f0      	b.n	80f58 <setvbuf+0x140>
   80f76:	4628      	mov	r0, r5
   80f78:	f001 f846 	bl	82008 <__sinit>
   80f7c:	e7c7      	b.n	80f0e <setvbuf+0xf6>
   80f7e:	f04f 35ff 	mov.w	r5, #4294967295
   80f82:	e7b0      	b.n	80ee6 <setvbuf+0xce>
   80f84:	f8dd 9000 	ldr.w	r9, [sp]
   80f88:	45b1      	cmp	r9, r6
   80f8a:	d004      	beq.n	80f96 <setvbuf+0x17e>
   80f8c:	4648      	mov	r0, r9
   80f8e:	f001 fc77 	bl	82880 <malloc>
   80f92:	4607      	mov	r7, r0
   80f94:	b920      	cbnz	r0, 80fa0 <setvbuf+0x188>
   80f96:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
   80f9a:	f04f 35ff 	mov.w	r5, #4294967295
   80f9e:	e792      	b.n	80ec6 <setvbuf+0xae>
   80fa0:	464e      	mov	r6, r9
   80fa2:	e783      	b.n	80eac <setvbuf+0x94>
   80fa4:	20070134 	.word	0x20070134

00080fa8 <__sprint_r.part.0>:
   80fa8:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
   80fac:	6e4b      	ldr	r3, [r1, #100]	; 0x64
   80fae:	4693      	mov	fp, r2
   80fb0:	049c      	lsls	r4, r3, #18
   80fb2:	d52f      	bpl.n	81014 <__sprint_r.part.0+0x6c>
   80fb4:	6893      	ldr	r3, [r2, #8]
   80fb6:	6812      	ldr	r2, [r2, #0]
   80fb8:	b353      	cbz	r3, 81010 <__sprint_r.part.0+0x68>
   80fba:	460e      	mov	r6, r1
   80fbc:	4607      	mov	r7, r0
   80fbe:	f102 0908 	add.w	r9, r2, #8
   80fc2:	e919 0420 	ldmdb	r9, {r5, sl}
   80fc6:	ea5f 089a 	movs.w	r8, sl, lsr #2
   80fca:	d017      	beq.n	80ffc <__sprint_r.part.0+0x54>
   80fcc:	2400      	movs	r4, #0
   80fce:	3d04      	subs	r5, #4
   80fd0:	e001      	b.n	80fd6 <__sprint_r.part.0+0x2e>
   80fd2:	45a0      	cmp	r8, r4
   80fd4:	d010      	beq.n	80ff8 <__sprint_r.part.0+0x50>
   80fd6:	4632      	mov	r2, r6
   80fd8:	f855 1f04 	ldr.w	r1, [r5, #4]!
   80fdc:	4638      	mov	r0, r7
   80fde:	f001 f8b5 	bl	8214c <_fputwc_r>
   80fe2:	1c43      	adds	r3, r0, #1
   80fe4:	f104 0401 	add.w	r4, r4, #1
   80fe8:	d1f3      	bne.n	80fd2 <__sprint_r.part.0+0x2a>
   80fea:	2300      	movs	r3, #0
   80fec:	f8cb 3008 	str.w	r3, [fp, #8]
   80ff0:	f8cb 3004 	str.w	r3, [fp, #4]
   80ff4:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
   80ff8:	f8db 3008 	ldr.w	r3, [fp, #8]
   80ffc:	f02a 0a03 	bic.w	sl, sl, #3
   81000:	eba3 030a 	sub.w	r3, r3, sl
   81004:	f8cb 3008 	str.w	r3, [fp, #8]
   81008:	f109 0908 	add.w	r9, r9, #8
   8100c:	2b00      	cmp	r3, #0
   8100e:	d1d8      	bne.n	80fc2 <__sprint_r.part.0+0x1a>
   81010:	2000      	movs	r0, #0
   81012:	e7ea      	b.n	80fea <__sprint_r.part.0+0x42>
   81014:	f001 fa04 	bl	82420 <__sfvwrite_r>
   81018:	2300      	movs	r3, #0
   8101a:	f8cb 3008 	str.w	r3, [fp, #8]
   8101e:	f8cb 3004 	str.w	r3, [fp, #4]
   81022:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
   81026:	bf00      	nop

00081028 <_vfiprintf_r>:
   81028:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   8102c:	b0ad      	sub	sp, #180	; 0xb4
   8102e:	461d      	mov	r5, r3
   81030:	468b      	mov	fp, r1
   81032:	4690      	mov	r8, r2
   81034:	9307      	str	r3, [sp, #28]
   81036:	9006      	str	r0, [sp, #24]
   81038:	b118      	cbz	r0, 81042 <_vfiprintf_r+0x1a>
   8103a:	6b83      	ldr	r3, [r0, #56]	; 0x38
   8103c:	2b00      	cmp	r3, #0
   8103e:	f000 80f3 	beq.w	81228 <_vfiprintf_r+0x200>
   81042:	f8db 3064 	ldr.w	r3, [fp, #100]	; 0x64
   81046:	f9bb 000c 	ldrsh.w	r0, [fp, #12]
   8104a:	07df      	lsls	r7, r3, #31
   8104c:	b281      	uxth	r1, r0
   8104e:	d402      	bmi.n	81056 <_vfiprintf_r+0x2e>
   81050:	058e      	lsls	r6, r1, #22
   81052:	f140 80fc 	bpl.w	8124e <_vfiprintf_r+0x226>
   81056:	048c      	lsls	r4, r1, #18
   81058:	d40a      	bmi.n	81070 <_vfiprintf_r+0x48>
   8105a:	f8db 3064 	ldr.w	r3, [fp, #100]	; 0x64
   8105e:	f440 5100 	orr.w	r1, r0, #8192	; 0x2000
   81062:	f423 5300 	bic.w	r3, r3, #8192	; 0x2000
   81066:	f8ab 100c 	strh.w	r1, [fp, #12]
   8106a:	f8cb 3064 	str.w	r3, [fp, #100]	; 0x64
   8106e:	b289      	uxth	r1, r1
   81070:	0708      	lsls	r0, r1, #28
   81072:	f140 80b3 	bpl.w	811dc <_vfiprintf_r+0x1b4>
   81076:	f8db 3010 	ldr.w	r3, [fp, #16]
   8107a:	2b00      	cmp	r3, #0
   8107c:	f000 80ae 	beq.w	811dc <_vfiprintf_r+0x1b4>
   81080:	f001 031a 	and.w	r3, r1, #26
   81084:	2b0a      	cmp	r3, #10
   81086:	f000 80b5 	beq.w	811f4 <_vfiprintf_r+0x1cc>
   8108a:	2300      	movs	r3, #0
   8108c:	f10d 0a70 	add.w	sl, sp, #112	; 0x70
   81090:	46d1      	mov	r9, sl
   81092:	930b      	str	r3, [sp, #44]	; 0x2c
   81094:	9303      	str	r3, [sp, #12]
   81096:	9311      	str	r3, [sp, #68]	; 0x44
   81098:	9310      	str	r3, [sp, #64]	; 0x40
   8109a:	f8cd a03c 	str.w	sl, [sp, #60]	; 0x3c
   8109e:	f8cd b010 	str.w	fp, [sp, #16]
   810a2:	f898 3000 	ldrb.w	r3, [r8]
   810a6:	4644      	mov	r4, r8
   810a8:	b1fb      	cbz	r3, 810ea <_vfiprintf_r+0xc2>
   810aa:	2b25      	cmp	r3, #37	; 0x25
   810ac:	d102      	bne.n	810b4 <_vfiprintf_r+0x8c>
   810ae:	e01c      	b.n	810ea <_vfiprintf_r+0xc2>
   810b0:	2b25      	cmp	r3, #37	; 0x25
   810b2:	d003      	beq.n	810bc <_vfiprintf_r+0x94>
   810b4:	f814 3f01 	ldrb.w	r3, [r4, #1]!
   810b8:	2b00      	cmp	r3, #0
   810ba:	d1f9      	bne.n	810b0 <_vfiprintf_r+0x88>
   810bc:	eba4 0508 	sub.w	r5, r4, r8
   810c0:	b19d      	cbz	r5, 810ea <_vfiprintf_r+0xc2>
   810c2:	9b10      	ldr	r3, [sp, #64]	; 0x40
   810c4:	9a11      	ldr	r2, [sp, #68]	; 0x44
   810c6:	3301      	adds	r3, #1
   810c8:	442a      	add	r2, r5
   810ca:	2b07      	cmp	r3, #7
   810cc:	f8c9 8000 	str.w	r8, [r9]
   810d0:	f8c9 5004 	str.w	r5, [r9, #4]
   810d4:	9211      	str	r2, [sp, #68]	; 0x44
   810d6:	9310      	str	r3, [sp, #64]	; 0x40
   810d8:	dd7a      	ble.n	811d0 <_vfiprintf_r+0x1a8>
   810da:	2a00      	cmp	r2, #0
   810dc:	f040 84b5 	bne.w	81a4a <_vfiprintf_r+0xa22>
   810e0:	46d1      	mov	r9, sl
   810e2:	9b03      	ldr	r3, [sp, #12]
   810e4:	9210      	str	r2, [sp, #64]	; 0x40
   810e6:	442b      	add	r3, r5
   810e8:	9303      	str	r3, [sp, #12]
   810ea:	7823      	ldrb	r3, [r4, #0]
   810ec:	2b00      	cmp	r3, #0
   810ee:	f000 83e5 	beq.w	818bc <_vfiprintf_r+0x894>
   810f2:	2000      	movs	r0, #0
   810f4:	f04f 0300 	mov.w	r3, #0
   810f8:	f104 0801 	add.w	r8, r4, #1
   810fc:	f88d 3037 	strb.w	r3, [sp, #55]	; 0x37
   81100:	7862      	ldrb	r2, [r4, #1]
   81102:	4606      	mov	r6, r0
   81104:	4605      	mov	r5, r0
   81106:	4603      	mov	r3, r0
   81108:	f04f 34ff 	mov.w	r4, #4294967295
   8110c:	f108 0801 	add.w	r8, r8, #1
   81110:	f1a2 0120 	sub.w	r1, r2, #32
   81114:	2958      	cmp	r1, #88	; 0x58
   81116:	f200 82d9 	bhi.w	816cc <_vfiprintf_r+0x6a4>
   8111a:	e8df f011 	tbh	[pc, r1, lsl #1]
   8111e:	0228      	.short	0x0228
   81120:	02d702d7 	.word	0x02d702d7
   81124:	02d70230 	.word	0x02d70230
   81128:	02d702d7 	.word	0x02d702d7
   8112c:	02d702d7 	.word	0x02d702d7
   81130:	00a002d7 	.word	0x00a002d7
   81134:	02d70288 	.word	0x02d70288
   81138:	02b800a8 	.word	0x02b800a8
   8113c:	01a602d7 	.word	0x01a602d7
   81140:	01ab01ab 	.word	0x01ab01ab
   81144:	01ab01ab 	.word	0x01ab01ab
   81148:	01ab01ab 	.word	0x01ab01ab
   8114c:	01ab01ab 	.word	0x01ab01ab
   81150:	02d701ab 	.word	0x02d701ab
   81154:	02d702d7 	.word	0x02d702d7
   81158:	02d702d7 	.word	0x02d702d7
   8115c:	02d702d7 	.word	0x02d702d7
   81160:	02d702d7 	.word	0x02d702d7
   81164:	01b902d7 	.word	0x01b902d7
   81168:	02d702d7 	.word	0x02d702d7
   8116c:	02d702d7 	.word	0x02d702d7
   81170:	02d702d7 	.word	0x02d702d7
   81174:	02d702d7 	.word	0x02d702d7
   81178:	02d702d7 	.word	0x02d702d7
   8117c:	02d7019e 	.word	0x02d7019e
   81180:	02d702d7 	.word	0x02d702d7
   81184:	02d702d7 	.word	0x02d702d7
   81188:	02d701a2 	.word	0x02d701a2
   8118c:	025a02d7 	.word	0x025a02d7
   81190:	02d702d7 	.word	0x02d702d7
   81194:	02d702d7 	.word	0x02d702d7
   81198:	02d702d7 	.word	0x02d702d7
   8119c:	02d702d7 	.word	0x02d702d7
   811a0:	02d702d7 	.word	0x02d702d7
   811a4:	02220261 	.word	0x02220261
   811a8:	02d702d7 	.word	0x02d702d7
   811ac:	027602d7 	.word	0x027602d7
   811b0:	02d70222 	.word	0x02d70222
   811b4:	027b02d7 	.word	0x027b02d7
   811b8:	01fc02d7 	.word	0x01fc02d7
   811bc:	02100189 	.word	0x02100189
   811c0:	02d702d2 	.word	0x02d702d2
   811c4:	02d70295 	.word	0x02d70295
   811c8:	02d700ad 	.word	0x02d700ad
   811cc:	023502d7 	.word	0x023502d7
   811d0:	f109 0908 	add.w	r9, r9, #8
   811d4:	9b03      	ldr	r3, [sp, #12]
   811d6:	442b      	add	r3, r5
   811d8:	9303      	str	r3, [sp, #12]
   811da:	e786      	b.n	810ea <_vfiprintf_r+0xc2>
   811dc:	4659      	mov	r1, fp
   811de:	9806      	ldr	r0, [sp, #24]
   811e0:	f000 fdaa 	bl	81d38 <__swsetup_r>
   811e4:	bb18      	cbnz	r0, 8122e <_vfiprintf_r+0x206>
   811e6:	f8bb 100c 	ldrh.w	r1, [fp, #12]
   811ea:	f001 031a 	and.w	r3, r1, #26
   811ee:	2b0a      	cmp	r3, #10
   811f0:	f47f af4b 	bne.w	8108a <_vfiprintf_r+0x62>
   811f4:	f9bb 300e 	ldrsh.w	r3, [fp, #14]
   811f8:	2b00      	cmp	r3, #0
   811fa:	f6ff af46 	blt.w	8108a <_vfiprintf_r+0x62>
   811fe:	f8db 3064 	ldr.w	r3, [fp, #100]	; 0x64
   81202:	07db      	lsls	r3, r3, #31
   81204:	d405      	bmi.n	81212 <_vfiprintf_r+0x1ea>
   81206:	058f      	lsls	r7, r1, #22
   81208:	d403      	bmi.n	81212 <_vfiprintf_r+0x1ea>
   8120a:	f8db 0058 	ldr.w	r0, [fp, #88]	; 0x58
   8120e:	f001 fabd 	bl	8278c <__retarget_lock_release_recursive>
   81212:	462b      	mov	r3, r5
   81214:	4642      	mov	r2, r8
   81216:	4659      	mov	r1, fp
   81218:	9806      	ldr	r0, [sp, #24]
   8121a:	f000 fd49 	bl	81cb0 <__sbprintf>
   8121e:	9003      	str	r0, [sp, #12]
   81220:	9803      	ldr	r0, [sp, #12]
   81222:	b02d      	add	sp, #180	; 0xb4
   81224:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   81228:	f000 feee 	bl	82008 <__sinit>
   8122c:	e709      	b.n	81042 <_vfiprintf_r+0x1a>
   8122e:	f8db 3064 	ldr.w	r3, [fp, #100]	; 0x64
   81232:	07d9      	lsls	r1, r3, #31
   81234:	d404      	bmi.n	81240 <_vfiprintf_r+0x218>
   81236:	f8bb 300c 	ldrh.w	r3, [fp, #12]
   8123a:	059a      	lsls	r2, r3, #22
   8123c:	f140 84ae 	bpl.w	81b9c <_vfiprintf_r+0xb74>
   81240:	f04f 33ff 	mov.w	r3, #4294967295
   81244:	9303      	str	r3, [sp, #12]
   81246:	9803      	ldr	r0, [sp, #12]
   81248:	b02d      	add	sp, #180	; 0xb4
   8124a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   8124e:	f8db 0058 	ldr.w	r0, [fp, #88]	; 0x58
   81252:	f001 fa99 	bl	82788 <__retarget_lock_acquire_recursive>
   81256:	f9bb 000c 	ldrsh.w	r0, [fp, #12]
   8125a:	b281      	uxth	r1, r0
   8125c:	e6fb      	b.n	81056 <_vfiprintf_r+0x2e>
   8125e:	9907      	ldr	r1, [sp, #28]
   81260:	460a      	mov	r2, r1
   81262:	680d      	ldr	r5, [r1, #0]
   81264:	3204      	adds	r2, #4
   81266:	2d00      	cmp	r5, #0
   81268:	9207      	str	r2, [sp, #28]
   8126a:	da02      	bge.n	81272 <_vfiprintf_r+0x24a>
   8126c:	426d      	negs	r5, r5
   8126e:	f043 0304 	orr.w	r3, r3, #4
   81272:	f898 2000 	ldrb.w	r2, [r8]
   81276:	e749      	b.n	8110c <_vfiprintf_r+0xe4>
   81278:	9508      	str	r5, [sp, #32]
   8127a:	069e      	lsls	r6, r3, #26
   8127c:	f100 845a 	bmi.w	81b34 <_vfiprintf_r+0xb0c>
   81280:	9907      	ldr	r1, [sp, #28]
   81282:	06dd      	lsls	r5, r3, #27
   81284:	460a      	mov	r2, r1
   81286:	f100 83ef 	bmi.w	81a68 <_vfiprintf_r+0xa40>
   8128a:	0658      	lsls	r0, r3, #25
   8128c:	f140 83ec 	bpl.w	81a68 <_vfiprintf_r+0xa40>
   81290:	2700      	movs	r7, #0
   81292:	2201      	movs	r2, #1
   81294:	880e      	ldrh	r6, [r1, #0]
   81296:	3104      	adds	r1, #4
   81298:	9107      	str	r1, [sp, #28]
   8129a:	f04f 0100 	mov.w	r1, #0
   8129e:	2500      	movs	r5, #0
   812a0:	f88d 1037 	strb.w	r1, [sp, #55]	; 0x37
   812a4:	1c61      	adds	r1, r4, #1
   812a6:	f000 8117 	beq.w	814d8 <_vfiprintf_r+0x4b0>
   812aa:	f023 0180 	bic.w	r1, r3, #128	; 0x80
   812ae:	9102      	str	r1, [sp, #8]
   812b0:	ea56 0107 	orrs.w	r1, r6, r7
   812b4:	f040 8115 	bne.w	814e2 <_vfiprintf_r+0x4ba>
   812b8:	2c00      	cmp	r4, #0
   812ba:	f040 835b 	bne.w	81974 <_vfiprintf_r+0x94c>
   812be:	2a00      	cmp	r2, #0
   812c0:	f040 83b6 	bne.w	81a30 <_vfiprintf_r+0xa08>
   812c4:	f013 0301 	ands.w	r3, r3, #1
   812c8:	9305      	str	r3, [sp, #20]
   812ca:	f000 8455 	beq.w	81b78 <_vfiprintf_r+0xb50>
   812ce:	2330      	movs	r3, #48	; 0x30
   812d0:	f10d 0bb0 	add.w	fp, sp, #176	; 0xb0
   812d4:	f80b 3d41 	strb.w	r3, [fp, #-65]!
   812d8:	9b05      	ldr	r3, [sp, #20]
   812da:	42a3      	cmp	r3, r4
   812dc:	bfb8      	it	lt
   812de:	4623      	movlt	r3, r4
   812e0:	9301      	str	r3, [sp, #4]
   812e2:	b10d      	cbz	r5, 812e8 <_vfiprintf_r+0x2c0>
   812e4:	3301      	adds	r3, #1
   812e6:	9301      	str	r3, [sp, #4]
   812e8:	9b02      	ldr	r3, [sp, #8]
   812ea:	f013 0302 	ands.w	r3, r3, #2
   812ee:	9309      	str	r3, [sp, #36]	; 0x24
   812f0:	d002      	beq.n	812f8 <_vfiprintf_r+0x2d0>
   812f2:	9b01      	ldr	r3, [sp, #4]
   812f4:	3302      	adds	r3, #2
   812f6:	9301      	str	r3, [sp, #4]
   812f8:	9b02      	ldr	r3, [sp, #8]
   812fa:	f013 0384 	ands.w	r3, r3, #132	; 0x84
   812fe:	930a      	str	r3, [sp, #40]	; 0x28
   81300:	f040 8215 	bne.w	8172e <_vfiprintf_r+0x706>
   81304:	9b08      	ldr	r3, [sp, #32]
   81306:	9a01      	ldr	r2, [sp, #4]
   81308:	1a9d      	subs	r5, r3, r2
   8130a:	2d00      	cmp	r5, #0
   8130c:	f340 820f 	ble.w	8172e <_vfiprintf_r+0x706>
   81310:	2d10      	cmp	r5, #16
   81312:	f340 8484 	ble.w	81c1e <_vfiprintf_r+0xbf6>
   81316:	9b10      	ldr	r3, [sp, #64]	; 0x40
   81318:	46ce      	mov	lr, r9
   8131a:	2710      	movs	r7, #16
   8131c:	46a1      	mov	r9, r4
   8131e:	9a11      	ldr	r2, [sp, #68]	; 0x44
   81320:	4ec5      	ldr	r6, [pc, #788]	; (81638 <_vfiprintf_r+0x610>)
   81322:	4619      	mov	r1, r3
   81324:	9c06      	ldr	r4, [sp, #24]
   81326:	e007      	b.n	81338 <_vfiprintf_r+0x310>
   81328:	f101 0c02 	add.w	ip, r1, #2
   8132c:	4601      	mov	r1, r0
   8132e:	f10e 0e08 	add.w	lr, lr, #8
   81332:	3d10      	subs	r5, #16
   81334:	2d10      	cmp	r5, #16
   81336:	dd11      	ble.n	8135c <_vfiprintf_r+0x334>
   81338:	1c48      	adds	r0, r1, #1
   8133a:	3210      	adds	r2, #16
   8133c:	2807      	cmp	r0, #7
   8133e:	9211      	str	r2, [sp, #68]	; 0x44
   81340:	e88e 00c0 	stmia.w	lr, {r6, r7}
   81344:	9010      	str	r0, [sp, #64]	; 0x40
   81346:	ddef      	ble.n	81328 <_vfiprintf_r+0x300>
   81348:	2a00      	cmp	r2, #0
   8134a:	f040 81d9 	bne.w	81700 <_vfiprintf_r+0x6d8>
   8134e:	3d10      	subs	r5, #16
   81350:	2d10      	cmp	r5, #16
   81352:	4611      	mov	r1, r2
   81354:	f04f 0c01 	mov.w	ip, #1
   81358:	46d6      	mov	lr, sl
   8135a:	dced      	bgt.n	81338 <_vfiprintf_r+0x310>
   8135c:	464c      	mov	r4, r9
   8135e:	4661      	mov	r1, ip
   81360:	46f1      	mov	r9, lr
   81362:	442a      	add	r2, r5
   81364:	2907      	cmp	r1, #7
   81366:	9211      	str	r2, [sp, #68]	; 0x44
   81368:	f8c9 6000 	str.w	r6, [r9]
   8136c:	f8c9 5004 	str.w	r5, [r9, #4]
   81370:	9110      	str	r1, [sp, #64]	; 0x40
   81372:	f300 82eb 	bgt.w	8194c <_vfiprintf_r+0x924>
   81376:	f89d 5037 	ldrb.w	r5, [sp, #55]	; 0x37
   8137a:	f109 0908 	add.w	r9, r9, #8
   8137e:	1c48      	adds	r0, r1, #1
   81380:	2d00      	cmp	r5, #0
   81382:	f040 81dc 	bne.w	8173e <_vfiprintf_r+0x716>
   81386:	9b09      	ldr	r3, [sp, #36]	; 0x24
   81388:	2b00      	cmp	r3, #0
   8138a:	f000 81f6 	beq.w	8177a <_vfiprintf_r+0x752>
   8138e:	2102      	movs	r1, #2
   81390:	ab0e      	add	r3, sp, #56	; 0x38
   81392:	440a      	add	r2, r1
   81394:	2807      	cmp	r0, #7
   81396:	9211      	str	r2, [sp, #68]	; 0x44
   81398:	9010      	str	r0, [sp, #64]	; 0x40
   8139a:	f8c9 1004 	str.w	r1, [r9, #4]
   8139e:	f8c9 3000 	str.w	r3, [r9]
   813a2:	f340 81e6 	ble.w	81772 <_vfiprintf_r+0x74a>
   813a6:	2a00      	cmp	r2, #0
   813a8:	f040 8395 	bne.w	81ad6 <_vfiprintf_r+0xaae>
   813ac:	9b0a      	ldr	r3, [sp, #40]	; 0x28
   813ae:	2001      	movs	r0, #1
   813b0:	2b80      	cmp	r3, #128	; 0x80
   813b2:	4611      	mov	r1, r2
   813b4:	46d1      	mov	r9, sl
   813b6:	f040 81e4 	bne.w	81782 <_vfiprintf_r+0x75a>
   813ba:	9b08      	ldr	r3, [sp, #32]
   813bc:	9d01      	ldr	r5, [sp, #4]
   813be:	1b5e      	subs	r6, r3, r5
   813c0:	2e00      	cmp	r6, #0
   813c2:	f340 81de 	ble.w	81782 <_vfiprintf_r+0x75a>
   813c6:	2e10      	cmp	r6, #16
   813c8:	f340 843c 	ble.w	81c44 <_vfiprintf_r+0xc1c>
   813cc:	46cc      	mov	ip, r9
   813ce:	2710      	movs	r7, #16
   813d0:	46a1      	mov	r9, r4
   813d2:	4d9a      	ldr	r5, [pc, #616]	; (8163c <_vfiprintf_r+0x614>)
   813d4:	9c06      	ldr	r4, [sp, #24]
   813d6:	e007      	b.n	813e8 <_vfiprintf_r+0x3c0>
   813d8:	f101 0e02 	add.w	lr, r1, #2
   813dc:	4601      	mov	r1, r0
   813de:	f10c 0c08 	add.w	ip, ip, #8
   813e2:	3e10      	subs	r6, #16
   813e4:	2e10      	cmp	r6, #16
   813e6:	dd11      	ble.n	8140c <_vfiprintf_r+0x3e4>
   813e8:	1c48      	adds	r0, r1, #1
   813ea:	3210      	adds	r2, #16
   813ec:	2807      	cmp	r0, #7
   813ee:	9211      	str	r2, [sp, #68]	; 0x44
   813f0:	e88c 00a0 	stmia.w	ip, {r5, r7}
   813f4:	9010      	str	r0, [sp, #64]	; 0x40
   813f6:	ddef      	ble.n	813d8 <_vfiprintf_r+0x3b0>
   813f8:	2a00      	cmp	r2, #0
   813fa:	f040 829b 	bne.w	81934 <_vfiprintf_r+0x90c>
   813fe:	3e10      	subs	r6, #16
   81400:	2e10      	cmp	r6, #16
   81402:	f04f 0e01 	mov.w	lr, #1
   81406:	4611      	mov	r1, r2
   81408:	46d4      	mov	ip, sl
   8140a:	dced      	bgt.n	813e8 <_vfiprintf_r+0x3c0>
   8140c:	464c      	mov	r4, r9
   8140e:	46e1      	mov	r9, ip
   81410:	4432      	add	r2, r6
   81412:	f1be 0f07 	cmp.w	lr, #7
   81416:	9211      	str	r2, [sp, #68]	; 0x44
   81418:	e889 0060 	stmia.w	r9, {r5, r6}
   8141c:	f8cd e040 	str.w	lr, [sp, #64]	; 0x40
   81420:	f300 8366 	bgt.w	81af0 <_vfiprintf_r+0xac8>
   81424:	f109 0908 	add.w	r9, r9, #8
   81428:	f10e 0001 	add.w	r0, lr, #1
   8142c:	4671      	mov	r1, lr
   8142e:	e1a8      	b.n	81782 <_vfiprintf_r+0x75a>
   81430:	9508      	str	r5, [sp, #32]
   81432:	f013 0220 	ands.w	r2, r3, #32
   81436:	f040 8389 	bne.w	81b4c <_vfiprintf_r+0xb24>
   8143a:	f013 0110 	ands.w	r1, r3, #16
   8143e:	f040 8319 	bne.w	81a74 <_vfiprintf_r+0xa4c>
   81442:	f013 0240 	ands.w	r2, r3, #64	; 0x40
   81446:	f000 8315 	beq.w	81a74 <_vfiprintf_r+0xa4c>
   8144a:	9807      	ldr	r0, [sp, #28]
   8144c:	460a      	mov	r2, r1
   8144e:	4601      	mov	r1, r0
   81450:	3104      	adds	r1, #4
   81452:	8806      	ldrh	r6, [r0, #0]
   81454:	2700      	movs	r7, #0
   81456:	9107      	str	r1, [sp, #28]
   81458:	e71f      	b.n	8129a <_vfiprintf_r+0x272>
   8145a:	9508      	str	r5, [sp, #32]
   8145c:	f043 0310 	orr.w	r3, r3, #16
   81460:	e7e7      	b.n	81432 <_vfiprintf_r+0x40a>
   81462:	9508      	str	r5, [sp, #32]
   81464:	f043 0310 	orr.w	r3, r3, #16
   81468:	e707      	b.n	8127a <_vfiprintf_r+0x252>
   8146a:	f043 0380 	orr.w	r3, r3, #128	; 0x80
   8146e:	f898 2000 	ldrb.w	r2, [r8]
   81472:	e64b      	b.n	8110c <_vfiprintf_r+0xe4>
   81474:	2500      	movs	r5, #0
   81476:	f1a2 0130 	sub.w	r1, r2, #48	; 0x30
   8147a:	f818 2b01 	ldrb.w	r2, [r8], #1
   8147e:	eb05 0585 	add.w	r5, r5, r5, lsl #2
   81482:	eb01 0545 	add.w	r5, r1, r5, lsl #1
   81486:	f1a2 0130 	sub.w	r1, r2, #48	; 0x30
   8148a:	2909      	cmp	r1, #9
   8148c:	d9f5      	bls.n	8147a <_vfiprintf_r+0x452>
   8148e:	e63f      	b.n	81110 <_vfiprintf_r+0xe8>
   81490:	9508      	str	r5, [sp, #32]
   81492:	2800      	cmp	r0, #0
   81494:	f040 8402 	bne.w	81c9c <_vfiprintf_r+0xc74>
   81498:	f043 0310 	orr.w	r3, r3, #16
   8149c:	069e      	lsls	r6, r3, #26
   8149e:	f100 833d 	bmi.w	81b1c <_vfiprintf_r+0xaf4>
   814a2:	9907      	ldr	r1, [sp, #28]
   814a4:	06dd      	lsls	r5, r3, #27
   814a6:	460a      	mov	r2, r1
   814a8:	f100 82f0 	bmi.w	81a8c <_vfiprintf_r+0xa64>
   814ac:	0658      	lsls	r0, r3, #25
   814ae:	f140 82ed 	bpl.w	81a8c <_vfiprintf_r+0xa64>
   814b2:	f9b1 6000 	ldrsh.w	r6, [r1]
   814b6:	3204      	adds	r2, #4
   814b8:	17f7      	asrs	r7, r6, #31
   814ba:	4630      	mov	r0, r6
   814bc:	4639      	mov	r1, r7
   814be:	9207      	str	r2, [sp, #28]
   814c0:	2800      	cmp	r0, #0
   814c2:	f171 0200 	sbcs.w	r2, r1, #0
   814c6:	f2c0 835a 	blt.w	81b7e <_vfiprintf_r+0xb56>
   814ca:	1c61      	adds	r1, r4, #1
   814cc:	f89d 5037 	ldrb.w	r5, [sp, #55]	; 0x37
   814d0:	f04f 0201 	mov.w	r2, #1
   814d4:	f47f aee9 	bne.w	812aa <_vfiprintf_r+0x282>
   814d8:	ea56 0107 	orrs.w	r1, r6, r7
   814dc:	f000 824b 	beq.w	81976 <_vfiprintf_r+0x94e>
   814e0:	9302      	str	r3, [sp, #8]
   814e2:	2a01      	cmp	r2, #1
   814e4:	f000 828a 	beq.w	819fc <_vfiprintf_r+0x9d4>
   814e8:	2a02      	cmp	r2, #2
   814ea:	f040 825a 	bne.w	819a2 <_vfiprintf_r+0x97a>
   814ee:	46d3      	mov	fp, sl
   814f0:	980b      	ldr	r0, [sp, #44]	; 0x2c
   814f2:	0933      	lsrs	r3, r6, #4
   814f4:	ea43 7307 	orr.w	r3, r3, r7, lsl #28
   814f8:	0939      	lsrs	r1, r7, #4
   814fa:	f006 020f 	and.w	r2, r6, #15
   814fe:	460f      	mov	r7, r1
   81500:	461e      	mov	r6, r3
   81502:	5c83      	ldrb	r3, [r0, r2]
   81504:	f80b 3d01 	strb.w	r3, [fp, #-1]!
   81508:	ea56 0307 	orrs.w	r3, r6, r7
   8150c:	d1f1      	bne.n	814f2 <_vfiprintf_r+0x4ca>
   8150e:	ebaa 030b 	sub.w	r3, sl, fp
   81512:	9305      	str	r3, [sp, #20]
   81514:	e6e0      	b.n	812d8 <_vfiprintf_r+0x2b0>
   81516:	2800      	cmp	r0, #0
   81518:	f040 83bd 	bne.w	81c96 <_vfiprintf_r+0xc6e>
   8151c:	0699      	lsls	r1, r3, #26
   8151e:	f100 8359 	bmi.w	81bd4 <_vfiprintf_r+0xbac>
   81522:	06da      	lsls	r2, r3, #27
   81524:	f100 80e5 	bmi.w	816f2 <_vfiprintf_r+0x6ca>
   81528:	065b      	lsls	r3, r3, #25
   8152a:	f140 80e2 	bpl.w	816f2 <_vfiprintf_r+0x6ca>
   8152e:	9a07      	ldr	r2, [sp, #28]
   81530:	6813      	ldr	r3, [r2, #0]
   81532:	3204      	adds	r2, #4
   81534:	9207      	str	r2, [sp, #28]
   81536:	f8bd 200c 	ldrh.w	r2, [sp, #12]
   8153a:	801a      	strh	r2, [r3, #0]
   8153c:	e5b1      	b.n	810a2 <_vfiprintf_r+0x7a>
   8153e:	2278      	movs	r2, #120	; 0x78
   81540:	2130      	movs	r1, #48	; 0x30
   81542:	9508      	str	r5, [sp, #32]
   81544:	9d07      	ldr	r5, [sp, #28]
   81546:	f88d 2039 	strb.w	r2, [sp, #57]	; 0x39
   8154a:	1d2a      	adds	r2, r5, #4
   8154c:	9207      	str	r2, [sp, #28]
   8154e:	4a3c      	ldr	r2, [pc, #240]	; (81640 <_vfiprintf_r+0x618>)
   81550:	682e      	ldr	r6, [r5, #0]
   81552:	920b      	str	r2, [sp, #44]	; 0x2c
   81554:	f043 0302 	orr.w	r3, r3, #2
   81558:	f88d 1038 	strb.w	r1, [sp, #56]	; 0x38
   8155c:	2700      	movs	r7, #0
   8155e:	2202      	movs	r2, #2
   81560:	e69b      	b.n	8129a <_vfiprintf_r+0x272>
   81562:	9508      	str	r5, [sp, #32]
   81564:	2800      	cmp	r0, #0
   81566:	d099      	beq.n	8149c <_vfiprintf_r+0x474>
   81568:	f88d 6037 	strb.w	r6, [sp, #55]	; 0x37
   8156c:	e796      	b.n	8149c <_vfiprintf_r+0x474>
   8156e:	f898 2000 	ldrb.w	r2, [r8]
   81572:	2e00      	cmp	r6, #0
   81574:	f47f adca 	bne.w	8110c <_vfiprintf_r+0xe4>
   81578:	2001      	movs	r0, #1
   8157a:	2620      	movs	r6, #32
   8157c:	e5c6      	b.n	8110c <_vfiprintf_r+0xe4>
   8157e:	f043 0301 	orr.w	r3, r3, #1
   81582:	f898 2000 	ldrb.w	r2, [r8]
   81586:	e5c1      	b.n	8110c <_vfiprintf_r+0xe4>
   81588:	9508      	str	r5, [sp, #32]
   8158a:	2800      	cmp	r0, #0
   8158c:	f040 8380 	bne.w	81c90 <_vfiprintf_r+0xc68>
   81590:	492b      	ldr	r1, [pc, #172]	; (81640 <_vfiprintf_r+0x618>)
   81592:	910b      	str	r1, [sp, #44]	; 0x2c
   81594:	069f      	lsls	r7, r3, #26
   81596:	f100 82e5 	bmi.w	81b64 <_vfiprintf_r+0xb3c>
   8159a:	9807      	ldr	r0, [sp, #28]
   8159c:	06de      	lsls	r6, r3, #27
   8159e:	4601      	mov	r1, r0
   815a0:	f100 826f 	bmi.w	81a82 <_vfiprintf_r+0xa5a>
   815a4:	065d      	lsls	r5, r3, #25
   815a6:	f140 826c 	bpl.w	81a82 <_vfiprintf_r+0xa5a>
   815aa:	2700      	movs	r7, #0
   815ac:	3104      	adds	r1, #4
   815ae:	8806      	ldrh	r6, [r0, #0]
   815b0:	9107      	str	r1, [sp, #28]
   815b2:	07d8      	lsls	r0, r3, #31
   815b4:	f140 8220 	bpl.w	819f8 <_vfiprintf_r+0x9d0>
   815b8:	ea56 0107 	orrs.w	r1, r6, r7
   815bc:	f000 821c 	beq.w	819f8 <_vfiprintf_r+0x9d0>
   815c0:	2130      	movs	r1, #48	; 0x30
   815c2:	f88d 2039 	strb.w	r2, [sp, #57]	; 0x39
   815c6:	f043 0302 	orr.w	r3, r3, #2
   815ca:	f88d 1038 	strb.w	r1, [sp, #56]	; 0x38
   815ce:	2202      	movs	r2, #2
   815d0:	e663      	b.n	8129a <_vfiprintf_r+0x272>
   815d2:	9508      	str	r5, [sp, #32]
   815d4:	2800      	cmp	r0, #0
   815d6:	f040 8355 	bne.w	81c84 <_vfiprintf_r+0xc5c>
   815da:	491a      	ldr	r1, [pc, #104]	; (81644 <_vfiprintf_r+0x61c>)
   815dc:	910b      	str	r1, [sp, #44]	; 0x2c
   815de:	e7d9      	b.n	81594 <_vfiprintf_r+0x56c>
   815e0:	2201      	movs	r2, #1
   815e2:	9807      	ldr	r0, [sp, #28]
   815e4:	4611      	mov	r1, r2
   815e6:	9201      	str	r2, [sp, #4]
   815e8:	6802      	ldr	r2, [r0, #0]
   815ea:	f04f 0400 	mov.w	r4, #0
   815ee:	f88d 2048 	strb.w	r2, [sp, #72]	; 0x48
   815f2:	4602      	mov	r2, r0
   815f4:	3204      	adds	r2, #4
   815f6:	9508      	str	r5, [sp, #32]
   815f8:	f88d 4037 	strb.w	r4, [sp, #55]	; 0x37
   815fc:	9105      	str	r1, [sp, #20]
   815fe:	9207      	str	r2, [sp, #28]
   81600:	f10d 0b48 	add.w	fp, sp, #72	; 0x48
   81604:	9302      	str	r3, [sp, #8]
   81606:	2400      	movs	r4, #0
   81608:	e66e      	b.n	812e8 <_vfiprintf_r+0x2c0>
   8160a:	f043 0340 	orr.w	r3, r3, #64	; 0x40
   8160e:	f898 2000 	ldrb.w	r2, [r8]
   81612:	e57b      	b.n	8110c <_vfiprintf_r+0xe4>
   81614:	f898 2000 	ldrb.w	r2, [r8]
   81618:	2a6c      	cmp	r2, #108	; 0x6c
   8161a:	bf03      	ittte	eq
   8161c:	f898 2001 	ldrbeq.w	r2, [r8, #1]
   81620:	f043 0320 	orreq.w	r3, r3, #32
   81624:	f108 0801 	addeq.w	r8, r8, #1
   81628:	f043 0310 	orrne.w	r3, r3, #16
   8162c:	e56e      	b.n	8110c <_vfiprintf_r+0xe4>
   8162e:	f898 2000 	ldrb.w	r2, [r8]
   81632:	2001      	movs	r0, #1
   81634:	262b      	movs	r6, #43	; 0x2b
   81636:	e569      	b.n	8110c <_vfiprintf_r+0xe4>
   81638:	00083bd8 	.word	0x00083bd8
   8163c:	00083be8 	.word	0x00083be8
   81640:	00083bbc 	.word	0x00083bbc
   81644:	00083ba8 	.word	0x00083ba8
   81648:	f04f 0200 	mov.w	r2, #0
   8164c:	9907      	ldr	r1, [sp, #28]
   8164e:	9508      	str	r5, [sp, #32]
   81650:	f8d1 b000 	ldr.w	fp, [r1]
   81654:	f88d 2037 	strb.w	r2, [sp, #55]	; 0x37
   81658:	1d0d      	adds	r5, r1, #4
   8165a:	f1bb 0f00 	cmp.w	fp, #0
   8165e:	f000 82e4 	beq.w	81c2a <_vfiprintf_r+0xc02>
   81662:	1c67      	adds	r7, r4, #1
   81664:	f000 82c3 	beq.w	81bee <_vfiprintf_r+0xbc6>
   81668:	4622      	mov	r2, r4
   8166a:	2100      	movs	r1, #0
   8166c:	4658      	mov	r0, fp
   8166e:	9301      	str	r3, [sp, #4]
   81670:	f001 fbc6 	bl	82e00 <memchr>
   81674:	9b01      	ldr	r3, [sp, #4]
   81676:	2800      	cmp	r0, #0
   81678:	f000 82e8 	beq.w	81c4c <_vfiprintf_r+0xc24>
   8167c:	eba0 020b 	sub.w	r2, r0, fp
   81680:	9507      	str	r5, [sp, #28]
   81682:	9205      	str	r2, [sp, #20]
   81684:	9302      	str	r3, [sp, #8]
   81686:	f89d 5037 	ldrb.w	r5, [sp, #55]	; 0x37
   8168a:	2400      	movs	r4, #0
   8168c:	e624      	b.n	812d8 <_vfiprintf_r+0x2b0>
   8168e:	f898 2000 	ldrb.w	r2, [r8]
   81692:	f108 0701 	add.w	r7, r8, #1
   81696:	2a2a      	cmp	r2, #42	; 0x2a
   81698:	f000 82e9 	beq.w	81c6e <_vfiprintf_r+0xc46>
   8169c:	f1a2 0130 	sub.w	r1, r2, #48	; 0x30
   816a0:	2909      	cmp	r1, #9
   816a2:	46b8      	mov	r8, r7
   816a4:	f04f 0400 	mov.w	r4, #0
   816a8:	f63f ad32 	bhi.w	81110 <_vfiprintf_r+0xe8>
   816ac:	f818 2b01 	ldrb.w	r2, [r8], #1
   816b0:	eb04 0484 	add.w	r4, r4, r4, lsl #2
   816b4:	eb01 0444 	add.w	r4, r1, r4, lsl #1
   816b8:	f1a2 0130 	sub.w	r1, r2, #48	; 0x30
   816bc:	2909      	cmp	r1, #9
   816be:	d9f5      	bls.n	816ac <_vfiprintf_r+0x684>
   816c0:	e526      	b.n	81110 <_vfiprintf_r+0xe8>
   816c2:	f043 0320 	orr.w	r3, r3, #32
   816c6:	f898 2000 	ldrb.w	r2, [r8]
   816ca:	e51f      	b.n	8110c <_vfiprintf_r+0xe4>
   816cc:	9508      	str	r5, [sp, #32]
   816ce:	2800      	cmp	r0, #0
   816d0:	f040 82db 	bne.w	81c8a <_vfiprintf_r+0xc62>
   816d4:	2a00      	cmp	r2, #0
   816d6:	f000 80f1 	beq.w	818bc <_vfiprintf_r+0x894>
   816da:	2101      	movs	r1, #1
   816dc:	f88d 2048 	strb.w	r2, [sp, #72]	; 0x48
   816e0:	f04f 0200 	mov.w	r2, #0
   816e4:	9101      	str	r1, [sp, #4]
   816e6:	f88d 2037 	strb.w	r2, [sp, #55]	; 0x37
   816ea:	9105      	str	r1, [sp, #20]
   816ec:	f10d 0b48 	add.w	fp, sp, #72	; 0x48
   816f0:	e788      	b.n	81604 <_vfiprintf_r+0x5dc>
   816f2:	9a07      	ldr	r2, [sp, #28]
   816f4:	6813      	ldr	r3, [r2, #0]
   816f6:	3204      	adds	r2, #4
   816f8:	9207      	str	r2, [sp, #28]
   816fa:	9a03      	ldr	r2, [sp, #12]
   816fc:	601a      	str	r2, [r3, #0]
   816fe:	e4d0      	b.n	810a2 <_vfiprintf_r+0x7a>
   81700:	aa0f      	add	r2, sp, #60	; 0x3c
   81702:	9904      	ldr	r1, [sp, #16]
   81704:	4620      	mov	r0, r4
   81706:	f7ff fc4f 	bl	80fa8 <__sprint_r.part.0>
   8170a:	2800      	cmp	r0, #0
   8170c:	f040 8143 	bne.w	81996 <_vfiprintf_r+0x96e>
   81710:	9910      	ldr	r1, [sp, #64]	; 0x40
   81712:	46d6      	mov	lr, sl
   81714:	9a11      	ldr	r2, [sp, #68]	; 0x44
   81716:	f101 0c01 	add.w	ip, r1, #1
   8171a:	e60a      	b.n	81332 <_vfiprintf_r+0x30a>
   8171c:	aa0f      	add	r2, sp, #60	; 0x3c
   8171e:	9904      	ldr	r1, [sp, #16]
   81720:	9806      	ldr	r0, [sp, #24]
   81722:	f7ff fc41 	bl	80fa8 <__sprint_r.part.0>
   81726:	2800      	cmp	r0, #0
   81728:	f040 8135 	bne.w	81996 <_vfiprintf_r+0x96e>
   8172c:	46d1      	mov	r9, sl
   8172e:	9910      	ldr	r1, [sp, #64]	; 0x40
   81730:	f89d 5037 	ldrb.w	r5, [sp, #55]	; 0x37
   81734:	9a11      	ldr	r2, [sp, #68]	; 0x44
   81736:	1c48      	adds	r0, r1, #1
   81738:	2d00      	cmp	r5, #0
   8173a:	f43f ae24 	beq.w	81386 <_vfiprintf_r+0x35e>
   8173e:	2101      	movs	r1, #1
   81740:	f10d 0537 	add.w	r5, sp, #55	; 0x37
   81744:	440a      	add	r2, r1
   81746:	2807      	cmp	r0, #7
   81748:	9211      	str	r2, [sp, #68]	; 0x44
   8174a:	9010      	str	r0, [sp, #64]	; 0x40
   8174c:	f8c9 1004 	str.w	r1, [r9, #4]
   81750:	f8c9 5000 	str.w	r5, [r9]
   81754:	f340 8109 	ble.w	8196a <_vfiprintf_r+0x942>
   81758:	2a00      	cmp	r2, #0
   8175a:	f040 81af 	bne.w	81abc <_vfiprintf_r+0xa94>
   8175e:	9b09      	ldr	r3, [sp, #36]	; 0x24
   81760:	2b00      	cmp	r3, #0
   81762:	f43f ae23 	beq.w	813ac <_vfiprintf_r+0x384>
   81766:	2202      	movs	r2, #2
   81768:	4608      	mov	r0, r1
   8176a:	46d1      	mov	r9, sl
   8176c:	ab0e      	add	r3, sp, #56	; 0x38
   8176e:	921d      	str	r2, [sp, #116]	; 0x74
   81770:	931c      	str	r3, [sp, #112]	; 0x70
   81772:	4601      	mov	r1, r0
   81774:	f109 0908 	add.w	r9, r9, #8
   81778:	3001      	adds	r0, #1
   8177a:	9b0a      	ldr	r3, [sp, #40]	; 0x28
   8177c:	2b80      	cmp	r3, #128	; 0x80
   8177e:	f43f ae1c 	beq.w	813ba <_vfiprintf_r+0x392>
   81782:	9b05      	ldr	r3, [sp, #20]
   81784:	1ae4      	subs	r4, r4, r3
   81786:	2c00      	cmp	r4, #0
   81788:	dd2f      	ble.n	817ea <_vfiprintf_r+0x7c2>
   8178a:	2c10      	cmp	r4, #16
   8178c:	f340 8220 	ble.w	81bd0 <_vfiprintf_r+0xba8>
   81790:	46ce      	mov	lr, r9
   81792:	2610      	movs	r6, #16
   81794:	4db2      	ldr	r5, [pc, #712]	; (81a60 <_vfiprintf_r+0xa38>)
   81796:	9f06      	ldr	r7, [sp, #24]
   81798:	f8dd 9010 	ldr.w	r9, [sp, #16]
   8179c:	e006      	b.n	817ac <_vfiprintf_r+0x784>
   8179e:	1c88      	adds	r0, r1, #2
   817a0:	4619      	mov	r1, r3
   817a2:	f10e 0e08 	add.w	lr, lr, #8
   817a6:	3c10      	subs	r4, #16
   817a8:	2c10      	cmp	r4, #16
   817aa:	dd10      	ble.n	817ce <_vfiprintf_r+0x7a6>
   817ac:	1c4b      	adds	r3, r1, #1
   817ae:	3210      	adds	r2, #16
   817b0:	2b07      	cmp	r3, #7
   817b2:	9211      	str	r2, [sp, #68]	; 0x44
   817b4:	e88e 0060 	stmia.w	lr, {r5, r6}
   817b8:	9310      	str	r3, [sp, #64]	; 0x40
   817ba:	ddf0      	ble.n	8179e <_vfiprintf_r+0x776>
   817bc:	2a00      	cmp	r2, #0
   817be:	d165      	bne.n	8188c <_vfiprintf_r+0x864>
   817c0:	3c10      	subs	r4, #16
   817c2:	2c10      	cmp	r4, #16
   817c4:	f04f 0001 	mov.w	r0, #1
   817c8:	4611      	mov	r1, r2
   817ca:	46d6      	mov	lr, sl
   817cc:	dcee      	bgt.n	817ac <_vfiprintf_r+0x784>
   817ce:	46f1      	mov	r9, lr
   817d0:	4422      	add	r2, r4
   817d2:	2807      	cmp	r0, #7
   817d4:	9211      	str	r2, [sp, #68]	; 0x44
   817d6:	f8c9 5000 	str.w	r5, [r9]
   817da:	f8c9 4004 	str.w	r4, [r9, #4]
   817de:	9010      	str	r0, [sp, #64]	; 0x40
   817e0:	f300 8085 	bgt.w	818ee <_vfiprintf_r+0x8c6>
   817e4:	f109 0908 	add.w	r9, r9, #8
   817e8:	3001      	adds	r0, #1
   817ea:	9905      	ldr	r1, [sp, #20]
   817ec:	2807      	cmp	r0, #7
   817ee:	440a      	add	r2, r1
   817f0:	9211      	str	r2, [sp, #68]	; 0x44
   817f2:	f8c9 b000 	str.w	fp, [r9]
   817f6:	f8c9 1004 	str.w	r1, [r9, #4]
   817fa:	9010      	str	r0, [sp, #64]	; 0x40
   817fc:	f340 8082 	ble.w	81904 <_vfiprintf_r+0x8dc>
   81800:	2a00      	cmp	r2, #0
   81802:	f040 8118 	bne.w	81a36 <_vfiprintf_r+0xa0e>
   81806:	9b02      	ldr	r3, [sp, #8]
   81808:	9210      	str	r2, [sp, #64]	; 0x40
   8180a:	0758      	lsls	r0, r3, #29
   8180c:	d535      	bpl.n	8187a <_vfiprintf_r+0x852>
   8180e:	9b08      	ldr	r3, [sp, #32]
   81810:	9901      	ldr	r1, [sp, #4]
   81812:	1a5c      	subs	r4, r3, r1
   81814:	2c00      	cmp	r4, #0
   81816:	f340 80e7 	ble.w	819e8 <_vfiprintf_r+0x9c0>
   8181a:	46d1      	mov	r9, sl
   8181c:	2c10      	cmp	r4, #16
   8181e:	f340 820d 	ble.w	81c3c <_vfiprintf_r+0xc14>
   81822:	2510      	movs	r5, #16
   81824:	9910      	ldr	r1, [sp, #64]	; 0x40
   81826:	4e8f      	ldr	r6, [pc, #572]	; (81a64 <_vfiprintf_r+0xa3c>)
   81828:	9f06      	ldr	r7, [sp, #24]
   8182a:	f8dd b010 	ldr.w	fp, [sp, #16]
   8182e:	e006      	b.n	8183e <_vfiprintf_r+0x816>
   81830:	1c88      	adds	r0, r1, #2
   81832:	4619      	mov	r1, r3
   81834:	f109 0908 	add.w	r9, r9, #8
   81838:	3c10      	subs	r4, #16
   8183a:	2c10      	cmp	r4, #16
   8183c:	dd11      	ble.n	81862 <_vfiprintf_r+0x83a>
   8183e:	1c4b      	adds	r3, r1, #1
   81840:	3210      	adds	r2, #16
   81842:	2b07      	cmp	r3, #7
   81844:	9211      	str	r2, [sp, #68]	; 0x44
   81846:	f8c9 6000 	str.w	r6, [r9]
   8184a:	f8c9 5004 	str.w	r5, [r9, #4]
   8184e:	9310      	str	r3, [sp, #64]	; 0x40
   81850:	ddee      	ble.n	81830 <_vfiprintf_r+0x808>
   81852:	bb42      	cbnz	r2, 818a6 <_vfiprintf_r+0x87e>
   81854:	3c10      	subs	r4, #16
   81856:	2c10      	cmp	r4, #16
   81858:	f04f 0001 	mov.w	r0, #1
   8185c:	4611      	mov	r1, r2
   8185e:	46d1      	mov	r9, sl
   81860:	dced      	bgt.n	8183e <_vfiprintf_r+0x816>
   81862:	4422      	add	r2, r4
   81864:	2807      	cmp	r0, #7
   81866:	9211      	str	r2, [sp, #68]	; 0x44
   81868:	f8c9 6000 	str.w	r6, [r9]
   8186c:	f8c9 4004 	str.w	r4, [r9, #4]
   81870:	9010      	str	r0, [sp, #64]	; 0x40
   81872:	dd51      	ble.n	81918 <_vfiprintf_r+0x8f0>
   81874:	2a00      	cmp	r2, #0
   81876:	f040 819a 	bne.w	81bae <_vfiprintf_r+0xb86>
   8187a:	9b03      	ldr	r3, [sp, #12]
   8187c:	9a08      	ldr	r2, [sp, #32]
   8187e:	9901      	ldr	r1, [sp, #4]
   81880:	428a      	cmp	r2, r1
   81882:	bfac      	ite	ge
   81884:	189b      	addge	r3, r3, r2
   81886:	185b      	addlt	r3, r3, r1
   81888:	9303      	str	r3, [sp, #12]
   8188a:	e04e      	b.n	8192a <_vfiprintf_r+0x902>
   8188c:	aa0f      	add	r2, sp, #60	; 0x3c
   8188e:	4649      	mov	r1, r9
   81890:	4638      	mov	r0, r7
   81892:	f7ff fb89 	bl	80fa8 <__sprint_r.part.0>
   81896:	2800      	cmp	r0, #0
   81898:	f040 813e 	bne.w	81b18 <_vfiprintf_r+0xaf0>
   8189c:	9910      	ldr	r1, [sp, #64]	; 0x40
   8189e:	46d6      	mov	lr, sl
   818a0:	9a11      	ldr	r2, [sp, #68]	; 0x44
   818a2:	1c48      	adds	r0, r1, #1
   818a4:	e77f      	b.n	817a6 <_vfiprintf_r+0x77e>
   818a6:	aa0f      	add	r2, sp, #60	; 0x3c
   818a8:	4659      	mov	r1, fp
   818aa:	4638      	mov	r0, r7
   818ac:	f7ff fb7c 	bl	80fa8 <__sprint_r.part.0>
   818b0:	b960      	cbnz	r0, 818cc <_vfiprintf_r+0x8a4>
   818b2:	9910      	ldr	r1, [sp, #64]	; 0x40
   818b4:	46d1      	mov	r9, sl
   818b6:	9a11      	ldr	r2, [sp, #68]	; 0x44
   818b8:	1c48      	adds	r0, r1, #1
   818ba:	e7bd      	b.n	81838 <_vfiprintf_r+0x810>
   818bc:	9b11      	ldr	r3, [sp, #68]	; 0x44
   818be:	f8dd b010 	ldr.w	fp, [sp, #16]
   818c2:	2b00      	cmp	r3, #0
   818c4:	f040 81ca 	bne.w	81c5c <_vfiprintf_r+0xc34>
   818c8:	2300      	movs	r3, #0
   818ca:	9310      	str	r3, [sp, #64]	; 0x40
   818cc:	f8db 3064 	ldr.w	r3, [fp, #100]	; 0x64
   818d0:	f013 0f01 	tst.w	r3, #1
   818d4:	f8bb 300c 	ldrh.w	r3, [fp, #12]
   818d8:	d102      	bne.n	818e0 <_vfiprintf_r+0x8b8>
   818da:	059a      	lsls	r2, r3, #22
   818dc:	f140 80dd 	bpl.w	81a9a <_vfiprintf_r+0xa72>
   818e0:	065b      	lsls	r3, r3, #25
   818e2:	f53f acad 	bmi.w	81240 <_vfiprintf_r+0x218>
   818e6:	9803      	ldr	r0, [sp, #12]
   818e8:	b02d      	add	sp, #180	; 0xb4
   818ea:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   818ee:	2a00      	cmp	r2, #0
   818f0:	f040 8105 	bne.w	81afe <_vfiprintf_r+0xad6>
   818f4:	2301      	movs	r3, #1
   818f6:	46d1      	mov	r9, sl
   818f8:	9a05      	ldr	r2, [sp, #20]
   818fa:	f8cd b070 	str.w	fp, [sp, #112]	; 0x70
   818fe:	921d      	str	r2, [sp, #116]	; 0x74
   81900:	9211      	str	r2, [sp, #68]	; 0x44
   81902:	9310      	str	r3, [sp, #64]	; 0x40
   81904:	f109 0908 	add.w	r9, r9, #8
   81908:	9b02      	ldr	r3, [sp, #8]
   8190a:	0759      	lsls	r1, r3, #29
   8190c:	d504      	bpl.n	81918 <_vfiprintf_r+0x8f0>
   8190e:	9b08      	ldr	r3, [sp, #32]
   81910:	9901      	ldr	r1, [sp, #4]
   81912:	1a5c      	subs	r4, r3, r1
   81914:	2c00      	cmp	r4, #0
   81916:	dc81      	bgt.n	8181c <_vfiprintf_r+0x7f4>
   81918:	9b03      	ldr	r3, [sp, #12]
   8191a:	9908      	ldr	r1, [sp, #32]
   8191c:	9801      	ldr	r0, [sp, #4]
   8191e:	4281      	cmp	r1, r0
   81920:	bfac      	ite	ge
   81922:	185b      	addge	r3, r3, r1
   81924:	181b      	addlt	r3, r3, r0
   81926:	9303      	str	r3, [sp, #12]
   81928:	bb72      	cbnz	r2, 81988 <_vfiprintf_r+0x960>
   8192a:	2300      	movs	r3, #0
   8192c:	46d1      	mov	r9, sl
   8192e:	9310      	str	r3, [sp, #64]	; 0x40
   81930:	f7ff bbb7 	b.w	810a2 <_vfiprintf_r+0x7a>
   81934:	aa0f      	add	r2, sp, #60	; 0x3c
   81936:	9904      	ldr	r1, [sp, #16]
   81938:	4620      	mov	r0, r4
   8193a:	f7ff fb35 	bl	80fa8 <__sprint_r.part.0>
   8193e:	bb50      	cbnz	r0, 81996 <_vfiprintf_r+0x96e>
   81940:	9910      	ldr	r1, [sp, #64]	; 0x40
   81942:	46d4      	mov	ip, sl
   81944:	9a11      	ldr	r2, [sp, #68]	; 0x44
   81946:	f101 0e01 	add.w	lr, r1, #1
   8194a:	e54a      	b.n	813e2 <_vfiprintf_r+0x3ba>
   8194c:	2a00      	cmp	r2, #0
   8194e:	f47f aee5 	bne.w	8171c <_vfiprintf_r+0x6f4>
   81952:	f89d 1037 	ldrb.w	r1, [sp, #55]	; 0x37
   81956:	2900      	cmp	r1, #0
   81958:	f000 811a 	beq.w	81b90 <_vfiprintf_r+0xb68>
   8195c:	2201      	movs	r2, #1
   8195e:	46d1      	mov	r9, sl
   81960:	4610      	mov	r0, r2
   81962:	f10d 0137 	add.w	r1, sp, #55	; 0x37
   81966:	921d      	str	r2, [sp, #116]	; 0x74
   81968:	911c      	str	r1, [sp, #112]	; 0x70
   8196a:	4601      	mov	r1, r0
   8196c:	f109 0908 	add.w	r9, r9, #8
   81970:	3001      	adds	r0, #1
   81972:	e508      	b.n	81386 <_vfiprintf_r+0x35e>
   81974:	9b02      	ldr	r3, [sp, #8]
   81976:	2a01      	cmp	r2, #1
   81978:	f000 8097 	beq.w	81aaa <_vfiprintf_r+0xa82>
   8197c:	2a02      	cmp	r2, #2
   8197e:	d10d      	bne.n	8199c <_vfiprintf_r+0x974>
   81980:	9302      	str	r3, [sp, #8]
   81982:	2600      	movs	r6, #0
   81984:	2700      	movs	r7, #0
   81986:	e5b2      	b.n	814ee <_vfiprintf_r+0x4c6>
   81988:	aa0f      	add	r2, sp, #60	; 0x3c
   8198a:	9904      	ldr	r1, [sp, #16]
   8198c:	9806      	ldr	r0, [sp, #24]
   8198e:	f7ff fb0b 	bl	80fa8 <__sprint_r.part.0>
   81992:	2800      	cmp	r0, #0
   81994:	d0c9      	beq.n	8192a <_vfiprintf_r+0x902>
   81996:	f8dd b010 	ldr.w	fp, [sp, #16]
   8199a:	e797      	b.n	818cc <_vfiprintf_r+0x8a4>
   8199c:	2600      	movs	r6, #0
   8199e:	2700      	movs	r7, #0
   819a0:	9302      	str	r3, [sp, #8]
   819a2:	4651      	mov	r1, sl
   819a4:	e000      	b.n	819a8 <_vfiprintf_r+0x980>
   819a6:	4659      	mov	r1, fp
   819a8:	08f2      	lsrs	r2, r6, #3
   819aa:	ea42 7247 	orr.w	r2, r2, r7, lsl #29
   819ae:	08f8      	lsrs	r0, r7, #3
   819b0:	f006 0307 	and.w	r3, r6, #7
   819b4:	4607      	mov	r7, r0
   819b6:	4616      	mov	r6, r2
   819b8:	3330      	adds	r3, #48	; 0x30
   819ba:	ea56 0207 	orrs.w	r2, r6, r7
   819be:	f801 3c01 	strb.w	r3, [r1, #-1]
   819c2:	f101 3bff 	add.w	fp, r1, #4294967295
   819c6:	d1ee      	bne.n	819a6 <_vfiprintf_r+0x97e>
   819c8:	9a02      	ldr	r2, [sp, #8]
   819ca:	07d6      	lsls	r6, r2, #31
   819cc:	f57f ad9f 	bpl.w	8150e <_vfiprintf_r+0x4e6>
   819d0:	2b30      	cmp	r3, #48	; 0x30
   819d2:	f43f ad9c 	beq.w	8150e <_vfiprintf_r+0x4e6>
   819d6:	2330      	movs	r3, #48	; 0x30
   819d8:	3902      	subs	r1, #2
   819da:	f80b 3c01 	strb.w	r3, [fp, #-1]
   819de:	ebaa 0301 	sub.w	r3, sl, r1
   819e2:	9305      	str	r3, [sp, #20]
   819e4:	468b      	mov	fp, r1
   819e6:	e477      	b.n	812d8 <_vfiprintf_r+0x2b0>
   819e8:	9b03      	ldr	r3, [sp, #12]
   819ea:	9a08      	ldr	r2, [sp, #32]
   819ec:	428a      	cmp	r2, r1
   819ee:	bfac      	ite	ge
   819f0:	189b      	addge	r3, r3, r2
   819f2:	185b      	addlt	r3, r3, r1
   819f4:	9303      	str	r3, [sp, #12]
   819f6:	e798      	b.n	8192a <_vfiprintf_r+0x902>
   819f8:	2202      	movs	r2, #2
   819fa:	e44e      	b.n	8129a <_vfiprintf_r+0x272>
   819fc:	2f00      	cmp	r7, #0
   819fe:	bf08      	it	eq
   81a00:	2e0a      	cmpeq	r6, #10
   81a02:	d351      	bcc.n	81aa8 <_vfiprintf_r+0xa80>
   81a04:	46d3      	mov	fp, sl
   81a06:	4630      	mov	r0, r6
   81a08:	4639      	mov	r1, r7
   81a0a:	220a      	movs	r2, #10
   81a0c:	2300      	movs	r3, #0
   81a0e:	f001 ff29 	bl	83864 <__aeabi_uldivmod>
   81a12:	3230      	adds	r2, #48	; 0x30
   81a14:	f80b 2d01 	strb.w	r2, [fp, #-1]!
   81a18:	4630      	mov	r0, r6
   81a1a:	4639      	mov	r1, r7
   81a1c:	2300      	movs	r3, #0
   81a1e:	220a      	movs	r2, #10
   81a20:	f001 ff20 	bl	83864 <__aeabi_uldivmod>
   81a24:	4606      	mov	r6, r0
   81a26:	460f      	mov	r7, r1
   81a28:	ea56 0307 	orrs.w	r3, r6, r7
   81a2c:	d1eb      	bne.n	81a06 <_vfiprintf_r+0x9de>
   81a2e:	e56e      	b.n	8150e <_vfiprintf_r+0x4e6>
   81a30:	9405      	str	r4, [sp, #20]
   81a32:	46d3      	mov	fp, sl
   81a34:	e450      	b.n	812d8 <_vfiprintf_r+0x2b0>
   81a36:	aa0f      	add	r2, sp, #60	; 0x3c
   81a38:	9904      	ldr	r1, [sp, #16]
   81a3a:	9806      	ldr	r0, [sp, #24]
   81a3c:	f7ff fab4 	bl	80fa8 <__sprint_r.part.0>
   81a40:	2800      	cmp	r0, #0
   81a42:	d1a8      	bne.n	81996 <_vfiprintf_r+0x96e>
   81a44:	46d1      	mov	r9, sl
   81a46:	9a11      	ldr	r2, [sp, #68]	; 0x44
   81a48:	e75e      	b.n	81908 <_vfiprintf_r+0x8e0>
   81a4a:	aa0f      	add	r2, sp, #60	; 0x3c
   81a4c:	9904      	ldr	r1, [sp, #16]
   81a4e:	9806      	ldr	r0, [sp, #24]
   81a50:	f7ff faaa 	bl	80fa8 <__sprint_r.part.0>
   81a54:	2800      	cmp	r0, #0
   81a56:	d19e      	bne.n	81996 <_vfiprintf_r+0x96e>
   81a58:	46d1      	mov	r9, sl
   81a5a:	f7ff bbbb 	b.w	811d4 <_vfiprintf_r+0x1ac>
   81a5e:	bf00      	nop
   81a60:	00083be8 	.word	0x00083be8
   81a64:	00083bd8 	.word	0x00083bd8
   81a68:	3104      	adds	r1, #4
   81a6a:	6816      	ldr	r6, [r2, #0]
   81a6c:	2700      	movs	r7, #0
   81a6e:	2201      	movs	r2, #1
   81a70:	9107      	str	r1, [sp, #28]
   81a72:	e412      	b.n	8129a <_vfiprintf_r+0x272>
   81a74:	9807      	ldr	r0, [sp, #28]
   81a76:	2700      	movs	r7, #0
   81a78:	4601      	mov	r1, r0
   81a7a:	3104      	adds	r1, #4
   81a7c:	6806      	ldr	r6, [r0, #0]
   81a7e:	9107      	str	r1, [sp, #28]
   81a80:	e40b      	b.n	8129a <_vfiprintf_r+0x272>
   81a82:	680e      	ldr	r6, [r1, #0]
   81a84:	3104      	adds	r1, #4
   81a86:	9107      	str	r1, [sp, #28]
   81a88:	2700      	movs	r7, #0
   81a8a:	e592      	b.n	815b2 <_vfiprintf_r+0x58a>
   81a8c:	6816      	ldr	r6, [r2, #0]
   81a8e:	3204      	adds	r2, #4
   81a90:	17f7      	asrs	r7, r6, #31
   81a92:	9207      	str	r2, [sp, #28]
   81a94:	4630      	mov	r0, r6
   81a96:	4639      	mov	r1, r7
   81a98:	e512      	b.n	814c0 <_vfiprintf_r+0x498>
   81a9a:	f8db 0058 	ldr.w	r0, [fp, #88]	; 0x58
   81a9e:	f000 fe75 	bl	8278c <__retarget_lock_release_recursive>
   81aa2:	f8bb 300c 	ldrh.w	r3, [fp, #12]
   81aa6:	e71b      	b.n	818e0 <_vfiprintf_r+0x8b8>
   81aa8:	9b02      	ldr	r3, [sp, #8]
   81aaa:	9302      	str	r3, [sp, #8]
   81aac:	2301      	movs	r3, #1
   81aae:	f10d 0bb0 	add.w	fp, sp, #176	; 0xb0
   81ab2:	3630      	adds	r6, #48	; 0x30
   81ab4:	f80b 6d41 	strb.w	r6, [fp, #-65]!
   81ab8:	9305      	str	r3, [sp, #20]
   81aba:	e40d      	b.n	812d8 <_vfiprintf_r+0x2b0>
   81abc:	aa0f      	add	r2, sp, #60	; 0x3c
   81abe:	9904      	ldr	r1, [sp, #16]
   81ac0:	9806      	ldr	r0, [sp, #24]
   81ac2:	f7ff fa71 	bl	80fa8 <__sprint_r.part.0>
   81ac6:	2800      	cmp	r0, #0
   81ac8:	f47f af65 	bne.w	81996 <_vfiprintf_r+0x96e>
   81acc:	9910      	ldr	r1, [sp, #64]	; 0x40
   81ace:	46d1      	mov	r9, sl
   81ad0:	9a11      	ldr	r2, [sp, #68]	; 0x44
   81ad2:	1c48      	adds	r0, r1, #1
   81ad4:	e457      	b.n	81386 <_vfiprintf_r+0x35e>
   81ad6:	aa0f      	add	r2, sp, #60	; 0x3c
   81ad8:	9904      	ldr	r1, [sp, #16]
   81ada:	9806      	ldr	r0, [sp, #24]
   81adc:	f7ff fa64 	bl	80fa8 <__sprint_r.part.0>
   81ae0:	2800      	cmp	r0, #0
   81ae2:	f47f af58 	bne.w	81996 <_vfiprintf_r+0x96e>
   81ae6:	9910      	ldr	r1, [sp, #64]	; 0x40
   81ae8:	46d1      	mov	r9, sl
   81aea:	9a11      	ldr	r2, [sp, #68]	; 0x44
   81aec:	1c48      	adds	r0, r1, #1
   81aee:	e644      	b.n	8177a <_vfiprintf_r+0x752>
   81af0:	2a00      	cmp	r2, #0
   81af2:	f040 8087 	bne.w	81c04 <_vfiprintf_r+0xbdc>
   81af6:	2001      	movs	r0, #1
   81af8:	4611      	mov	r1, r2
   81afa:	46d1      	mov	r9, sl
   81afc:	e641      	b.n	81782 <_vfiprintf_r+0x75a>
   81afe:	aa0f      	add	r2, sp, #60	; 0x3c
   81b00:	9904      	ldr	r1, [sp, #16]
   81b02:	9806      	ldr	r0, [sp, #24]
   81b04:	f7ff fa50 	bl	80fa8 <__sprint_r.part.0>
   81b08:	2800      	cmp	r0, #0
   81b0a:	f47f af44 	bne.w	81996 <_vfiprintf_r+0x96e>
   81b0e:	9810      	ldr	r0, [sp, #64]	; 0x40
   81b10:	46d1      	mov	r9, sl
   81b12:	9a11      	ldr	r2, [sp, #68]	; 0x44
   81b14:	3001      	adds	r0, #1
   81b16:	e668      	b.n	817ea <_vfiprintf_r+0x7c2>
   81b18:	46cb      	mov	fp, r9
   81b1a:	e6d7      	b.n	818cc <_vfiprintf_r+0x8a4>
   81b1c:	9d07      	ldr	r5, [sp, #28]
   81b1e:	3507      	adds	r5, #7
   81b20:	f025 0507 	bic.w	r5, r5, #7
   81b24:	f105 0208 	add.w	r2, r5, #8
   81b28:	e9d5 0100 	ldrd	r0, r1, [r5]
   81b2c:	9207      	str	r2, [sp, #28]
   81b2e:	4606      	mov	r6, r0
   81b30:	460f      	mov	r7, r1
   81b32:	e4c5      	b.n	814c0 <_vfiprintf_r+0x498>
   81b34:	9d07      	ldr	r5, [sp, #28]
   81b36:	3507      	adds	r5, #7
   81b38:	f025 0207 	bic.w	r2, r5, #7
   81b3c:	f102 0108 	add.w	r1, r2, #8
   81b40:	e9d2 6700 	ldrd	r6, r7, [r2]
   81b44:	9107      	str	r1, [sp, #28]
   81b46:	2201      	movs	r2, #1
   81b48:	f7ff bba7 	b.w	8129a <_vfiprintf_r+0x272>
   81b4c:	9d07      	ldr	r5, [sp, #28]
   81b4e:	3507      	adds	r5, #7
   81b50:	f025 0207 	bic.w	r2, r5, #7
   81b54:	f102 0108 	add.w	r1, r2, #8
   81b58:	e9d2 6700 	ldrd	r6, r7, [r2]
   81b5c:	9107      	str	r1, [sp, #28]
   81b5e:	2200      	movs	r2, #0
   81b60:	f7ff bb9b 	b.w	8129a <_vfiprintf_r+0x272>
   81b64:	9d07      	ldr	r5, [sp, #28]
   81b66:	3507      	adds	r5, #7
   81b68:	f025 0107 	bic.w	r1, r5, #7
   81b6c:	f101 0008 	add.w	r0, r1, #8
   81b70:	9007      	str	r0, [sp, #28]
   81b72:	e9d1 6700 	ldrd	r6, r7, [r1]
   81b76:	e51c      	b.n	815b2 <_vfiprintf_r+0x58a>
   81b78:	46d3      	mov	fp, sl
   81b7a:	f7ff bbad 	b.w	812d8 <_vfiprintf_r+0x2b0>
   81b7e:	252d      	movs	r5, #45	; 0x2d
   81b80:	4276      	negs	r6, r6
   81b82:	eb67 0747 	sbc.w	r7, r7, r7, lsl #1
   81b86:	f88d 5037 	strb.w	r5, [sp, #55]	; 0x37
   81b8a:	2201      	movs	r2, #1
   81b8c:	f7ff bb8a 	b.w	812a4 <_vfiprintf_r+0x27c>
   81b90:	9b09      	ldr	r3, [sp, #36]	; 0x24
   81b92:	b9b3      	cbnz	r3, 81bc2 <_vfiprintf_r+0xb9a>
   81b94:	4611      	mov	r1, r2
   81b96:	2001      	movs	r0, #1
   81b98:	46d1      	mov	r9, sl
   81b9a:	e5f2      	b.n	81782 <_vfiprintf_r+0x75a>
   81b9c:	f8db 0058 	ldr.w	r0, [fp, #88]	; 0x58
   81ba0:	f000 fdf4 	bl	8278c <__retarget_lock_release_recursive>
   81ba4:	f04f 33ff 	mov.w	r3, #4294967295
   81ba8:	9303      	str	r3, [sp, #12]
   81baa:	f7ff bb4c 	b.w	81246 <_vfiprintf_r+0x21e>
   81bae:	aa0f      	add	r2, sp, #60	; 0x3c
   81bb0:	9904      	ldr	r1, [sp, #16]
   81bb2:	9806      	ldr	r0, [sp, #24]
   81bb4:	f7ff f9f8 	bl	80fa8 <__sprint_r.part.0>
   81bb8:	2800      	cmp	r0, #0
   81bba:	f47f aeec 	bne.w	81996 <_vfiprintf_r+0x96e>
   81bbe:	9a11      	ldr	r2, [sp, #68]	; 0x44
   81bc0:	e6aa      	b.n	81918 <_vfiprintf_r+0x8f0>
   81bc2:	2202      	movs	r2, #2
   81bc4:	ab0e      	add	r3, sp, #56	; 0x38
   81bc6:	921d      	str	r2, [sp, #116]	; 0x74
   81bc8:	931c      	str	r3, [sp, #112]	; 0x70
   81bca:	2001      	movs	r0, #1
   81bcc:	46d1      	mov	r9, sl
   81bce:	e5d0      	b.n	81772 <_vfiprintf_r+0x74a>
   81bd0:	4d34      	ldr	r5, [pc, #208]	; (81ca4 <_vfiprintf_r+0xc7c>)
   81bd2:	e5fd      	b.n	817d0 <_vfiprintf_r+0x7a8>
   81bd4:	9a07      	ldr	r2, [sp, #28]
   81bd6:	4613      	mov	r3, r2
   81bd8:	3304      	adds	r3, #4
   81bda:	9307      	str	r3, [sp, #28]
   81bdc:	9b03      	ldr	r3, [sp, #12]
   81bde:	6811      	ldr	r1, [r2, #0]
   81be0:	17dd      	asrs	r5, r3, #31
   81be2:	461a      	mov	r2, r3
   81be4:	462b      	mov	r3, r5
   81be6:	e9c1 2300 	strd	r2, r3, [r1]
   81bea:	f7ff ba5a 	b.w	810a2 <_vfiprintf_r+0x7a>
   81bee:	4658      	mov	r0, fp
   81bf0:	9507      	str	r5, [sp, #28]
   81bf2:	9302      	str	r3, [sp, #8]
   81bf4:	f001 fc3c 	bl	83470 <strlen>
   81bf8:	2400      	movs	r4, #0
   81bfa:	9005      	str	r0, [sp, #20]
   81bfc:	f89d 5037 	ldrb.w	r5, [sp, #55]	; 0x37
   81c00:	f7ff bb6a 	b.w	812d8 <_vfiprintf_r+0x2b0>
   81c04:	aa0f      	add	r2, sp, #60	; 0x3c
   81c06:	9904      	ldr	r1, [sp, #16]
   81c08:	9806      	ldr	r0, [sp, #24]
   81c0a:	f7ff f9cd 	bl	80fa8 <__sprint_r.part.0>
   81c0e:	2800      	cmp	r0, #0
   81c10:	f47f aec1 	bne.w	81996 <_vfiprintf_r+0x96e>
   81c14:	9910      	ldr	r1, [sp, #64]	; 0x40
   81c16:	46d1      	mov	r9, sl
   81c18:	9a11      	ldr	r2, [sp, #68]	; 0x44
   81c1a:	1c48      	adds	r0, r1, #1
   81c1c:	e5b1      	b.n	81782 <_vfiprintf_r+0x75a>
   81c1e:	9910      	ldr	r1, [sp, #64]	; 0x40
   81c20:	9a11      	ldr	r2, [sp, #68]	; 0x44
   81c22:	3101      	adds	r1, #1
   81c24:	4e20      	ldr	r6, [pc, #128]	; (81ca8 <_vfiprintf_r+0xc80>)
   81c26:	f7ff bb9c 	b.w	81362 <_vfiprintf_r+0x33a>
   81c2a:	2c06      	cmp	r4, #6
   81c2c:	bf28      	it	cs
   81c2e:	2406      	movcs	r4, #6
   81c30:	9507      	str	r5, [sp, #28]
   81c32:	9405      	str	r4, [sp, #20]
   81c34:	9401      	str	r4, [sp, #4]
   81c36:	f8df b074 	ldr.w	fp, [pc, #116]	; 81cac <_vfiprintf_r+0xc84>
   81c3a:	e4e3      	b.n	81604 <_vfiprintf_r+0x5dc>
   81c3c:	9810      	ldr	r0, [sp, #64]	; 0x40
   81c3e:	4e1a      	ldr	r6, [pc, #104]	; (81ca8 <_vfiprintf_r+0xc80>)
   81c40:	3001      	adds	r0, #1
   81c42:	e60e      	b.n	81862 <_vfiprintf_r+0x83a>
   81c44:	4686      	mov	lr, r0
   81c46:	4d17      	ldr	r5, [pc, #92]	; (81ca4 <_vfiprintf_r+0xc7c>)
   81c48:	f7ff bbe2 	b.w	81410 <_vfiprintf_r+0x3e8>
   81c4c:	9405      	str	r4, [sp, #20]
   81c4e:	9507      	str	r5, [sp, #28]
   81c50:	9302      	str	r3, [sp, #8]
   81c52:	4604      	mov	r4, r0
   81c54:	f89d 5037 	ldrb.w	r5, [sp, #55]	; 0x37
   81c58:	f7ff bb3e 	b.w	812d8 <_vfiprintf_r+0x2b0>
   81c5c:	9806      	ldr	r0, [sp, #24]
   81c5e:	aa0f      	add	r2, sp, #60	; 0x3c
   81c60:	4659      	mov	r1, fp
   81c62:	f7ff f9a1 	bl	80fa8 <__sprint_r.part.0>
   81c66:	2800      	cmp	r0, #0
   81c68:	f43f ae2e 	beq.w	818c8 <_vfiprintf_r+0x8a0>
   81c6c:	e62e      	b.n	818cc <_vfiprintf_r+0x8a4>
   81c6e:	9907      	ldr	r1, [sp, #28]
   81c70:	f898 2001 	ldrb.w	r2, [r8, #1]
   81c74:	680c      	ldr	r4, [r1, #0]
   81c76:	3104      	adds	r1, #4
   81c78:	ea44 74e4 	orr.w	r4, r4, r4, asr #31
   81c7c:	46b8      	mov	r8, r7
   81c7e:	9107      	str	r1, [sp, #28]
   81c80:	f7ff ba44 	b.w	8110c <_vfiprintf_r+0xe4>
   81c84:	f88d 6037 	strb.w	r6, [sp, #55]	; 0x37
   81c88:	e4a7      	b.n	815da <_vfiprintf_r+0x5b2>
   81c8a:	f88d 6037 	strb.w	r6, [sp, #55]	; 0x37
   81c8e:	e521      	b.n	816d4 <_vfiprintf_r+0x6ac>
   81c90:	f88d 6037 	strb.w	r6, [sp, #55]	; 0x37
   81c94:	e47c      	b.n	81590 <_vfiprintf_r+0x568>
   81c96:	f88d 6037 	strb.w	r6, [sp, #55]	; 0x37
   81c9a:	e43f      	b.n	8151c <_vfiprintf_r+0x4f4>
   81c9c:	f88d 6037 	strb.w	r6, [sp, #55]	; 0x37
   81ca0:	f7ff bbfa 	b.w	81498 <_vfiprintf_r+0x470>
   81ca4:	00083be8 	.word	0x00083be8
   81ca8:	00083bd8 	.word	0x00083bd8
   81cac:	00083bd0 	.word	0x00083bd0

00081cb0 <__sbprintf>:
   81cb0:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
   81cb4:	460c      	mov	r4, r1
   81cb6:	f04f 0e00 	mov.w	lr, #0
   81cba:	f44f 6580 	mov.w	r5, #1024	; 0x400
   81cbe:	4606      	mov	r6, r0
   81cc0:	4617      	mov	r7, r2
   81cc2:	4698      	mov	r8, r3
   81cc4:	6e62      	ldr	r2, [r4, #100]	; 0x64
   81cc6:	89e3      	ldrh	r3, [r4, #14]
   81cc8:	8989      	ldrh	r1, [r1, #12]
   81cca:	f5ad 6d8d 	sub.w	sp, sp, #1128	; 0x468
   81cce:	f021 0102 	bic.w	r1, r1, #2
   81cd2:	9219      	str	r2, [sp, #100]	; 0x64
   81cd4:	f8ad 300e 	strh.w	r3, [sp, #14]
   81cd8:	69e2      	ldr	r2, [r4, #28]
   81cda:	6a63      	ldr	r3, [r4, #36]	; 0x24
   81cdc:	f8ad 100c 	strh.w	r1, [sp, #12]
   81ce0:	a816      	add	r0, sp, #88	; 0x58
   81ce2:	a91a      	add	r1, sp, #104	; 0x68
   81ce4:	f8cd e018 	str.w	lr, [sp, #24]
   81ce8:	9207      	str	r2, [sp, #28]
   81cea:	9309      	str	r3, [sp, #36]	; 0x24
   81cec:	9100      	str	r1, [sp, #0]
   81cee:	9104      	str	r1, [sp, #16]
   81cf0:	9502      	str	r5, [sp, #8]
   81cf2:	9505      	str	r5, [sp, #20]
   81cf4:	f000 fd44 	bl	82780 <__retarget_lock_init_recursive>
   81cf8:	4643      	mov	r3, r8
   81cfa:	463a      	mov	r2, r7
   81cfc:	4669      	mov	r1, sp
   81cfe:	4630      	mov	r0, r6
   81d00:	f7ff f992 	bl	81028 <_vfiprintf_r>
   81d04:	1e05      	subs	r5, r0, #0
   81d06:	db07      	blt.n	81d18 <__sbprintf+0x68>
   81d08:	4630      	mov	r0, r6
   81d0a:	4669      	mov	r1, sp
   81d0c:	f000 f924 	bl	81f58 <_fflush_r>
   81d10:	2800      	cmp	r0, #0
   81d12:	bf18      	it	ne
   81d14:	f04f 35ff 	movne.w	r5, #4294967295
   81d18:	f8bd 300c 	ldrh.w	r3, [sp, #12]
   81d1c:	065b      	lsls	r3, r3, #25
   81d1e:	d503      	bpl.n	81d28 <__sbprintf+0x78>
   81d20:	89a3      	ldrh	r3, [r4, #12]
   81d22:	f043 0340 	orr.w	r3, r3, #64	; 0x40
   81d26:	81a3      	strh	r3, [r4, #12]
   81d28:	9816      	ldr	r0, [sp, #88]	; 0x58
   81d2a:	f000 fd2b 	bl	82784 <__retarget_lock_close_recursive>
   81d2e:	4628      	mov	r0, r5
   81d30:	f50d 6d8d 	add.w	sp, sp, #1128	; 0x468
   81d34:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

00081d38 <__swsetup_r>:
   81d38:	b538      	push	{r3, r4, r5, lr}
   81d3a:	4b30      	ldr	r3, [pc, #192]	; (81dfc <__swsetup_r+0xc4>)
   81d3c:	4605      	mov	r5, r0
   81d3e:	6818      	ldr	r0, [r3, #0]
   81d40:	460c      	mov	r4, r1
   81d42:	b110      	cbz	r0, 81d4a <__swsetup_r+0x12>
   81d44:	6b83      	ldr	r3, [r0, #56]	; 0x38
   81d46:	2b00      	cmp	r3, #0
   81d48:	d038      	beq.n	81dbc <__swsetup_r+0x84>
   81d4a:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
   81d4e:	b293      	uxth	r3, r2
   81d50:	0718      	lsls	r0, r3, #28
   81d52:	d50c      	bpl.n	81d6e <__swsetup_r+0x36>
   81d54:	6920      	ldr	r0, [r4, #16]
   81d56:	b1a8      	cbz	r0, 81d84 <__swsetup_r+0x4c>
   81d58:	f013 0201 	ands.w	r2, r3, #1
   81d5c:	d01e      	beq.n	81d9c <__swsetup_r+0x64>
   81d5e:	2200      	movs	r2, #0
   81d60:	6963      	ldr	r3, [r4, #20]
   81d62:	60a2      	str	r2, [r4, #8]
   81d64:	425b      	negs	r3, r3
   81d66:	61a3      	str	r3, [r4, #24]
   81d68:	b1f0      	cbz	r0, 81da8 <__swsetup_r+0x70>
   81d6a:	2000      	movs	r0, #0
   81d6c:	bd38      	pop	{r3, r4, r5, pc}
   81d6e:	06d9      	lsls	r1, r3, #27
   81d70:	d53b      	bpl.n	81dea <__swsetup_r+0xb2>
   81d72:	0758      	lsls	r0, r3, #29
   81d74:	d425      	bmi.n	81dc2 <__swsetup_r+0x8a>
   81d76:	6920      	ldr	r0, [r4, #16]
   81d78:	f042 0308 	orr.w	r3, r2, #8
   81d7c:	81a3      	strh	r3, [r4, #12]
   81d7e:	b29b      	uxth	r3, r3
   81d80:	2800      	cmp	r0, #0
   81d82:	d1e9      	bne.n	81d58 <__swsetup_r+0x20>
   81d84:	f403 7220 	and.w	r2, r3, #640	; 0x280
   81d88:	f5b2 7f00 	cmp.w	r2, #512	; 0x200
   81d8c:	d0e4      	beq.n	81d58 <__swsetup_r+0x20>
   81d8e:	4628      	mov	r0, r5
   81d90:	4621      	mov	r1, r4
   81d92:	f000 fd2b 	bl	827ec <__smakebuf_r>
   81d96:	89a3      	ldrh	r3, [r4, #12]
   81d98:	6920      	ldr	r0, [r4, #16]
   81d9a:	e7dd      	b.n	81d58 <__swsetup_r+0x20>
   81d9c:	0799      	lsls	r1, r3, #30
   81d9e:	bf58      	it	pl
   81da0:	6962      	ldrpl	r2, [r4, #20]
   81da2:	60a2      	str	r2, [r4, #8]
   81da4:	2800      	cmp	r0, #0
   81da6:	d1e0      	bne.n	81d6a <__swsetup_r+0x32>
   81da8:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
   81dac:	061a      	lsls	r2, r3, #24
   81dae:	d5dd      	bpl.n	81d6c <__swsetup_r+0x34>
   81db0:	f043 0340 	orr.w	r3, r3, #64	; 0x40
   81db4:	81a3      	strh	r3, [r4, #12]
   81db6:	f04f 30ff 	mov.w	r0, #4294967295
   81dba:	bd38      	pop	{r3, r4, r5, pc}
   81dbc:	f000 f924 	bl	82008 <__sinit>
   81dc0:	e7c3      	b.n	81d4a <__swsetup_r+0x12>
   81dc2:	6b21      	ldr	r1, [r4, #48]	; 0x30
   81dc4:	b151      	cbz	r1, 81ddc <__swsetup_r+0xa4>
   81dc6:	f104 0340 	add.w	r3, r4, #64	; 0x40
   81dca:	4299      	cmp	r1, r3
   81dcc:	d004      	beq.n	81dd8 <__swsetup_r+0xa0>
   81dce:	4628      	mov	r0, r5
   81dd0:	f000 fa40 	bl	82254 <_free_r>
   81dd4:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
   81dd8:	2300      	movs	r3, #0
   81dda:	6323      	str	r3, [r4, #48]	; 0x30
   81ddc:	2300      	movs	r3, #0
   81dde:	6920      	ldr	r0, [r4, #16]
   81de0:	f022 0224 	bic.w	r2, r2, #36	; 0x24
   81de4:	e884 0009 	stmia.w	r4, {r0, r3}
   81de8:	e7c6      	b.n	81d78 <__swsetup_r+0x40>
   81dea:	2309      	movs	r3, #9
   81dec:	f042 0240 	orr.w	r2, r2, #64	; 0x40
   81df0:	602b      	str	r3, [r5, #0]
   81df2:	f04f 30ff 	mov.w	r0, #4294967295
   81df6:	81a2      	strh	r2, [r4, #12]
   81df8:	bd38      	pop	{r3, r4, r5, pc}
   81dfa:	bf00      	nop
   81dfc:	20070134 	.word	0x20070134

00081e00 <register_fini>:
   81e00:	4b02      	ldr	r3, [pc, #8]	; (81e0c <register_fini+0xc>)
   81e02:	b113      	cbz	r3, 81e0a <register_fini+0xa>
   81e04:	4802      	ldr	r0, [pc, #8]	; (81e10 <register_fini+0x10>)
   81e06:	f000 b805 	b.w	81e14 <atexit>
   81e0a:	4770      	bx	lr
   81e0c:	00000000 	.word	0x00000000
   81e10:	00082081 	.word	0x00082081

00081e14 <atexit>:
   81e14:	2300      	movs	r3, #0
   81e16:	4601      	mov	r1, r0
   81e18:	461a      	mov	r2, r3
   81e1a:	4618      	mov	r0, r3
   81e1c:	f001 bbfa 	b.w	83614 <__register_exitproc>

00081e20 <__sflush_r>:
   81e20:	f9b1 300c 	ldrsh.w	r3, [r1, #12]
   81e24:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
   81e28:	b29a      	uxth	r2, r3
   81e2a:	460d      	mov	r5, r1
   81e2c:	0711      	lsls	r1, r2, #28
   81e2e:	4680      	mov	r8, r0
   81e30:	d43a      	bmi.n	81ea8 <__sflush_r+0x88>
   81e32:	686a      	ldr	r2, [r5, #4]
   81e34:	f443 6300 	orr.w	r3, r3, #2048	; 0x800
   81e38:	2a00      	cmp	r2, #0
   81e3a:	81ab      	strh	r3, [r5, #12]
   81e3c:	dd70      	ble.n	81f20 <__sflush_r+0x100>
   81e3e:	6aac      	ldr	r4, [r5, #40]	; 0x28
   81e40:	2c00      	cmp	r4, #0
   81e42:	d04a      	beq.n	81eda <__sflush_r+0xba>
   81e44:	2200      	movs	r2, #0
   81e46:	b29b      	uxth	r3, r3
   81e48:	f8d8 6000 	ldr.w	r6, [r8]
   81e4c:	f8c8 2000 	str.w	r2, [r8]
   81e50:	f413 5280 	ands.w	r2, r3, #4096	; 0x1000
   81e54:	d068      	beq.n	81f28 <__sflush_r+0x108>
   81e56:	6d2a      	ldr	r2, [r5, #80]	; 0x50
   81e58:	075f      	lsls	r7, r3, #29
   81e5a:	d505      	bpl.n	81e68 <__sflush_r+0x48>
   81e5c:	6869      	ldr	r1, [r5, #4]
   81e5e:	6b2b      	ldr	r3, [r5, #48]	; 0x30
   81e60:	1a52      	subs	r2, r2, r1
   81e62:	b10b      	cbz	r3, 81e68 <__sflush_r+0x48>
   81e64:	6beb      	ldr	r3, [r5, #60]	; 0x3c
   81e66:	1ad2      	subs	r2, r2, r3
   81e68:	2300      	movs	r3, #0
   81e6a:	69e9      	ldr	r1, [r5, #28]
   81e6c:	4640      	mov	r0, r8
   81e6e:	47a0      	blx	r4
   81e70:	1c44      	adds	r4, r0, #1
   81e72:	d03d      	beq.n	81ef0 <__sflush_r+0xd0>
   81e74:	2100      	movs	r1, #0
   81e76:	f9b5 300c 	ldrsh.w	r3, [r5, #12]
   81e7a:	692a      	ldr	r2, [r5, #16]
   81e7c:	f423 6300 	bic.w	r3, r3, #2048	; 0x800
   81e80:	81ab      	strh	r3, [r5, #12]
   81e82:	04db      	lsls	r3, r3, #19
   81e84:	6069      	str	r1, [r5, #4]
   81e86:	602a      	str	r2, [r5, #0]
   81e88:	d448      	bmi.n	81f1c <__sflush_r+0xfc>
   81e8a:	6b29      	ldr	r1, [r5, #48]	; 0x30
   81e8c:	f8c8 6000 	str.w	r6, [r8]
   81e90:	b319      	cbz	r1, 81eda <__sflush_r+0xba>
   81e92:	f105 0340 	add.w	r3, r5, #64	; 0x40
   81e96:	4299      	cmp	r1, r3
   81e98:	d002      	beq.n	81ea0 <__sflush_r+0x80>
   81e9a:	4640      	mov	r0, r8
   81e9c:	f000 f9da 	bl	82254 <_free_r>
   81ea0:	2000      	movs	r0, #0
   81ea2:	6328      	str	r0, [r5, #48]	; 0x30
   81ea4:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
   81ea8:	692e      	ldr	r6, [r5, #16]
   81eaa:	b1b6      	cbz	r6, 81eda <__sflush_r+0xba>
   81eac:	0791      	lsls	r1, r2, #30
   81eae:	bf18      	it	ne
   81eb0:	2300      	movne	r3, #0
   81eb2:	682c      	ldr	r4, [r5, #0]
   81eb4:	bf08      	it	eq
   81eb6:	696b      	ldreq	r3, [r5, #20]
   81eb8:	602e      	str	r6, [r5, #0]
   81eba:	1ba4      	subs	r4, r4, r6
   81ebc:	60ab      	str	r3, [r5, #8]
   81ebe:	e00a      	b.n	81ed6 <__sflush_r+0xb6>
   81ec0:	4623      	mov	r3, r4
   81ec2:	4632      	mov	r2, r6
   81ec4:	6a6f      	ldr	r7, [r5, #36]	; 0x24
   81ec6:	69e9      	ldr	r1, [r5, #28]
   81ec8:	4640      	mov	r0, r8
   81eca:	47b8      	blx	r7
   81ecc:	2800      	cmp	r0, #0
   81ece:	eba4 0400 	sub.w	r4, r4, r0
   81ed2:	4406      	add	r6, r0
   81ed4:	dd04      	ble.n	81ee0 <__sflush_r+0xc0>
   81ed6:	2c00      	cmp	r4, #0
   81ed8:	dcf2      	bgt.n	81ec0 <__sflush_r+0xa0>
   81eda:	2000      	movs	r0, #0
   81edc:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
   81ee0:	89ab      	ldrh	r3, [r5, #12]
   81ee2:	f04f 30ff 	mov.w	r0, #4294967295
   81ee6:	f043 0340 	orr.w	r3, r3, #64	; 0x40
   81eea:	81ab      	strh	r3, [r5, #12]
   81eec:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
   81ef0:	f8d8 4000 	ldr.w	r4, [r8]
   81ef4:	2c1d      	cmp	r4, #29
   81ef6:	d8f3      	bhi.n	81ee0 <__sflush_r+0xc0>
   81ef8:	4b16      	ldr	r3, [pc, #88]	; (81f54 <__sflush_r+0x134>)
   81efa:	40e3      	lsrs	r3, r4
   81efc:	43db      	mvns	r3, r3
   81efe:	f013 0301 	ands.w	r3, r3, #1
   81f02:	d1ed      	bne.n	81ee0 <__sflush_r+0xc0>
   81f04:	f9b5 200c 	ldrsh.w	r2, [r5, #12]
   81f08:	6929      	ldr	r1, [r5, #16]
   81f0a:	f422 6200 	bic.w	r2, r2, #2048	; 0x800
   81f0e:	81aa      	strh	r2, [r5, #12]
   81f10:	04d2      	lsls	r2, r2, #19
   81f12:	606b      	str	r3, [r5, #4]
   81f14:	6029      	str	r1, [r5, #0]
   81f16:	d5b8      	bpl.n	81e8a <__sflush_r+0x6a>
   81f18:	2c00      	cmp	r4, #0
   81f1a:	d1b6      	bne.n	81e8a <__sflush_r+0x6a>
   81f1c:	6528      	str	r0, [r5, #80]	; 0x50
   81f1e:	e7b4      	b.n	81e8a <__sflush_r+0x6a>
   81f20:	6bea      	ldr	r2, [r5, #60]	; 0x3c
   81f22:	2a00      	cmp	r2, #0
   81f24:	dc8b      	bgt.n	81e3e <__sflush_r+0x1e>
   81f26:	e7d8      	b.n	81eda <__sflush_r+0xba>
   81f28:	2301      	movs	r3, #1
   81f2a:	69e9      	ldr	r1, [r5, #28]
   81f2c:	4640      	mov	r0, r8
   81f2e:	47a0      	blx	r4
   81f30:	1c43      	adds	r3, r0, #1
   81f32:	4602      	mov	r2, r0
   81f34:	d002      	beq.n	81f3c <__sflush_r+0x11c>
   81f36:	89ab      	ldrh	r3, [r5, #12]
   81f38:	6aac      	ldr	r4, [r5, #40]	; 0x28
   81f3a:	e78d      	b.n	81e58 <__sflush_r+0x38>
   81f3c:	f8d8 3000 	ldr.w	r3, [r8]
   81f40:	2b00      	cmp	r3, #0
   81f42:	d0f8      	beq.n	81f36 <__sflush_r+0x116>
   81f44:	2b1d      	cmp	r3, #29
   81f46:	d001      	beq.n	81f4c <__sflush_r+0x12c>
   81f48:	2b16      	cmp	r3, #22
   81f4a:	d1c9      	bne.n	81ee0 <__sflush_r+0xc0>
   81f4c:	f8c8 6000 	str.w	r6, [r8]
   81f50:	e7c3      	b.n	81eda <__sflush_r+0xba>
   81f52:	bf00      	nop
   81f54:	20400001 	.word	0x20400001

00081f58 <_fflush_r>:
   81f58:	b538      	push	{r3, r4, r5, lr}
   81f5a:	460d      	mov	r5, r1
   81f5c:	4604      	mov	r4, r0
   81f5e:	b108      	cbz	r0, 81f64 <_fflush_r+0xc>
   81f60:	6b83      	ldr	r3, [r0, #56]	; 0x38
   81f62:	b1bb      	cbz	r3, 81f94 <_fflush_r+0x3c>
   81f64:	f9b5 000c 	ldrsh.w	r0, [r5, #12]
   81f68:	b188      	cbz	r0, 81f8e <_fflush_r+0x36>
   81f6a:	6e6b      	ldr	r3, [r5, #100]	; 0x64
   81f6c:	07db      	lsls	r3, r3, #31
   81f6e:	d401      	bmi.n	81f74 <_fflush_r+0x1c>
   81f70:	0581      	lsls	r1, r0, #22
   81f72:	d517      	bpl.n	81fa4 <_fflush_r+0x4c>
   81f74:	4620      	mov	r0, r4
   81f76:	4629      	mov	r1, r5
   81f78:	f7ff ff52 	bl	81e20 <__sflush_r>
   81f7c:	6e6b      	ldr	r3, [r5, #100]	; 0x64
   81f7e:	4604      	mov	r4, r0
   81f80:	07da      	lsls	r2, r3, #31
   81f82:	d402      	bmi.n	81f8a <_fflush_r+0x32>
   81f84:	89ab      	ldrh	r3, [r5, #12]
   81f86:	059b      	lsls	r3, r3, #22
   81f88:	d507      	bpl.n	81f9a <_fflush_r+0x42>
   81f8a:	4620      	mov	r0, r4
   81f8c:	bd38      	pop	{r3, r4, r5, pc}
   81f8e:	4604      	mov	r4, r0
   81f90:	4620      	mov	r0, r4
   81f92:	bd38      	pop	{r3, r4, r5, pc}
   81f94:	f000 f838 	bl	82008 <__sinit>
   81f98:	e7e4      	b.n	81f64 <_fflush_r+0xc>
   81f9a:	6da8      	ldr	r0, [r5, #88]	; 0x58
   81f9c:	f000 fbf6 	bl	8278c <__retarget_lock_release_recursive>
   81fa0:	4620      	mov	r0, r4
   81fa2:	bd38      	pop	{r3, r4, r5, pc}
   81fa4:	6da8      	ldr	r0, [r5, #88]	; 0x58
   81fa6:	f000 fbef 	bl	82788 <__retarget_lock_acquire_recursive>
   81faa:	e7e3      	b.n	81f74 <_fflush_r+0x1c>

00081fac <_cleanup_r>:
   81fac:	4901      	ldr	r1, [pc, #4]	; (81fb4 <_cleanup_r+0x8>)
   81fae:	f000 bbb1 	b.w	82714 <_fwalk_reent>
   81fb2:	bf00      	nop
   81fb4:	000836fd 	.word	0x000836fd

00081fb8 <std.isra.0>:
   81fb8:	2300      	movs	r3, #0
   81fba:	b510      	push	{r4, lr}
   81fbc:	4604      	mov	r4, r0
   81fbe:	8181      	strh	r1, [r0, #12]
   81fc0:	81c2      	strh	r2, [r0, #14]
   81fc2:	6003      	str	r3, [r0, #0]
   81fc4:	6043      	str	r3, [r0, #4]
   81fc6:	6083      	str	r3, [r0, #8]
   81fc8:	6643      	str	r3, [r0, #100]	; 0x64
   81fca:	6103      	str	r3, [r0, #16]
   81fcc:	6143      	str	r3, [r0, #20]
   81fce:	6183      	str	r3, [r0, #24]
   81fd0:	4619      	mov	r1, r3
   81fd2:	2208      	movs	r2, #8
   81fd4:	305c      	adds	r0, #92	; 0x5c
   81fd6:	f7fe fec9 	bl	80d6c <memset>
   81fda:	4807      	ldr	r0, [pc, #28]	; (81ff8 <std.isra.0+0x40>)
   81fdc:	4907      	ldr	r1, [pc, #28]	; (81ffc <std.isra.0+0x44>)
   81fde:	4a08      	ldr	r2, [pc, #32]	; (82000 <std.isra.0+0x48>)
   81fe0:	4b08      	ldr	r3, [pc, #32]	; (82004 <std.isra.0+0x4c>)
   81fe2:	6220      	str	r0, [r4, #32]
   81fe4:	61e4      	str	r4, [r4, #28]
   81fe6:	6261      	str	r1, [r4, #36]	; 0x24
   81fe8:	62a2      	str	r2, [r4, #40]	; 0x28
   81fea:	62e3      	str	r3, [r4, #44]	; 0x2c
   81fec:	f104 0058 	add.w	r0, r4, #88	; 0x58
   81ff0:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
   81ff4:	f000 bbc4 	b.w	82780 <__retarget_lock_init_recursive>
   81ff8:	000833e9 	.word	0x000833e9
   81ffc:	0008340d 	.word	0x0008340d
   82000:	00083449 	.word	0x00083449
   82004:	00083469 	.word	0x00083469

00082008 <__sinit>:
   82008:	b510      	push	{r4, lr}
   8200a:	4604      	mov	r4, r0
   8200c:	4814      	ldr	r0, [pc, #80]	; (82060 <__sinit+0x58>)
   8200e:	f000 fbbb 	bl	82788 <__retarget_lock_acquire_recursive>
   82012:	6ba2      	ldr	r2, [r4, #56]	; 0x38
   82014:	b9fa      	cbnz	r2, 82056 <__sinit+0x4e>
   82016:	2003      	movs	r0, #3
   82018:	4912      	ldr	r1, [pc, #72]	; (82064 <__sinit+0x5c>)
   8201a:	f504 733b 	add.w	r3, r4, #748	; 0x2ec
   8201e:	f8c4 32e8 	str.w	r3, [r4, #744]	; 0x2e8
   82022:	f8c4 22e0 	str.w	r2, [r4, #736]	; 0x2e0
   82026:	f8c4 02e4 	str.w	r0, [r4, #740]	; 0x2e4
   8202a:	63e1      	str	r1, [r4, #60]	; 0x3c
   8202c:	6860      	ldr	r0, [r4, #4]
   8202e:	2104      	movs	r1, #4
   82030:	f7ff ffc2 	bl	81fb8 <std.isra.0>
   82034:	68a0      	ldr	r0, [r4, #8]
   82036:	2201      	movs	r2, #1
   82038:	2109      	movs	r1, #9
   8203a:	f7ff ffbd 	bl	81fb8 <std.isra.0>
   8203e:	68e0      	ldr	r0, [r4, #12]
   82040:	2202      	movs	r2, #2
   82042:	2112      	movs	r1, #18
   82044:	f7ff ffb8 	bl	81fb8 <std.isra.0>
   82048:	2301      	movs	r3, #1
   8204a:	4805      	ldr	r0, [pc, #20]	; (82060 <__sinit+0x58>)
   8204c:	63a3      	str	r3, [r4, #56]	; 0x38
   8204e:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
   82052:	f000 bb9b 	b.w	8278c <__retarget_lock_release_recursive>
   82056:	4802      	ldr	r0, [pc, #8]	; (82060 <__sinit+0x58>)
   82058:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
   8205c:	f000 bb96 	b.w	8278c <__retarget_lock_release_recursive>
   82060:	20070c5c 	.word	0x20070c5c
   82064:	00081fad 	.word	0x00081fad

00082068 <__sfp_lock_acquire>:
   82068:	4801      	ldr	r0, [pc, #4]	; (82070 <__sfp_lock_acquire+0x8>)
   8206a:	f000 bb8d 	b.w	82788 <__retarget_lock_acquire_recursive>
   8206e:	bf00      	nop
   82070:	20070c70 	.word	0x20070c70

00082074 <__sfp_lock_release>:
   82074:	4801      	ldr	r0, [pc, #4]	; (8207c <__sfp_lock_release+0x8>)
   82076:	f000 bb89 	b.w	8278c <__retarget_lock_release_recursive>
   8207a:	bf00      	nop
   8207c:	20070c70 	.word	0x20070c70

00082080 <__libc_fini_array>:
   82080:	b538      	push	{r3, r4, r5, lr}
   82082:	4c0a      	ldr	r4, [pc, #40]	; (820ac <__libc_fini_array+0x2c>)
   82084:	4d0a      	ldr	r5, [pc, #40]	; (820b0 <__libc_fini_array+0x30>)
   82086:	1b64      	subs	r4, r4, r5
   82088:	10a4      	asrs	r4, r4, #2
   8208a:	d00a      	beq.n	820a2 <__libc_fini_array+0x22>
   8208c:	f104 4380 	add.w	r3, r4, #1073741824	; 0x40000000
   82090:	3b01      	subs	r3, #1
   82092:	eb05 0583 	add.w	r5, r5, r3, lsl #2
   82096:	3c01      	subs	r4, #1
   82098:	f855 3904 	ldr.w	r3, [r5], #-4
   8209c:	4798      	blx	r3
   8209e:	2c00      	cmp	r4, #0
   820a0:	d1f9      	bne.n	82096 <__libc_fini_array+0x16>
   820a2:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
   820a6:	f001 be3b 	b.w	83d20 <_fini>
   820aa:	bf00      	nop
   820ac:	00083d30 	.word	0x00083d30
   820b0:	00083d2c 	.word	0x00083d2c

000820b4 <__fputwc>:
   820b4:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
   820b8:	b083      	sub	sp, #12
   820ba:	4607      	mov	r7, r0
   820bc:	4688      	mov	r8, r1
   820be:	4614      	mov	r4, r2
   820c0:	f000 fb50 	bl	82764 <__locale_mb_cur_max>
   820c4:	2801      	cmp	r0, #1
   820c6:	d033      	beq.n	82130 <__fputwc+0x7c>
   820c8:	4642      	mov	r2, r8
   820ca:	f104 035c 	add.w	r3, r4, #92	; 0x5c
   820ce:	a901      	add	r1, sp, #4
   820d0:	4638      	mov	r0, r7
   820d2:	f001 fa53 	bl	8357c <_wcrtomb_r>
   820d6:	1c42      	adds	r2, r0, #1
   820d8:	4606      	mov	r6, r0
   820da:	d022      	beq.n	82122 <__fputwc+0x6e>
   820dc:	b390      	cbz	r0, 82144 <__fputwc+0x90>
   820de:	f89d 1004 	ldrb.w	r1, [sp, #4]
   820e2:	2500      	movs	r5, #0
   820e4:	f10d 0904 	add.w	r9, sp, #4
   820e8:	e008      	b.n	820fc <__fputwc+0x48>
   820ea:	6823      	ldr	r3, [r4, #0]
   820ec:	1c5a      	adds	r2, r3, #1
   820ee:	6022      	str	r2, [r4, #0]
   820f0:	7019      	strb	r1, [r3, #0]
   820f2:	3501      	adds	r5, #1
   820f4:	42b5      	cmp	r5, r6
   820f6:	d225      	bcs.n	82144 <__fputwc+0x90>
   820f8:	f815 1009 	ldrb.w	r1, [r5, r9]
   820fc:	68a3      	ldr	r3, [r4, #8]
   820fe:	3b01      	subs	r3, #1
   82100:	2b00      	cmp	r3, #0
   82102:	60a3      	str	r3, [r4, #8]
   82104:	daf1      	bge.n	820ea <__fputwc+0x36>
   82106:	69a2      	ldr	r2, [r4, #24]
   82108:	4293      	cmp	r3, r2
   8210a:	db01      	blt.n	82110 <__fputwc+0x5c>
   8210c:	290a      	cmp	r1, #10
   8210e:	d1ec      	bne.n	820ea <__fputwc+0x36>
   82110:	4622      	mov	r2, r4
   82112:	4638      	mov	r0, r7
   82114:	f001 f9da 	bl	834cc <__swbuf_r>
   82118:	1c43      	adds	r3, r0, #1
   8211a:	d1ea      	bne.n	820f2 <__fputwc+0x3e>
   8211c:	b003      	add	sp, #12
   8211e:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
   82122:	89a3      	ldrh	r3, [r4, #12]
   82124:	f043 0340 	orr.w	r3, r3, #64	; 0x40
   82128:	81a3      	strh	r3, [r4, #12]
   8212a:	b003      	add	sp, #12
   8212c:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
   82130:	f108 33ff 	add.w	r3, r8, #4294967295
   82134:	2bfe      	cmp	r3, #254	; 0xfe
   82136:	d8c7      	bhi.n	820c8 <__fputwc+0x14>
   82138:	fa5f f188 	uxtb.w	r1, r8
   8213c:	4606      	mov	r6, r0
   8213e:	f88d 1004 	strb.w	r1, [sp, #4]
   82142:	e7ce      	b.n	820e2 <__fputwc+0x2e>
   82144:	4640      	mov	r0, r8
   82146:	b003      	add	sp, #12
   82148:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}

0008214c <_fputwc_r>:
   8214c:	b530      	push	{r4, r5, lr}
   8214e:	6e53      	ldr	r3, [r2, #100]	; 0x64
   82150:	4614      	mov	r4, r2
   82152:	f013 0f01 	tst.w	r3, #1
   82156:	f9b2 300c 	ldrsh.w	r3, [r2, #12]
   8215a:	b083      	sub	sp, #12
   8215c:	4605      	mov	r5, r0
   8215e:	b29a      	uxth	r2, r3
   82160:	d101      	bne.n	82166 <_fputwc_r+0x1a>
   82162:	0590      	lsls	r0, r2, #22
   82164:	d51c      	bpl.n	821a0 <_fputwc_r+0x54>
   82166:	0490      	lsls	r0, r2, #18
   82168:	d406      	bmi.n	82178 <_fputwc_r+0x2c>
   8216a:	6e62      	ldr	r2, [r4, #100]	; 0x64
   8216c:	f443 5300 	orr.w	r3, r3, #8192	; 0x2000
   82170:	f442 5200 	orr.w	r2, r2, #8192	; 0x2000
   82174:	81a3      	strh	r3, [r4, #12]
   82176:	6662      	str	r2, [r4, #100]	; 0x64
   82178:	4628      	mov	r0, r5
   8217a:	4622      	mov	r2, r4
   8217c:	f7ff ff9a 	bl	820b4 <__fputwc>
   82180:	6e63      	ldr	r3, [r4, #100]	; 0x64
   82182:	4605      	mov	r5, r0
   82184:	07da      	lsls	r2, r3, #31
   82186:	d402      	bmi.n	8218e <_fputwc_r+0x42>
   82188:	89a3      	ldrh	r3, [r4, #12]
   8218a:	059b      	lsls	r3, r3, #22
   8218c:	d502      	bpl.n	82194 <_fputwc_r+0x48>
   8218e:	4628      	mov	r0, r5
   82190:	b003      	add	sp, #12
   82192:	bd30      	pop	{r4, r5, pc}
   82194:	6da0      	ldr	r0, [r4, #88]	; 0x58
   82196:	f000 faf9 	bl	8278c <__retarget_lock_release_recursive>
   8219a:	4628      	mov	r0, r5
   8219c:	b003      	add	sp, #12
   8219e:	bd30      	pop	{r4, r5, pc}
   821a0:	6da0      	ldr	r0, [r4, #88]	; 0x58
   821a2:	9101      	str	r1, [sp, #4]
   821a4:	f000 faf0 	bl	82788 <__retarget_lock_acquire_recursive>
   821a8:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
   821ac:	9901      	ldr	r1, [sp, #4]
   821ae:	b29a      	uxth	r2, r3
   821b0:	e7d9      	b.n	82166 <_fputwc_r+0x1a>
   821b2:	bf00      	nop

000821b4 <_malloc_trim_r>:
   821b4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
   821b6:	460c      	mov	r4, r1
   821b8:	4f23      	ldr	r7, [pc, #140]	; (82248 <_malloc_trim_r+0x94>)
   821ba:	4606      	mov	r6, r0
   821bc:	f000 ff40 	bl	83040 <__malloc_lock>
   821c0:	68bb      	ldr	r3, [r7, #8]
   821c2:	f5c4 617e 	rsb	r1, r4, #4064	; 0xfe0
   821c6:	685d      	ldr	r5, [r3, #4]
   821c8:	310f      	adds	r1, #15
   821ca:	f025 0503 	bic.w	r5, r5, #3
   821ce:	4429      	add	r1, r5
   821d0:	f421 617f 	bic.w	r1, r1, #4080	; 0xff0
   821d4:	f021 010f 	bic.w	r1, r1, #15
   821d8:	f5a1 5480 	sub.w	r4, r1, #4096	; 0x1000
   821dc:	f5b4 5f80 	cmp.w	r4, #4096	; 0x1000
   821e0:	db07      	blt.n	821f2 <_malloc_trim_r+0x3e>
   821e2:	2100      	movs	r1, #0
   821e4:	4630      	mov	r0, r6
   821e6:	f001 f8ed 	bl	833c4 <_sbrk_r>
   821ea:	68bb      	ldr	r3, [r7, #8]
   821ec:	442b      	add	r3, r5
   821ee:	4298      	cmp	r0, r3
   821f0:	d004      	beq.n	821fc <_malloc_trim_r+0x48>
   821f2:	4630      	mov	r0, r6
   821f4:	f000 ff2a 	bl	8304c <__malloc_unlock>
   821f8:	2000      	movs	r0, #0
   821fa:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
   821fc:	4261      	negs	r1, r4
   821fe:	4630      	mov	r0, r6
   82200:	f001 f8e0 	bl	833c4 <_sbrk_r>
   82204:	3001      	adds	r0, #1
   82206:	d00d      	beq.n	82224 <_malloc_trim_r+0x70>
   82208:	4b10      	ldr	r3, [pc, #64]	; (8224c <_malloc_trim_r+0x98>)
   8220a:	68ba      	ldr	r2, [r7, #8]
   8220c:	6819      	ldr	r1, [r3, #0]
   8220e:	1b2d      	subs	r5, r5, r4
   82210:	f045 0501 	orr.w	r5, r5, #1
   82214:	4630      	mov	r0, r6
   82216:	1b09      	subs	r1, r1, r4
   82218:	6055      	str	r5, [r2, #4]
   8221a:	6019      	str	r1, [r3, #0]
   8221c:	f000 ff16 	bl	8304c <__malloc_unlock>
   82220:	2001      	movs	r0, #1
   82222:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
   82224:	2100      	movs	r1, #0
   82226:	4630      	mov	r0, r6
   82228:	f001 f8cc 	bl	833c4 <_sbrk_r>
   8222c:	68ba      	ldr	r2, [r7, #8]
   8222e:	1a83      	subs	r3, r0, r2
   82230:	2b0f      	cmp	r3, #15
   82232:	ddde      	ble.n	821f2 <_malloc_trim_r+0x3e>
   82234:	4c06      	ldr	r4, [pc, #24]	; (82250 <_malloc_trim_r+0x9c>)
   82236:	4905      	ldr	r1, [pc, #20]	; (8224c <_malloc_trim_r+0x98>)
   82238:	6824      	ldr	r4, [r4, #0]
   8223a:	f043 0301 	orr.w	r3, r3, #1
   8223e:	1b00      	subs	r0, r0, r4
   82240:	6053      	str	r3, [r2, #4]
   82242:	6008      	str	r0, [r1, #0]
   82244:	e7d5      	b.n	821f2 <_malloc_trim_r+0x3e>
   82246:	bf00      	nop
   82248:	200706d0 	.word	0x200706d0
   8224c:	20070c10 	.word	0x20070c10
   82250:	20070ad8 	.word	0x20070ad8

00082254 <_free_r>:
   82254:	2900      	cmp	r1, #0
   82256:	d044      	beq.n	822e2 <_free_r+0x8e>
   82258:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
   8225c:	460d      	mov	r5, r1
   8225e:	4680      	mov	r8, r0
   82260:	f000 feee 	bl	83040 <__malloc_lock>
   82264:	f855 7c04 	ldr.w	r7, [r5, #-4]
   82268:	4969      	ldr	r1, [pc, #420]	; (82410 <_free_r+0x1bc>)
   8226a:	f1a5 0408 	sub.w	r4, r5, #8
   8226e:	f027 0301 	bic.w	r3, r7, #1
   82272:	18e2      	adds	r2, r4, r3
   82274:	688e      	ldr	r6, [r1, #8]
   82276:	6850      	ldr	r0, [r2, #4]
   82278:	42b2      	cmp	r2, r6
   8227a:	f020 0003 	bic.w	r0, r0, #3
   8227e:	d05e      	beq.n	8233e <_free_r+0xea>
   82280:	07fe      	lsls	r6, r7, #31
   82282:	6050      	str	r0, [r2, #4]
   82284:	d40b      	bmi.n	8229e <_free_r+0x4a>
   82286:	f855 7c08 	ldr.w	r7, [r5, #-8]
   8228a:	f101 0e08 	add.w	lr, r1, #8
   8228e:	1be4      	subs	r4, r4, r7
   82290:	68a5      	ldr	r5, [r4, #8]
   82292:	443b      	add	r3, r7
   82294:	4575      	cmp	r5, lr
   82296:	d06d      	beq.n	82374 <_free_r+0x120>
   82298:	68e7      	ldr	r7, [r4, #12]
   8229a:	60ef      	str	r7, [r5, #12]
   8229c:	60bd      	str	r5, [r7, #8]
   8229e:	1815      	adds	r5, r2, r0
   822a0:	686d      	ldr	r5, [r5, #4]
   822a2:	07ed      	lsls	r5, r5, #31
   822a4:	d53e      	bpl.n	82324 <_free_r+0xd0>
   822a6:	f043 0201 	orr.w	r2, r3, #1
   822aa:	6062      	str	r2, [r4, #4]
   822ac:	50e3      	str	r3, [r4, r3]
   822ae:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
   822b2:	d217      	bcs.n	822e4 <_free_r+0x90>
   822b4:	2201      	movs	r2, #1
   822b6:	08db      	lsrs	r3, r3, #3
   822b8:	1098      	asrs	r0, r3, #2
   822ba:	684d      	ldr	r5, [r1, #4]
   822bc:	4413      	add	r3, r2
   822be:	f851 7033 	ldr.w	r7, [r1, r3, lsl #3]
   822c2:	4082      	lsls	r2, r0
   822c4:	eb01 00c3 	add.w	r0, r1, r3, lsl #3
   822c8:	432a      	orrs	r2, r5
   822ca:	3808      	subs	r0, #8
   822cc:	60e0      	str	r0, [r4, #12]
   822ce:	60a7      	str	r7, [r4, #8]
   822d0:	604a      	str	r2, [r1, #4]
   822d2:	f841 4033 	str.w	r4, [r1, r3, lsl #3]
   822d6:	60fc      	str	r4, [r7, #12]
   822d8:	4640      	mov	r0, r8
   822da:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
   822de:	f000 beb5 	b.w	8304c <__malloc_unlock>
   822e2:	4770      	bx	lr
   822e4:	0a5a      	lsrs	r2, r3, #9
   822e6:	2a04      	cmp	r2, #4
   822e8:	d852      	bhi.n	82390 <_free_r+0x13c>
   822ea:	099a      	lsrs	r2, r3, #6
   822ec:	f102 0739 	add.w	r7, r2, #57	; 0x39
   822f0:	00ff      	lsls	r7, r7, #3
   822f2:	f102 0538 	add.w	r5, r2, #56	; 0x38
   822f6:	19c8      	adds	r0, r1, r7
   822f8:	59ca      	ldr	r2, [r1, r7]
   822fa:	3808      	subs	r0, #8
   822fc:	4290      	cmp	r0, r2
   822fe:	d04f      	beq.n	823a0 <_free_r+0x14c>
   82300:	6851      	ldr	r1, [r2, #4]
   82302:	f021 0103 	bic.w	r1, r1, #3
   82306:	428b      	cmp	r3, r1
   82308:	d232      	bcs.n	82370 <_free_r+0x11c>
   8230a:	6892      	ldr	r2, [r2, #8]
   8230c:	4290      	cmp	r0, r2
   8230e:	d1f7      	bne.n	82300 <_free_r+0xac>
   82310:	68c3      	ldr	r3, [r0, #12]
   82312:	60a0      	str	r0, [r4, #8]
   82314:	60e3      	str	r3, [r4, #12]
   82316:	609c      	str	r4, [r3, #8]
   82318:	60c4      	str	r4, [r0, #12]
   8231a:	4640      	mov	r0, r8
   8231c:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
   82320:	f000 be94 	b.w	8304c <__malloc_unlock>
   82324:	6895      	ldr	r5, [r2, #8]
   82326:	4f3b      	ldr	r7, [pc, #236]	; (82414 <_free_r+0x1c0>)
   82328:	4403      	add	r3, r0
   8232a:	42bd      	cmp	r5, r7
   8232c:	d040      	beq.n	823b0 <_free_r+0x15c>
   8232e:	68d0      	ldr	r0, [r2, #12]
   82330:	f043 0201 	orr.w	r2, r3, #1
   82334:	60e8      	str	r0, [r5, #12]
   82336:	6085      	str	r5, [r0, #8]
   82338:	6062      	str	r2, [r4, #4]
   8233a:	50e3      	str	r3, [r4, r3]
   8233c:	e7b7      	b.n	822ae <_free_r+0x5a>
   8233e:	07ff      	lsls	r7, r7, #31
   82340:	4403      	add	r3, r0
   82342:	d407      	bmi.n	82354 <_free_r+0x100>
   82344:	f855 5c08 	ldr.w	r5, [r5, #-8]
   82348:	1b64      	subs	r4, r4, r5
   8234a:	68e2      	ldr	r2, [r4, #12]
   8234c:	68a0      	ldr	r0, [r4, #8]
   8234e:	442b      	add	r3, r5
   82350:	60c2      	str	r2, [r0, #12]
   82352:	6090      	str	r0, [r2, #8]
   82354:	4a30      	ldr	r2, [pc, #192]	; (82418 <_free_r+0x1c4>)
   82356:	f043 0001 	orr.w	r0, r3, #1
   8235a:	6812      	ldr	r2, [r2, #0]
   8235c:	6060      	str	r0, [r4, #4]
   8235e:	4293      	cmp	r3, r2
   82360:	608c      	str	r4, [r1, #8]
   82362:	d3b9      	bcc.n	822d8 <_free_r+0x84>
   82364:	4b2d      	ldr	r3, [pc, #180]	; (8241c <_free_r+0x1c8>)
   82366:	4640      	mov	r0, r8
   82368:	6819      	ldr	r1, [r3, #0]
   8236a:	f7ff ff23 	bl	821b4 <_malloc_trim_r>
   8236e:	e7b3      	b.n	822d8 <_free_r+0x84>
   82370:	4610      	mov	r0, r2
   82372:	e7cd      	b.n	82310 <_free_r+0xbc>
   82374:	1811      	adds	r1, r2, r0
   82376:	6849      	ldr	r1, [r1, #4]
   82378:	07c9      	lsls	r1, r1, #31
   8237a:	d444      	bmi.n	82406 <_free_r+0x1b2>
   8237c:	6891      	ldr	r1, [r2, #8]
   8237e:	4403      	add	r3, r0
   82380:	68d2      	ldr	r2, [r2, #12]
   82382:	f043 0001 	orr.w	r0, r3, #1
   82386:	60ca      	str	r2, [r1, #12]
   82388:	6091      	str	r1, [r2, #8]
   8238a:	6060      	str	r0, [r4, #4]
   8238c:	50e3      	str	r3, [r4, r3]
   8238e:	e7a3      	b.n	822d8 <_free_r+0x84>
   82390:	2a14      	cmp	r2, #20
   82392:	d816      	bhi.n	823c2 <_free_r+0x16e>
   82394:	f102 075c 	add.w	r7, r2, #92	; 0x5c
   82398:	00ff      	lsls	r7, r7, #3
   8239a:	f102 055b 	add.w	r5, r2, #91	; 0x5b
   8239e:	e7aa      	b.n	822f6 <_free_r+0xa2>
   823a0:	2301      	movs	r3, #1
   823a2:	10aa      	asrs	r2, r5, #2
   823a4:	684d      	ldr	r5, [r1, #4]
   823a6:	4093      	lsls	r3, r2
   823a8:	432b      	orrs	r3, r5
   823aa:	604b      	str	r3, [r1, #4]
   823ac:	4603      	mov	r3, r0
   823ae:	e7b0      	b.n	82312 <_free_r+0xbe>
   823b0:	f043 0201 	orr.w	r2, r3, #1
   823b4:	614c      	str	r4, [r1, #20]
   823b6:	610c      	str	r4, [r1, #16]
   823b8:	60e5      	str	r5, [r4, #12]
   823ba:	60a5      	str	r5, [r4, #8]
   823bc:	6062      	str	r2, [r4, #4]
   823be:	50e3      	str	r3, [r4, r3]
   823c0:	e78a      	b.n	822d8 <_free_r+0x84>
   823c2:	2a54      	cmp	r2, #84	; 0x54
   823c4:	d806      	bhi.n	823d4 <_free_r+0x180>
   823c6:	0b1a      	lsrs	r2, r3, #12
   823c8:	f102 076f 	add.w	r7, r2, #111	; 0x6f
   823cc:	00ff      	lsls	r7, r7, #3
   823ce:	f102 056e 	add.w	r5, r2, #110	; 0x6e
   823d2:	e790      	b.n	822f6 <_free_r+0xa2>
   823d4:	f5b2 7faa 	cmp.w	r2, #340	; 0x154
   823d8:	d806      	bhi.n	823e8 <_free_r+0x194>
   823da:	0bda      	lsrs	r2, r3, #15
   823dc:	f102 0778 	add.w	r7, r2, #120	; 0x78
   823e0:	00ff      	lsls	r7, r7, #3
   823e2:	f102 0577 	add.w	r5, r2, #119	; 0x77
   823e6:	e786      	b.n	822f6 <_free_r+0xa2>
   823e8:	f240 5054 	movw	r0, #1364	; 0x554
   823ec:	4282      	cmp	r2, r0
   823ee:	d806      	bhi.n	823fe <_free_r+0x1aa>
   823f0:	0c9a      	lsrs	r2, r3, #18
   823f2:	f102 077d 	add.w	r7, r2, #125	; 0x7d
   823f6:	00ff      	lsls	r7, r7, #3
   823f8:	f102 057c 	add.w	r5, r2, #124	; 0x7c
   823fc:	e77b      	b.n	822f6 <_free_r+0xa2>
   823fe:	f44f 777e 	mov.w	r7, #1016	; 0x3f8
   82402:	257e      	movs	r5, #126	; 0x7e
   82404:	e777      	b.n	822f6 <_free_r+0xa2>
   82406:	f043 0101 	orr.w	r1, r3, #1
   8240a:	6061      	str	r1, [r4, #4]
   8240c:	6013      	str	r3, [r2, #0]
   8240e:	e763      	b.n	822d8 <_free_r+0x84>
   82410:	200706d0 	.word	0x200706d0
   82414:	200706d8 	.word	0x200706d8
   82418:	20070adc 	.word	0x20070adc
   8241c:	20070c40 	.word	0x20070c40

00082420 <__sfvwrite_r>:
   82420:	6893      	ldr	r3, [r2, #8]
   82422:	2b00      	cmp	r3, #0
   82424:	d071      	beq.n	8250a <__sfvwrite_r+0xea>
   82426:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   8242a:	898b      	ldrh	r3, [r1, #12]
   8242c:	b083      	sub	sp, #12
   8242e:	460c      	mov	r4, r1
   82430:	0719      	lsls	r1, r3, #28
   82432:	9000      	str	r0, [sp, #0]
   82434:	4616      	mov	r6, r2
   82436:	d525      	bpl.n	82484 <__sfvwrite_r+0x64>
   82438:	6922      	ldr	r2, [r4, #16]
   8243a:	b31a      	cbz	r2, 82484 <__sfvwrite_r+0x64>
   8243c:	f013 0002 	ands.w	r0, r3, #2
   82440:	6835      	ldr	r5, [r6, #0]
   82442:	d02b      	beq.n	8249c <__sfvwrite_r+0x7c>
   82444:	f04f 0900 	mov.w	r9, #0
   82448:	46b0      	mov	r8, r6
   8244a:	464f      	mov	r7, r9
   8244c:	f8df a2c0 	ldr.w	sl, [pc, #704]	; 82710 <__sfvwrite_r+0x2f0>
   82450:	2f00      	cmp	r7, #0
   82452:	d055      	beq.n	82500 <__sfvwrite_r+0xe0>
   82454:	4557      	cmp	r7, sl
   82456:	463b      	mov	r3, r7
   82458:	464a      	mov	r2, r9
   8245a:	bf28      	it	cs
   8245c:	4653      	movcs	r3, sl
   8245e:	69e1      	ldr	r1, [r4, #28]
   82460:	9800      	ldr	r0, [sp, #0]
   82462:	6a66      	ldr	r6, [r4, #36]	; 0x24
   82464:	47b0      	blx	r6
   82466:	2800      	cmp	r0, #0
   82468:	dd56      	ble.n	82518 <__sfvwrite_r+0xf8>
   8246a:	f8d8 3008 	ldr.w	r3, [r8, #8]
   8246e:	4481      	add	r9, r0
   82470:	1a1b      	subs	r3, r3, r0
   82472:	1a3f      	subs	r7, r7, r0
   82474:	f8c8 3008 	str.w	r3, [r8, #8]
   82478:	2b00      	cmp	r3, #0
   8247a:	d1e9      	bne.n	82450 <__sfvwrite_r+0x30>
   8247c:	2000      	movs	r0, #0
   8247e:	b003      	add	sp, #12
   82480:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   82484:	4621      	mov	r1, r4
   82486:	9800      	ldr	r0, [sp, #0]
   82488:	f7ff fc56 	bl	81d38 <__swsetup_r>
   8248c:	2800      	cmp	r0, #0
   8248e:	f040 8135 	bne.w	826fc <__sfvwrite_r+0x2dc>
   82492:	89a3      	ldrh	r3, [r4, #12]
   82494:	6835      	ldr	r5, [r6, #0]
   82496:	f013 0002 	ands.w	r0, r3, #2
   8249a:	d1d3      	bne.n	82444 <__sfvwrite_r+0x24>
   8249c:	f013 0901 	ands.w	r9, r3, #1
   824a0:	d144      	bne.n	8252c <__sfvwrite_r+0x10c>
   824a2:	464f      	mov	r7, r9
   824a4:	9601      	str	r6, [sp, #4]
   824a6:	b337      	cbz	r7, 824f6 <__sfvwrite_r+0xd6>
   824a8:	059a      	lsls	r2, r3, #22
   824aa:	f8d4 8008 	ldr.w	r8, [r4, #8]
   824ae:	f140 8085 	bpl.w	825bc <__sfvwrite_r+0x19c>
   824b2:	4547      	cmp	r7, r8
   824b4:	46c3      	mov	fp, r8
   824b6:	f0c0 80ad 	bcc.w	82614 <__sfvwrite_r+0x1f4>
   824ba:	f413 6f90 	tst.w	r3, #1152	; 0x480
   824be:	f040 80ae 	bne.w	8261e <__sfvwrite_r+0x1fe>
   824c2:	46ba      	mov	sl, r7
   824c4:	6820      	ldr	r0, [r4, #0]
   824c6:	465a      	mov	r2, fp
   824c8:	4649      	mov	r1, r9
   824ca:	f000 fd55 	bl	82f78 <memmove>
   824ce:	68a2      	ldr	r2, [r4, #8]
   824d0:	6823      	ldr	r3, [r4, #0]
   824d2:	eba2 0208 	sub.w	r2, r2, r8
   824d6:	445b      	add	r3, fp
   824d8:	60a2      	str	r2, [r4, #8]
   824da:	6023      	str	r3, [r4, #0]
   824dc:	9a01      	ldr	r2, [sp, #4]
   824de:	44d1      	add	r9, sl
   824e0:	6893      	ldr	r3, [r2, #8]
   824e2:	eba7 070a 	sub.w	r7, r7, sl
   824e6:	eba3 030a 	sub.w	r3, r3, sl
   824ea:	6093      	str	r3, [r2, #8]
   824ec:	2b00      	cmp	r3, #0
   824ee:	d0c5      	beq.n	8247c <__sfvwrite_r+0x5c>
   824f0:	89a3      	ldrh	r3, [r4, #12]
   824f2:	2f00      	cmp	r7, #0
   824f4:	d1d8      	bne.n	824a8 <__sfvwrite_r+0x88>
   824f6:	f8d5 9000 	ldr.w	r9, [r5]
   824fa:	686f      	ldr	r7, [r5, #4]
   824fc:	3508      	adds	r5, #8
   824fe:	e7d2      	b.n	824a6 <__sfvwrite_r+0x86>
   82500:	f8d5 9000 	ldr.w	r9, [r5]
   82504:	686f      	ldr	r7, [r5, #4]
   82506:	3508      	adds	r5, #8
   82508:	e7a2      	b.n	82450 <__sfvwrite_r+0x30>
   8250a:	2000      	movs	r0, #0
   8250c:	4770      	bx	lr
   8250e:	4621      	mov	r1, r4
   82510:	9800      	ldr	r0, [sp, #0]
   82512:	f7ff fd21 	bl	81f58 <_fflush_r>
   82516:	b378      	cbz	r0, 82578 <__sfvwrite_r+0x158>
   82518:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
   8251c:	f04f 30ff 	mov.w	r0, #4294967295
   82520:	f043 0340 	orr.w	r3, r3, #64	; 0x40
   82524:	81a3      	strh	r3, [r4, #12]
   82526:	b003      	add	sp, #12
   82528:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   8252c:	4681      	mov	r9, r0
   8252e:	4633      	mov	r3, r6
   82530:	464e      	mov	r6, r9
   82532:	46a8      	mov	r8, r5
   82534:	469a      	mov	sl, r3
   82536:	464d      	mov	r5, r9
   82538:	b356      	cbz	r6, 82590 <__sfvwrite_r+0x170>
   8253a:	2800      	cmp	r0, #0
   8253c:	d032      	beq.n	825a4 <__sfvwrite_r+0x184>
   8253e:	45b1      	cmp	r9, r6
   82540:	46cb      	mov	fp, r9
   82542:	bf28      	it	cs
   82544:	46b3      	movcs	fp, r6
   82546:	6820      	ldr	r0, [r4, #0]
   82548:	6923      	ldr	r3, [r4, #16]
   8254a:	465f      	mov	r7, fp
   8254c:	4298      	cmp	r0, r3
   8254e:	6962      	ldr	r2, [r4, #20]
   82550:	d904      	bls.n	8255c <__sfvwrite_r+0x13c>
   82552:	68a3      	ldr	r3, [r4, #8]
   82554:	4413      	add	r3, r2
   82556:	459b      	cmp	fp, r3
   82558:	f300 80a8 	bgt.w	826ac <__sfvwrite_r+0x28c>
   8255c:	4593      	cmp	fp, r2
   8255e:	db4d      	blt.n	825fc <__sfvwrite_r+0x1dc>
   82560:	4613      	mov	r3, r2
   82562:	6a67      	ldr	r7, [r4, #36]	; 0x24
   82564:	462a      	mov	r2, r5
   82566:	69e1      	ldr	r1, [r4, #28]
   82568:	9800      	ldr	r0, [sp, #0]
   8256a:	47b8      	blx	r7
   8256c:	1e07      	subs	r7, r0, #0
   8256e:	ddd3      	ble.n	82518 <__sfvwrite_r+0xf8>
   82570:	ebb9 0907 	subs.w	r9, r9, r7
   82574:	d0cb      	beq.n	8250e <__sfvwrite_r+0xee>
   82576:	2001      	movs	r0, #1
   82578:	f8da 3008 	ldr.w	r3, [sl, #8]
   8257c:	443d      	add	r5, r7
   8257e:	1bdb      	subs	r3, r3, r7
   82580:	1bf6      	subs	r6, r6, r7
   82582:	f8ca 3008 	str.w	r3, [sl, #8]
   82586:	2b00      	cmp	r3, #0
   82588:	f43f af78 	beq.w	8247c <__sfvwrite_r+0x5c>
   8258c:	2e00      	cmp	r6, #0
   8258e:	d1d4      	bne.n	8253a <__sfvwrite_r+0x11a>
   82590:	f108 0308 	add.w	r3, r8, #8
   82594:	f853 6c04 	ldr.w	r6, [r3, #-4]
   82598:	4698      	mov	r8, r3
   8259a:	f853 5c08 	ldr.w	r5, [r3, #-8]
   8259e:	3308      	adds	r3, #8
   825a0:	2e00      	cmp	r6, #0
   825a2:	d0f7      	beq.n	82594 <__sfvwrite_r+0x174>
   825a4:	4632      	mov	r2, r6
   825a6:	210a      	movs	r1, #10
   825a8:	4628      	mov	r0, r5
   825aa:	f000 fc29 	bl	82e00 <memchr>
   825ae:	2800      	cmp	r0, #0
   825b0:	f000 80a1 	beq.w	826f6 <__sfvwrite_r+0x2d6>
   825b4:	3001      	adds	r0, #1
   825b6:	eba0 0905 	sub.w	r9, r0, r5
   825ba:	e7c0      	b.n	8253e <__sfvwrite_r+0x11e>
   825bc:	6820      	ldr	r0, [r4, #0]
   825be:	6923      	ldr	r3, [r4, #16]
   825c0:	4298      	cmp	r0, r3
   825c2:	d802      	bhi.n	825ca <__sfvwrite_r+0x1aa>
   825c4:	6963      	ldr	r3, [r4, #20]
   825c6:	429f      	cmp	r7, r3
   825c8:	d25d      	bcs.n	82686 <__sfvwrite_r+0x266>
   825ca:	45b8      	cmp	r8, r7
   825cc:	bf28      	it	cs
   825ce:	46b8      	movcs	r8, r7
   825d0:	4649      	mov	r1, r9
   825d2:	4642      	mov	r2, r8
   825d4:	f000 fcd0 	bl	82f78 <memmove>
   825d8:	68a3      	ldr	r3, [r4, #8]
   825da:	6822      	ldr	r2, [r4, #0]
   825dc:	eba3 0308 	sub.w	r3, r3, r8
   825e0:	4442      	add	r2, r8
   825e2:	60a3      	str	r3, [r4, #8]
   825e4:	6022      	str	r2, [r4, #0]
   825e6:	b10b      	cbz	r3, 825ec <__sfvwrite_r+0x1cc>
   825e8:	46c2      	mov	sl, r8
   825ea:	e777      	b.n	824dc <__sfvwrite_r+0xbc>
   825ec:	4621      	mov	r1, r4
   825ee:	9800      	ldr	r0, [sp, #0]
   825f0:	f7ff fcb2 	bl	81f58 <_fflush_r>
   825f4:	2800      	cmp	r0, #0
   825f6:	d18f      	bne.n	82518 <__sfvwrite_r+0xf8>
   825f8:	46c2      	mov	sl, r8
   825fa:	e76f      	b.n	824dc <__sfvwrite_r+0xbc>
   825fc:	465a      	mov	r2, fp
   825fe:	4629      	mov	r1, r5
   82600:	f000 fcba 	bl	82f78 <memmove>
   82604:	68a2      	ldr	r2, [r4, #8]
   82606:	6823      	ldr	r3, [r4, #0]
   82608:	eba2 020b 	sub.w	r2, r2, fp
   8260c:	445b      	add	r3, fp
   8260e:	60a2      	str	r2, [r4, #8]
   82610:	6023      	str	r3, [r4, #0]
   82612:	e7ad      	b.n	82570 <__sfvwrite_r+0x150>
   82614:	46b8      	mov	r8, r7
   82616:	46ba      	mov	sl, r7
   82618:	46bb      	mov	fp, r7
   8261a:	6820      	ldr	r0, [r4, #0]
   8261c:	e753      	b.n	824c6 <__sfvwrite_r+0xa6>
   8261e:	6962      	ldr	r2, [r4, #20]
   82620:	6820      	ldr	r0, [r4, #0]
   82622:	6921      	ldr	r1, [r4, #16]
   82624:	eb02 0842 	add.w	r8, r2, r2, lsl #1
   82628:	eba0 0a01 	sub.w	sl, r0, r1
   8262c:	eb08 78d8 	add.w	r8, r8, r8, lsr #31
   82630:	f10a 0001 	add.w	r0, sl, #1
   82634:	ea4f 0868 	mov.w	r8, r8, asr #1
   82638:	4438      	add	r0, r7
   8263a:	4540      	cmp	r0, r8
   8263c:	4642      	mov	r2, r8
   8263e:	bf84      	itt	hi
   82640:	4680      	movhi	r8, r0
   82642:	4642      	movhi	r2, r8
   82644:	055b      	lsls	r3, r3, #21
   82646:	d544      	bpl.n	826d2 <__sfvwrite_r+0x2b2>
   82648:	4611      	mov	r1, r2
   8264a:	9800      	ldr	r0, [sp, #0]
   8264c:	f000 f920 	bl	82890 <_malloc_r>
   82650:	4683      	mov	fp, r0
   82652:	2800      	cmp	r0, #0
   82654:	d055      	beq.n	82702 <__sfvwrite_r+0x2e2>
   82656:	4652      	mov	r2, sl
   82658:	6921      	ldr	r1, [r4, #16]
   8265a:	f000 fc17 	bl	82e8c <memcpy>
   8265e:	89a3      	ldrh	r3, [r4, #12]
   82660:	f423 6390 	bic.w	r3, r3, #1152	; 0x480
   82664:	f043 0380 	orr.w	r3, r3, #128	; 0x80
   82668:	81a3      	strh	r3, [r4, #12]
   8266a:	eb0b 000a 	add.w	r0, fp, sl
   8266e:	eba8 030a 	sub.w	r3, r8, sl
   82672:	f8c4 b010 	str.w	fp, [r4, #16]
   82676:	f8c4 8014 	str.w	r8, [r4, #20]
   8267a:	6020      	str	r0, [r4, #0]
   8267c:	60a3      	str	r3, [r4, #8]
   8267e:	46b8      	mov	r8, r7
   82680:	46ba      	mov	sl, r7
   82682:	46bb      	mov	fp, r7
   82684:	e71f      	b.n	824c6 <__sfvwrite_r+0xa6>
   82686:	f06f 4200 	mvn.w	r2, #2147483648	; 0x80000000
   8268a:	42ba      	cmp	r2, r7
   8268c:	bf28      	it	cs
   8268e:	463a      	movcs	r2, r7
   82690:	fb92 f2f3 	sdiv	r2, r2, r3
   82694:	69e1      	ldr	r1, [r4, #28]
   82696:	fb03 f302 	mul.w	r3, r3, r2
   8269a:	9800      	ldr	r0, [sp, #0]
   8269c:	464a      	mov	r2, r9
   8269e:	6a66      	ldr	r6, [r4, #36]	; 0x24
   826a0:	47b0      	blx	r6
   826a2:	f1b0 0a00 	subs.w	sl, r0, #0
   826a6:	f73f af19 	bgt.w	824dc <__sfvwrite_r+0xbc>
   826aa:	e735      	b.n	82518 <__sfvwrite_r+0xf8>
   826ac:	461a      	mov	r2, r3
   826ae:	4629      	mov	r1, r5
   826b0:	9301      	str	r3, [sp, #4]
   826b2:	f000 fc61 	bl	82f78 <memmove>
   826b6:	6822      	ldr	r2, [r4, #0]
   826b8:	9b01      	ldr	r3, [sp, #4]
   826ba:	4621      	mov	r1, r4
   826bc:	441a      	add	r2, r3
   826be:	6022      	str	r2, [r4, #0]
   826c0:	9800      	ldr	r0, [sp, #0]
   826c2:	f7ff fc49 	bl	81f58 <_fflush_r>
   826c6:	9b01      	ldr	r3, [sp, #4]
   826c8:	2800      	cmp	r0, #0
   826ca:	f47f af25 	bne.w	82518 <__sfvwrite_r+0xf8>
   826ce:	461f      	mov	r7, r3
   826d0:	e74e      	b.n	82570 <__sfvwrite_r+0x150>
   826d2:	9800      	ldr	r0, [sp, #0]
   826d4:	f000 fcc0 	bl	83058 <_realloc_r>
   826d8:	4683      	mov	fp, r0
   826da:	2800      	cmp	r0, #0
   826dc:	d1c5      	bne.n	8266a <__sfvwrite_r+0x24a>
   826de:	9d00      	ldr	r5, [sp, #0]
   826e0:	6921      	ldr	r1, [r4, #16]
   826e2:	4628      	mov	r0, r5
   826e4:	f7ff fdb6 	bl	82254 <_free_r>
   826e8:	220c      	movs	r2, #12
   826ea:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
   826ee:	602a      	str	r2, [r5, #0]
   826f0:	f023 0380 	bic.w	r3, r3, #128	; 0x80
   826f4:	e712      	b.n	8251c <__sfvwrite_r+0xfc>
   826f6:	f106 0901 	add.w	r9, r6, #1
   826fa:	e720      	b.n	8253e <__sfvwrite_r+0x11e>
   826fc:	f04f 30ff 	mov.w	r0, #4294967295
   82700:	e6bd      	b.n	8247e <__sfvwrite_r+0x5e>
   82702:	220c      	movs	r2, #12
   82704:	9900      	ldr	r1, [sp, #0]
   82706:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
   8270a:	600a      	str	r2, [r1, #0]
   8270c:	e706      	b.n	8251c <__sfvwrite_r+0xfc>
   8270e:	bf00      	nop
   82710:	7ffffc00 	.word	0x7ffffc00

00082714 <_fwalk_reent>:
   82714:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
   82718:	f510 7638 	adds.w	r6, r0, #736	; 0x2e0
   8271c:	d01e      	beq.n	8275c <_fwalk_reent+0x48>
   8271e:	4688      	mov	r8, r1
   82720:	4607      	mov	r7, r0
   82722:	f04f 0900 	mov.w	r9, #0
   82726:	6875      	ldr	r5, [r6, #4]
   82728:	68b4      	ldr	r4, [r6, #8]
   8272a:	3d01      	subs	r5, #1
   8272c:	d410      	bmi.n	82750 <_fwalk_reent+0x3c>
   8272e:	89a3      	ldrh	r3, [r4, #12]
   82730:	3d01      	subs	r5, #1
   82732:	2b01      	cmp	r3, #1
   82734:	d908      	bls.n	82748 <_fwalk_reent+0x34>
   82736:	f9b4 300e 	ldrsh.w	r3, [r4, #14]
   8273a:	3301      	adds	r3, #1
   8273c:	d004      	beq.n	82748 <_fwalk_reent+0x34>
   8273e:	4621      	mov	r1, r4
   82740:	4638      	mov	r0, r7
   82742:	47c0      	blx	r8
   82744:	ea49 0900 	orr.w	r9, r9, r0
   82748:	1c6b      	adds	r3, r5, #1
   8274a:	f104 0468 	add.w	r4, r4, #104	; 0x68
   8274e:	d1ee      	bne.n	8272e <_fwalk_reent+0x1a>
   82750:	6836      	ldr	r6, [r6, #0]
   82752:	2e00      	cmp	r6, #0
   82754:	d1e7      	bne.n	82726 <_fwalk_reent+0x12>
   82756:	4648      	mov	r0, r9
   82758:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
   8275c:	46b1      	mov	r9, r6
   8275e:	4648      	mov	r0, r9
   82760:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}

00082764 <__locale_mb_cur_max>:
   82764:	4b04      	ldr	r3, [pc, #16]	; (82778 <__locale_mb_cur_max+0x14>)
   82766:	4a05      	ldr	r2, [pc, #20]	; (8277c <__locale_mb_cur_max+0x18>)
   82768:	681b      	ldr	r3, [r3, #0]
   8276a:	6b5b      	ldr	r3, [r3, #52]	; 0x34
   8276c:	2b00      	cmp	r3, #0
   8276e:	bf08      	it	eq
   82770:	4613      	moveq	r3, r2
   82772:	f893 0128 	ldrb.w	r0, [r3, #296]	; 0x128
   82776:	4770      	bx	lr
   82778:	20070134 	.word	0x20070134
   8277c:	20070564 	.word	0x20070564

00082780 <__retarget_lock_init_recursive>:
   82780:	4770      	bx	lr
   82782:	bf00      	nop

00082784 <__retarget_lock_close_recursive>:
   82784:	4770      	bx	lr
   82786:	bf00      	nop

00082788 <__retarget_lock_acquire_recursive>:
   82788:	4770      	bx	lr
   8278a:	bf00      	nop

0008278c <__retarget_lock_release_recursive>:
   8278c:	4770      	bx	lr
   8278e:	bf00      	nop

00082790 <__swhatbuf_r>:
   82790:	b570      	push	{r4, r5, r6, lr}
   82792:	460c      	mov	r4, r1
   82794:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
   82798:	b090      	sub	sp, #64	; 0x40
   8279a:	2900      	cmp	r1, #0
   8279c:	4615      	mov	r5, r2
   8279e:	461e      	mov	r6, r3
   827a0:	db14      	blt.n	827cc <__swhatbuf_r+0x3c>
   827a2:	aa01      	add	r2, sp, #4
   827a4:	f001 f80c 	bl	837c0 <_fstat_r>
   827a8:	2800      	cmp	r0, #0
   827aa:	db0f      	blt.n	827cc <__swhatbuf_r+0x3c>
   827ac:	9a02      	ldr	r2, [sp, #8]
   827ae:	f44f 6380 	mov.w	r3, #1024	; 0x400
   827b2:	f402 4270 	and.w	r2, r2, #61440	; 0xf000
   827b6:	f5a2 5200 	sub.w	r2, r2, #8192	; 0x2000
   827ba:	fab2 f282 	clz	r2, r2
   827be:	f44f 6000 	mov.w	r0, #2048	; 0x800
   827c2:	0952      	lsrs	r2, r2, #5
   827c4:	6032      	str	r2, [r6, #0]
   827c6:	602b      	str	r3, [r5, #0]
   827c8:	b010      	add	sp, #64	; 0x40
   827ca:	bd70      	pop	{r4, r5, r6, pc}
   827cc:	2300      	movs	r3, #0
   827ce:	89a2      	ldrh	r2, [r4, #12]
   827d0:	6033      	str	r3, [r6, #0]
   827d2:	f012 0080 	ands.w	r0, r2, #128	; 0x80
   827d6:	d004      	beq.n	827e2 <__swhatbuf_r+0x52>
   827d8:	2240      	movs	r2, #64	; 0x40
   827da:	4618      	mov	r0, r3
   827dc:	602a      	str	r2, [r5, #0]
   827de:	b010      	add	sp, #64	; 0x40
   827e0:	bd70      	pop	{r4, r5, r6, pc}
   827e2:	f44f 6380 	mov.w	r3, #1024	; 0x400
   827e6:	602b      	str	r3, [r5, #0]
   827e8:	b010      	add	sp, #64	; 0x40
   827ea:	bd70      	pop	{r4, r5, r6, pc}

000827ec <__smakebuf_r>:
   827ec:	898a      	ldrh	r2, [r1, #12]
   827ee:	460b      	mov	r3, r1
   827f0:	0792      	lsls	r2, r2, #30
   827f2:	d506      	bpl.n	82802 <__smakebuf_r+0x16>
   827f4:	2101      	movs	r1, #1
   827f6:	f103 0243 	add.w	r2, r3, #67	; 0x43
   827fa:	6159      	str	r1, [r3, #20]
   827fc:	601a      	str	r2, [r3, #0]
   827fe:	611a      	str	r2, [r3, #16]
   82800:	4770      	bx	lr
   82802:	b5f0      	push	{r4, r5, r6, r7, lr}
   82804:	b083      	sub	sp, #12
   82806:	ab01      	add	r3, sp, #4
   82808:	466a      	mov	r2, sp
   8280a:	460c      	mov	r4, r1
   8280c:	4606      	mov	r6, r0
   8280e:	f7ff ffbf 	bl	82790 <__swhatbuf_r>
   82812:	9900      	ldr	r1, [sp, #0]
   82814:	4605      	mov	r5, r0
   82816:	4630      	mov	r0, r6
   82818:	f000 f83a 	bl	82890 <_malloc_r>
   8281c:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
   82820:	b1d8      	cbz	r0, 8285a <__smakebuf_r+0x6e>
   82822:	e89d 0006 	ldmia.w	sp, {r1, r2}
   82826:	4f15      	ldr	r7, [pc, #84]	; (8287c <__smakebuf_r+0x90>)
   82828:	f043 0380 	orr.w	r3, r3, #128	; 0x80
   8282c:	63f7      	str	r7, [r6, #60]	; 0x3c
   8282e:	81a3      	strh	r3, [r4, #12]
   82830:	6020      	str	r0, [r4, #0]
   82832:	6120      	str	r0, [r4, #16]
   82834:	6161      	str	r1, [r4, #20]
   82836:	b91a      	cbnz	r2, 82840 <__smakebuf_r+0x54>
   82838:	432b      	orrs	r3, r5
   8283a:	81a3      	strh	r3, [r4, #12]
   8283c:	b003      	add	sp, #12
   8283e:	bdf0      	pop	{r4, r5, r6, r7, pc}
   82840:	4630      	mov	r0, r6
   82842:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
   82846:	f000 ffcf 	bl	837e8 <_isatty_r>
   8284a:	b1a0      	cbz	r0, 82876 <__smakebuf_r+0x8a>
   8284c:	89a3      	ldrh	r3, [r4, #12]
   8284e:	f023 0303 	bic.w	r3, r3, #3
   82852:	f043 0301 	orr.w	r3, r3, #1
   82856:	b21b      	sxth	r3, r3
   82858:	e7ee      	b.n	82838 <__smakebuf_r+0x4c>
   8285a:	059a      	lsls	r2, r3, #22
   8285c:	d4ee      	bmi.n	8283c <__smakebuf_r+0x50>
   8285e:	2101      	movs	r1, #1
   82860:	f023 0303 	bic.w	r3, r3, #3
   82864:	f104 0243 	add.w	r2, r4, #67	; 0x43
   82868:	f043 0302 	orr.w	r3, r3, #2
   8286c:	81a3      	strh	r3, [r4, #12]
   8286e:	6161      	str	r1, [r4, #20]
   82870:	6022      	str	r2, [r4, #0]
   82872:	6122      	str	r2, [r4, #16]
   82874:	e7e2      	b.n	8283c <__smakebuf_r+0x50>
   82876:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
   8287a:	e7dd      	b.n	82838 <__smakebuf_r+0x4c>
   8287c:	00081fad 	.word	0x00081fad

00082880 <malloc>:
   82880:	4b02      	ldr	r3, [pc, #8]	; (8288c <malloc+0xc>)
   82882:	4601      	mov	r1, r0
   82884:	6818      	ldr	r0, [r3, #0]
   82886:	f000 b803 	b.w	82890 <_malloc_r>
   8288a:	bf00      	nop
   8288c:	20070134 	.word	0x20070134

00082890 <_malloc_r>:
   82890:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   82894:	f101 060b 	add.w	r6, r1, #11
   82898:	2e16      	cmp	r6, #22
   8289a:	b083      	sub	sp, #12
   8289c:	4605      	mov	r5, r0
   8289e:	f240 809e 	bls.w	829de <_malloc_r+0x14e>
   828a2:	f036 0607 	bics.w	r6, r6, #7
   828a6:	f100 80bd 	bmi.w	82a24 <_malloc_r+0x194>
   828aa:	42b1      	cmp	r1, r6
   828ac:	f200 80ba 	bhi.w	82a24 <_malloc_r+0x194>
   828b0:	f000 fbc6 	bl	83040 <__malloc_lock>
   828b4:	f5b6 7ffc 	cmp.w	r6, #504	; 0x1f8
   828b8:	f0c0 8285 	bcc.w	82dc6 <_malloc_r+0x536>
   828bc:	0a73      	lsrs	r3, r6, #9
   828be:	f000 80b8 	beq.w	82a32 <_malloc_r+0x1a2>
   828c2:	2b04      	cmp	r3, #4
   828c4:	f200 816c 	bhi.w	82ba0 <_malloc_r+0x310>
   828c8:	09b3      	lsrs	r3, r6, #6
   828ca:	f103 0039 	add.w	r0, r3, #57	; 0x39
   828ce:	f103 0e38 	add.w	lr, r3, #56	; 0x38
   828d2:	00c1      	lsls	r1, r0, #3
   828d4:	4fb8      	ldr	r7, [pc, #736]	; (82bb8 <_malloc_r+0x328>)
   828d6:	4439      	add	r1, r7
   828d8:	684c      	ldr	r4, [r1, #4]
   828da:	3908      	subs	r1, #8
   828dc:	42a1      	cmp	r1, r4
   828de:	d106      	bne.n	828ee <_malloc_r+0x5e>
   828e0:	e00c      	b.n	828fc <_malloc_r+0x6c>
   828e2:	2a00      	cmp	r2, #0
   828e4:	f280 80ab 	bge.w	82a3e <_malloc_r+0x1ae>
   828e8:	68e4      	ldr	r4, [r4, #12]
   828ea:	42a1      	cmp	r1, r4
   828ec:	d006      	beq.n	828fc <_malloc_r+0x6c>
   828ee:	6863      	ldr	r3, [r4, #4]
   828f0:	f023 0303 	bic.w	r3, r3, #3
   828f4:	1b9a      	subs	r2, r3, r6
   828f6:	2a0f      	cmp	r2, #15
   828f8:	ddf3      	ble.n	828e2 <_malloc_r+0x52>
   828fa:	4670      	mov	r0, lr
   828fc:	693c      	ldr	r4, [r7, #16]
   828fe:	f8df e2cc 	ldr.w	lr, [pc, #716]	; 82bcc <_malloc_r+0x33c>
   82902:	4574      	cmp	r4, lr
   82904:	f000 819e 	beq.w	82c44 <_malloc_r+0x3b4>
   82908:	6863      	ldr	r3, [r4, #4]
   8290a:	f023 0303 	bic.w	r3, r3, #3
   8290e:	1b9a      	subs	r2, r3, r6
   82910:	2a0f      	cmp	r2, #15
   82912:	f300 8183 	bgt.w	82c1c <_malloc_r+0x38c>
   82916:	2a00      	cmp	r2, #0
   82918:	f8c7 e014 	str.w	lr, [r7, #20]
   8291c:	f8c7 e010 	str.w	lr, [r7, #16]
   82920:	f280 8091 	bge.w	82a46 <_malloc_r+0x1b6>
   82924:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
   82928:	f080 8154 	bcs.w	82bd4 <_malloc_r+0x344>
   8292c:	2201      	movs	r2, #1
   8292e:	08db      	lsrs	r3, r3, #3
   82930:	6879      	ldr	r1, [r7, #4]
   82932:	ea4f 0ca3 	mov.w	ip, r3, asr #2
   82936:	4413      	add	r3, r2
   82938:	f857 8033 	ldr.w	r8, [r7, r3, lsl #3]
   8293c:	fa02 f20c 	lsl.w	r2, r2, ip
   82940:	eb07 0cc3 	add.w	ip, r7, r3, lsl #3
   82944:	430a      	orrs	r2, r1
   82946:	f1ac 0108 	sub.w	r1, ip, #8
   8294a:	60e1      	str	r1, [r4, #12]
   8294c:	f8c4 8008 	str.w	r8, [r4, #8]
   82950:	607a      	str	r2, [r7, #4]
   82952:	f847 4033 	str.w	r4, [r7, r3, lsl #3]
   82956:	f8c8 400c 	str.w	r4, [r8, #12]
   8295a:	2401      	movs	r4, #1
   8295c:	1083      	asrs	r3, r0, #2
   8295e:	409c      	lsls	r4, r3
   82960:	4294      	cmp	r4, r2
   82962:	d87d      	bhi.n	82a60 <_malloc_r+0x1d0>
   82964:	4214      	tst	r4, r2
   82966:	d106      	bne.n	82976 <_malloc_r+0xe6>
   82968:	f020 0003 	bic.w	r0, r0, #3
   8296c:	0064      	lsls	r4, r4, #1
   8296e:	4214      	tst	r4, r2
   82970:	f100 0004 	add.w	r0, r0, #4
   82974:	d0fa      	beq.n	8296c <_malloc_r+0xdc>
   82976:	eb07 09c0 	add.w	r9, r7, r0, lsl #3
   8297a:	46cc      	mov	ip, r9
   8297c:	4680      	mov	r8, r0
   8297e:	f8dc 300c 	ldr.w	r3, [ip, #12]
   82982:	459c      	cmp	ip, r3
   82984:	d107      	bne.n	82996 <_malloc_r+0x106>
   82986:	e15f      	b.n	82c48 <_malloc_r+0x3b8>
   82988:	2a00      	cmp	r2, #0
   8298a:	f280 816d 	bge.w	82c68 <_malloc_r+0x3d8>
   8298e:	68db      	ldr	r3, [r3, #12]
   82990:	459c      	cmp	ip, r3
   82992:	f000 8159 	beq.w	82c48 <_malloc_r+0x3b8>
   82996:	6859      	ldr	r1, [r3, #4]
   82998:	f021 0103 	bic.w	r1, r1, #3
   8299c:	1b8a      	subs	r2, r1, r6
   8299e:	2a0f      	cmp	r2, #15
   829a0:	ddf2      	ble.n	82988 <_malloc_r+0xf8>
   829a2:	68dc      	ldr	r4, [r3, #12]
   829a4:	f8d3 c008 	ldr.w	ip, [r3, #8]
   829a8:	f046 0801 	orr.w	r8, r6, #1
   829ac:	4628      	mov	r0, r5
   829ae:	441e      	add	r6, r3
   829b0:	f042 0501 	orr.w	r5, r2, #1
   829b4:	f8c3 8004 	str.w	r8, [r3, #4]
   829b8:	f8cc 400c 	str.w	r4, [ip, #12]
   829bc:	f8c4 c008 	str.w	ip, [r4, #8]
   829c0:	617e      	str	r6, [r7, #20]
   829c2:	613e      	str	r6, [r7, #16]
   829c4:	f8c6 e00c 	str.w	lr, [r6, #12]
   829c8:	f8c6 e008 	str.w	lr, [r6, #8]
   829cc:	6075      	str	r5, [r6, #4]
   829ce:	505a      	str	r2, [r3, r1]
   829d0:	9300      	str	r3, [sp, #0]
   829d2:	f000 fb3b 	bl	8304c <__malloc_unlock>
   829d6:	9b00      	ldr	r3, [sp, #0]
   829d8:	f103 0408 	add.w	r4, r3, #8
   829dc:	e01e      	b.n	82a1c <_malloc_r+0x18c>
   829de:	2910      	cmp	r1, #16
   829e0:	d820      	bhi.n	82a24 <_malloc_r+0x194>
   829e2:	f000 fb2d 	bl	83040 <__malloc_lock>
   829e6:	2610      	movs	r6, #16
   829e8:	2318      	movs	r3, #24
   829ea:	2002      	movs	r0, #2
   829ec:	4f72      	ldr	r7, [pc, #456]	; (82bb8 <_malloc_r+0x328>)
   829ee:	443b      	add	r3, r7
   829f0:	685c      	ldr	r4, [r3, #4]
   829f2:	f1a3 0208 	sub.w	r2, r3, #8
   829f6:	4294      	cmp	r4, r2
   829f8:	f000 812f 	beq.w	82c5a <_malloc_r+0x3ca>
   829fc:	6863      	ldr	r3, [r4, #4]
   829fe:	68e1      	ldr	r1, [r4, #12]
   82a00:	f023 0303 	bic.w	r3, r3, #3
   82a04:	4423      	add	r3, r4
   82a06:	685a      	ldr	r2, [r3, #4]
   82a08:	68a6      	ldr	r6, [r4, #8]
   82a0a:	f042 0201 	orr.w	r2, r2, #1
   82a0e:	60f1      	str	r1, [r6, #12]
   82a10:	4628      	mov	r0, r5
   82a12:	608e      	str	r6, [r1, #8]
   82a14:	605a      	str	r2, [r3, #4]
   82a16:	f000 fb19 	bl	8304c <__malloc_unlock>
   82a1a:	3408      	adds	r4, #8
   82a1c:	4620      	mov	r0, r4
   82a1e:	b003      	add	sp, #12
   82a20:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   82a24:	2400      	movs	r4, #0
   82a26:	230c      	movs	r3, #12
   82a28:	4620      	mov	r0, r4
   82a2a:	602b      	str	r3, [r5, #0]
   82a2c:	b003      	add	sp, #12
   82a2e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   82a32:	2040      	movs	r0, #64	; 0x40
   82a34:	f44f 7100 	mov.w	r1, #512	; 0x200
   82a38:	f04f 0e3f 	mov.w	lr, #63	; 0x3f
   82a3c:	e74a      	b.n	828d4 <_malloc_r+0x44>
   82a3e:	4423      	add	r3, r4
   82a40:	685a      	ldr	r2, [r3, #4]
   82a42:	68e1      	ldr	r1, [r4, #12]
   82a44:	e7e0      	b.n	82a08 <_malloc_r+0x178>
   82a46:	4423      	add	r3, r4
   82a48:	685a      	ldr	r2, [r3, #4]
   82a4a:	4628      	mov	r0, r5
   82a4c:	f042 0201 	orr.w	r2, r2, #1
   82a50:	605a      	str	r2, [r3, #4]
   82a52:	3408      	adds	r4, #8
   82a54:	f000 fafa 	bl	8304c <__malloc_unlock>
   82a58:	4620      	mov	r0, r4
   82a5a:	b003      	add	sp, #12
   82a5c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   82a60:	68bc      	ldr	r4, [r7, #8]
   82a62:	6863      	ldr	r3, [r4, #4]
   82a64:	f023 0803 	bic.w	r8, r3, #3
   82a68:	45b0      	cmp	r8, r6
   82a6a:	d304      	bcc.n	82a76 <_malloc_r+0x1e6>
   82a6c:	eba8 0306 	sub.w	r3, r8, r6
   82a70:	2b0f      	cmp	r3, #15
   82a72:	f300 8085 	bgt.w	82b80 <_malloc_r+0x2f0>
   82a76:	f8df 9158 	ldr.w	r9, [pc, #344]	; 82bd0 <_malloc_r+0x340>
   82a7a:	4b50      	ldr	r3, [pc, #320]	; (82bbc <_malloc_r+0x32c>)
   82a7c:	f8d9 2000 	ldr.w	r2, [r9]
   82a80:	681b      	ldr	r3, [r3, #0]
   82a82:	3201      	adds	r2, #1
   82a84:	4433      	add	r3, r6
   82a86:	eb04 0a08 	add.w	sl, r4, r8
   82a8a:	f000 8154 	beq.w	82d36 <_malloc_r+0x4a6>
   82a8e:	f503 5380 	add.w	r3, r3, #4096	; 0x1000
   82a92:	330f      	adds	r3, #15
   82a94:	f423 6b7f 	bic.w	fp, r3, #4080	; 0xff0
   82a98:	f02b 0b0f 	bic.w	fp, fp, #15
   82a9c:	4659      	mov	r1, fp
   82a9e:	4628      	mov	r0, r5
   82aa0:	f000 fc90 	bl	833c4 <_sbrk_r>
   82aa4:	1c41      	adds	r1, r0, #1
   82aa6:	4602      	mov	r2, r0
   82aa8:	f000 80fb 	beq.w	82ca2 <_malloc_r+0x412>
   82aac:	4582      	cmp	sl, r0
   82aae:	f200 80f6 	bhi.w	82c9e <_malloc_r+0x40e>
   82ab2:	4b43      	ldr	r3, [pc, #268]	; (82bc0 <_malloc_r+0x330>)
   82ab4:	6819      	ldr	r1, [r3, #0]
   82ab6:	4459      	add	r1, fp
   82ab8:	6019      	str	r1, [r3, #0]
   82aba:	f000 814c 	beq.w	82d56 <_malloc_r+0x4c6>
   82abe:	f8d9 0000 	ldr.w	r0, [r9]
   82ac2:	3001      	adds	r0, #1
   82ac4:	bf1b      	ittet	ne
   82ac6:	eba2 0a0a 	subne.w	sl, r2, sl
   82aca:	4451      	addne	r1, sl
   82acc:	f8c9 2000 	streq.w	r2, [r9]
   82ad0:	6019      	strne	r1, [r3, #0]
   82ad2:	f012 0107 	ands.w	r1, r2, #7
   82ad6:	f000 8114 	beq.w	82d02 <_malloc_r+0x472>
   82ada:	f1c1 0008 	rsb	r0, r1, #8
   82ade:	f5c1 5180 	rsb	r1, r1, #4096	; 0x1000
   82ae2:	4402      	add	r2, r0
   82ae4:	3108      	adds	r1, #8
   82ae6:	eb02 090b 	add.w	r9, r2, fp
   82aea:	f3c9 090b 	ubfx	r9, r9, #0, #12
   82aee:	eba1 0909 	sub.w	r9, r1, r9
   82af2:	4649      	mov	r1, r9
   82af4:	4628      	mov	r0, r5
   82af6:	9301      	str	r3, [sp, #4]
   82af8:	9200      	str	r2, [sp, #0]
   82afa:	f000 fc63 	bl	833c4 <_sbrk_r>
   82afe:	1c43      	adds	r3, r0, #1
   82b00:	e89d 000c 	ldmia.w	sp, {r2, r3}
   82b04:	f000 8142 	beq.w	82d8c <_malloc_r+0x4fc>
   82b08:	1a80      	subs	r0, r0, r2
   82b0a:	4448      	add	r0, r9
   82b0c:	f040 0001 	orr.w	r0, r0, #1
   82b10:	6819      	ldr	r1, [r3, #0]
   82b12:	42bc      	cmp	r4, r7
   82b14:	4449      	add	r1, r9
   82b16:	60ba      	str	r2, [r7, #8]
   82b18:	6019      	str	r1, [r3, #0]
   82b1a:	6050      	str	r0, [r2, #4]
   82b1c:	d017      	beq.n	82b4e <_malloc_r+0x2be>
   82b1e:	f1b8 0f0f 	cmp.w	r8, #15
   82b22:	f240 80fa 	bls.w	82d1a <_malloc_r+0x48a>
   82b26:	f04f 0c05 	mov.w	ip, #5
   82b2a:	6862      	ldr	r2, [r4, #4]
   82b2c:	f1a8 000c 	sub.w	r0, r8, #12
   82b30:	f020 0007 	bic.w	r0, r0, #7
   82b34:	f002 0201 	and.w	r2, r2, #1
   82b38:	eb04 0e00 	add.w	lr, r4, r0
   82b3c:	4302      	orrs	r2, r0
   82b3e:	280f      	cmp	r0, #15
   82b40:	6062      	str	r2, [r4, #4]
   82b42:	f8ce c004 	str.w	ip, [lr, #4]
   82b46:	f8ce c008 	str.w	ip, [lr, #8]
   82b4a:	f200 8116 	bhi.w	82d7a <_malloc_r+0x4ea>
   82b4e:	4b1d      	ldr	r3, [pc, #116]	; (82bc4 <_malloc_r+0x334>)
   82b50:	68bc      	ldr	r4, [r7, #8]
   82b52:	681a      	ldr	r2, [r3, #0]
   82b54:	4291      	cmp	r1, r2
   82b56:	bf88      	it	hi
   82b58:	6019      	strhi	r1, [r3, #0]
   82b5a:	4b1b      	ldr	r3, [pc, #108]	; (82bc8 <_malloc_r+0x338>)
   82b5c:	681a      	ldr	r2, [r3, #0]
   82b5e:	4291      	cmp	r1, r2
   82b60:	6862      	ldr	r2, [r4, #4]
   82b62:	bf88      	it	hi
   82b64:	6019      	strhi	r1, [r3, #0]
   82b66:	f022 0203 	bic.w	r2, r2, #3
   82b6a:	4296      	cmp	r6, r2
   82b6c:	eba2 0306 	sub.w	r3, r2, r6
   82b70:	d801      	bhi.n	82b76 <_malloc_r+0x2e6>
   82b72:	2b0f      	cmp	r3, #15
   82b74:	dc04      	bgt.n	82b80 <_malloc_r+0x2f0>
   82b76:	4628      	mov	r0, r5
   82b78:	f000 fa68 	bl	8304c <__malloc_unlock>
   82b7c:	2400      	movs	r4, #0
   82b7e:	e74d      	b.n	82a1c <_malloc_r+0x18c>
   82b80:	f046 0201 	orr.w	r2, r6, #1
   82b84:	f043 0301 	orr.w	r3, r3, #1
   82b88:	4426      	add	r6, r4
   82b8a:	6062      	str	r2, [r4, #4]
   82b8c:	4628      	mov	r0, r5
   82b8e:	60be      	str	r6, [r7, #8]
   82b90:	3408      	adds	r4, #8
   82b92:	6073      	str	r3, [r6, #4]
   82b94:	f000 fa5a 	bl	8304c <__malloc_unlock>
   82b98:	4620      	mov	r0, r4
   82b9a:	b003      	add	sp, #12
   82b9c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   82ba0:	2b14      	cmp	r3, #20
   82ba2:	d970      	bls.n	82c86 <_malloc_r+0x3f6>
   82ba4:	2b54      	cmp	r3, #84	; 0x54
   82ba6:	f200 80a2 	bhi.w	82cee <_malloc_r+0x45e>
   82baa:	0b33      	lsrs	r3, r6, #12
   82bac:	f103 006f 	add.w	r0, r3, #111	; 0x6f
   82bb0:	f103 0e6e 	add.w	lr, r3, #110	; 0x6e
   82bb4:	00c1      	lsls	r1, r0, #3
   82bb6:	e68d      	b.n	828d4 <_malloc_r+0x44>
   82bb8:	200706d0 	.word	0x200706d0
   82bbc:	20070c40 	.word	0x20070c40
   82bc0:	20070c10 	.word	0x20070c10
   82bc4:	20070c38 	.word	0x20070c38
   82bc8:	20070c3c 	.word	0x20070c3c
   82bcc:	200706d8 	.word	0x200706d8
   82bd0:	20070ad8 	.word	0x20070ad8
   82bd4:	0a5a      	lsrs	r2, r3, #9
   82bd6:	2a04      	cmp	r2, #4
   82bd8:	d95b      	bls.n	82c92 <_malloc_r+0x402>
   82bda:	2a14      	cmp	r2, #20
   82bdc:	f200 80ae 	bhi.w	82d3c <_malloc_r+0x4ac>
   82be0:	f102 015c 	add.w	r1, r2, #92	; 0x5c
   82be4:	00c9      	lsls	r1, r1, #3
   82be6:	325b      	adds	r2, #91	; 0x5b
   82be8:	eb07 0c01 	add.w	ip, r7, r1
   82bec:	5879      	ldr	r1, [r7, r1]
   82bee:	f1ac 0c08 	sub.w	ip, ip, #8
   82bf2:	458c      	cmp	ip, r1
   82bf4:	f000 8088 	beq.w	82d08 <_malloc_r+0x478>
   82bf8:	684a      	ldr	r2, [r1, #4]
   82bfa:	f022 0203 	bic.w	r2, r2, #3
   82bfe:	4293      	cmp	r3, r2
   82c00:	d273      	bcs.n	82cea <_malloc_r+0x45a>
   82c02:	6889      	ldr	r1, [r1, #8]
   82c04:	458c      	cmp	ip, r1
   82c06:	d1f7      	bne.n	82bf8 <_malloc_r+0x368>
   82c08:	f8dc 300c 	ldr.w	r3, [ip, #12]
   82c0c:	687a      	ldr	r2, [r7, #4]
   82c0e:	60e3      	str	r3, [r4, #12]
   82c10:	f8c4 c008 	str.w	ip, [r4, #8]
   82c14:	609c      	str	r4, [r3, #8]
   82c16:	f8cc 400c 	str.w	r4, [ip, #12]
   82c1a:	e69e      	b.n	8295a <_malloc_r+0xca>
   82c1c:	f046 0c01 	orr.w	ip, r6, #1
   82c20:	f042 0101 	orr.w	r1, r2, #1
   82c24:	4426      	add	r6, r4
   82c26:	f8c4 c004 	str.w	ip, [r4, #4]
   82c2a:	4628      	mov	r0, r5
   82c2c:	617e      	str	r6, [r7, #20]
   82c2e:	613e      	str	r6, [r7, #16]
   82c30:	f8c6 e00c 	str.w	lr, [r6, #12]
   82c34:	f8c6 e008 	str.w	lr, [r6, #8]
   82c38:	6071      	str	r1, [r6, #4]
   82c3a:	50e2      	str	r2, [r4, r3]
   82c3c:	f000 fa06 	bl	8304c <__malloc_unlock>
   82c40:	3408      	adds	r4, #8
   82c42:	e6eb      	b.n	82a1c <_malloc_r+0x18c>
   82c44:	687a      	ldr	r2, [r7, #4]
   82c46:	e688      	b.n	8295a <_malloc_r+0xca>
   82c48:	f108 0801 	add.w	r8, r8, #1
   82c4c:	f018 0f03 	tst.w	r8, #3
   82c50:	f10c 0c08 	add.w	ip, ip, #8
   82c54:	f47f ae93 	bne.w	8297e <_malloc_r+0xee>
   82c58:	e02d      	b.n	82cb6 <_malloc_r+0x426>
   82c5a:	68dc      	ldr	r4, [r3, #12]
   82c5c:	42a3      	cmp	r3, r4
   82c5e:	bf08      	it	eq
   82c60:	3002      	addeq	r0, #2
   82c62:	f43f ae4b 	beq.w	828fc <_malloc_r+0x6c>
   82c66:	e6c9      	b.n	829fc <_malloc_r+0x16c>
   82c68:	461c      	mov	r4, r3
   82c6a:	4419      	add	r1, r3
   82c6c:	684a      	ldr	r2, [r1, #4]
   82c6e:	68db      	ldr	r3, [r3, #12]
   82c70:	f854 6f08 	ldr.w	r6, [r4, #8]!
   82c74:	f042 0201 	orr.w	r2, r2, #1
   82c78:	604a      	str	r2, [r1, #4]
   82c7a:	4628      	mov	r0, r5
   82c7c:	60f3      	str	r3, [r6, #12]
   82c7e:	609e      	str	r6, [r3, #8]
   82c80:	f000 f9e4 	bl	8304c <__malloc_unlock>
   82c84:	e6ca      	b.n	82a1c <_malloc_r+0x18c>
   82c86:	f103 005c 	add.w	r0, r3, #92	; 0x5c
   82c8a:	f103 0e5b 	add.w	lr, r3, #91	; 0x5b
   82c8e:	00c1      	lsls	r1, r0, #3
   82c90:	e620      	b.n	828d4 <_malloc_r+0x44>
   82c92:	099a      	lsrs	r2, r3, #6
   82c94:	f102 0139 	add.w	r1, r2, #57	; 0x39
   82c98:	00c9      	lsls	r1, r1, #3
   82c9a:	3238      	adds	r2, #56	; 0x38
   82c9c:	e7a4      	b.n	82be8 <_malloc_r+0x358>
   82c9e:	42bc      	cmp	r4, r7
   82ca0:	d054      	beq.n	82d4c <_malloc_r+0x4bc>
   82ca2:	68bc      	ldr	r4, [r7, #8]
   82ca4:	6862      	ldr	r2, [r4, #4]
   82ca6:	f022 0203 	bic.w	r2, r2, #3
   82caa:	e75e      	b.n	82b6a <_malloc_r+0x2da>
   82cac:	f859 3908 	ldr.w	r3, [r9], #-8
   82cb0:	4599      	cmp	r9, r3
   82cb2:	f040 8086 	bne.w	82dc2 <_malloc_r+0x532>
   82cb6:	f010 0f03 	tst.w	r0, #3
   82cba:	f100 30ff 	add.w	r0, r0, #4294967295
   82cbe:	d1f5      	bne.n	82cac <_malloc_r+0x41c>
   82cc0:	687b      	ldr	r3, [r7, #4]
   82cc2:	ea23 0304 	bic.w	r3, r3, r4
   82cc6:	607b      	str	r3, [r7, #4]
   82cc8:	0064      	lsls	r4, r4, #1
   82cca:	429c      	cmp	r4, r3
   82ccc:	f63f aec8 	bhi.w	82a60 <_malloc_r+0x1d0>
   82cd0:	2c00      	cmp	r4, #0
   82cd2:	f43f aec5 	beq.w	82a60 <_malloc_r+0x1d0>
   82cd6:	421c      	tst	r4, r3
   82cd8:	4640      	mov	r0, r8
   82cda:	f47f ae4c 	bne.w	82976 <_malloc_r+0xe6>
   82cde:	0064      	lsls	r4, r4, #1
   82ce0:	421c      	tst	r4, r3
   82ce2:	f100 0004 	add.w	r0, r0, #4
   82ce6:	d0fa      	beq.n	82cde <_malloc_r+0x44e>
   82ce8:	e645      	b.n	82976 <_malloc_r+0xe6>
   82cea:	468c      	mov	ip, r1
   82cec:	e78c      	b.n	82c08 <_malloc_r+0x378>
   82cee:	f5b3 7faa 	cmp.w	r3, #340	; 0x154
   82cf2:	d815      	bhi.n	82d20 <_malloc_r+0x490>
   82cf4:	0bf3      	lsrs	r3, r6, #15
   82cf6:	f103 0078 	add.w	r0, r3, #120	; 0x78
   82cfa:	f103 0e77 	add.w	lr, r3, #119	; 0x77
   82cfe:	00c1      	lsls	r1, r0, #3
   82d00:	e5e8      	b.n	828d4 <_malloc_r+0x44>
   82d02:	f44f 5180 	mov.w	r1, #4096	; 0x1000
   82d06:	e6ee      	b.n	82ae6 <_malloc_r+0x256>
   82d08:	2101      	movs	r1, #1
   82d0a:	687b      	ldr	r3, [r7, #4]
   82d0c:	1092      	asrs	r2, r2, #2
   82d0e:	fa01 f202 	lsl.w	r2, r1, r2
   82d12:	431a      	orrs	r2, r3
   82d14:	607a      	str	r2, [r7, #4]
   82d16:	4663      	mov	r3, ip
   82d18:	e779      	b.n	82c0e <_malloc_r+0x37e>
   82d1a:	2301      	movs	r3, #1
   82d1c:	6053      	str	r3, [r2, #4]
   82d1e:	e72a      	b.n	82b76 <_malloc_r+0x2e6>
   82d20:	f240 5254 	movw	r2, #1364	; 0x554
   82d24:	4293      	cmp	r3, r2
   82d26:	d822      	bhi.n	82d6e <_malloc_r+0x4de>
   82d28:	0cb3      	lsrs	r3, r6, #18
   82d2a:	f103 007d 	add.w	r0, r3, #125	; 0x7d
   82d2e:	f103 0e7c 	add.w	lr, r3, #124	; 0x7c
   82d32:	00c1      	lsls	r1, r0, #3
   82d34:	e5ce      	b.n	828d4 <_malloc_r+0x44>
   82d36:	f103 0b10 	add.w	fp, r3, #16
   82d3a:	e6af      	b.n	82a9c <_malloc_r+0x20c>
   82d3c:	2a54      	cmp	r2, #84	; 0x54
   82d3e:	d829      	bhi.n	82d94 <_malloc_r+0x504>
   82d40:	0b1a      	lsrs	r2, r3, #12
   82d42:	f102 016f 	add.w	r1, r2, #111	; 0x6f
   82d46:	00c9      	lsls	r1, r1, #3
   82d48:	326e      	adds	r2, #110	; 0x6e
   82d4a:	e74d      	b.n	82be8 <_malloc_r+0x358>
   82d4c:	4b20      	ldr	r3, [pc, #128]	; (82dd0 <_malloc_r+0x540>)
   82d4e:	6819      	ldr	r1, [r3, #0]
   82d50:	4459      	add	r1, fp
   82d52:	6019      	str	r1, [r3, #0]
   82d54:	e6b3      	b.n	82abe <_malloc_r+0x22e>
   82d56:	f3ca 000b 	ubfx	r0, sl, #0, #12
   82d5a:	2800      	cmp	r0, #0
   82d5c:	f47f aeaf 	bne.w	82abe <_malloc_r+0x22e>
   82d60:	eb08 030b 	add.w	r3, r8, fp
   82d64:	68ba      	ldr	r2, [r7, #8]
   82d66:	f043 0301 	orr.w	r3, r3, #1
   82d6a:	6053      	str	r3, [r2, #4]
   82d6c:	e6ef      	b.n	82b4e <_malloc_r+0x2be>
   82d6e:	207f      	movs	r0, #127	; 0x7f
   82d70:	f44f 717e 	mov.w	r1, #1016	; 0x3f8
   82d74:	f04f 0e7e 	mov.w	lr, #126	; 0x7e
   82d78:	e5ac      	b.n	828d4 <_malloc_r+0x44>
   82d7a:	f104 0108 	add.w	r1, r4, #8
   82d7e:	4628      	mov	r0, r5
   82d80:	9300      	str	r3, [sp, #0]
   82d82:	f7ff fa67 	bl	82254 <_free_r>
   82d86:	9b00      	ldr	r3, [sp, #0]
   82d88:	6819      	ldr	r1, [r3, #0]
   82d8a:	e6e0      	b.n	82b4e <_malloc_r+0x2be>
   82d8c:	2001      	movs	r0, #1
   82d8e:	f04f 0900 	mov.w	r9, #0
   82d92:	e6bd      	b.n	82b10 <_malloc_r+0x280>
   82d94:	f5b2 7faa 	cmp.w	r2, #340	; 0x154
   82d98:	d805      	bhi.n	82da6 <_malloc_r+0x516>
   82d9a:	0bda      	lsrs	r2, r3, #15
   82d9c:	f102 0178 	add.w	r1, r2, #120	; 0x78
   82da0:	00c9      	lsls	r1, r1, #3
   82da2:	3277      	adds	r2, #119	; 0x77
   82da4:	e720      	b.n	82be8 <_malloc_r+0x358>
   82da6:	f240 5154 	movw	r1, #1364	; 0x554
   82daa:	428a      	cmp	r2, r1
   82dac:	d805      	bhi.n	82dba <_malloc_r+0x52a>
   82dae:	0c9a      	lsrs	r2, r3, #18
   82db0:	f102 017d 	add.w	r1, r2, #125	; 0x7d
   82db4:	00c9      	lsls	r1, r1, #3
   82db6:	327c      	adds	r2, #124	; 0x7c
   82db8:	e716      	b.n	82be8 <_malloc_r+0x358>
   82dba:	f44f 717e 	mov.w	r1, #1016	; 0x3f8
   82dbe:	227e      	movs	r2, #126	; 0x7e
   82dc0:	e712      	b.n	82be8 <_malloc_r+0x358>
   82dc2:	687b      	ldr	r3, [r7, #4]
   82dc4:	e780      	b.n	82cc8 <_malloc_r+0x438>
   82dc6:	08f0      	lsrs	r0, r6, #3
   82dc8:	f106 0308 	add.w	r3, r6, #8
   82dcc:	e60e      	b.n	829ec <_malloc_r+0x15c>
   82dce:	bf00      	nop
   82dd0:	20070c10 	.word	0x20070c10

00082dd4 <__ascii_mbtowc>:
   82dd4:	b082      	sub	sp, #8
   82dd6:	b149      	cbz	r1, 82dec <__ascii_mbtowc+0x18>
   82dd8:	b15a      	cbz	r2, 82df2 <__ascii_mbtowc+0x1e>
   82dda:	b16b      	cbz	r3, 82df8 <__ascii_mbtowc+0x24>
   82ddc:	7813      	ldrb	r3, [r2, #0]
   82dde:	600b      	str	r3, [r1, #0]
   82de0:	7812      	ldrb	r2, [r2, #0]
   82de2:	1c10      	adds	r0, r2, #0
   82de4:	bf18      	it	ne
   82de6:	2001      	movne	r0, #1
   82de8:	b002      	add	sp, #8
   82dea:	4770      	bx	lr
   82dec:	a901      	add	r1, sp, #4
   82dee:	2a00      	cmp	r2, #0
   82df0:	d1f3      	bne.n	82dda <__ascii_mbtowc+0x6>
   82df2:	4610      	mov	r0, r2
   82df4:	b002      	add	sp, #8
   82df6:	4770      	bx	lr
   82df8:	f06f 0001 	mvn.w	r0, #1
   82dfc:	e7f4      	b.n	82de8 <__ascii_mbtowc+0x14>
   82dfe:	bf00      	nop

00082e00 <memchr>:
   82e00:	0783      	lsls	r3, r0, #30
   82e02:	b470      	push	{r4, r5, r6}
   82e04:	b2cd      	uxtb	r5, r1
   82e06:	d03d      	beq.n	82e84 <memchr+0x84>
   82e08:	1e54      	subs	r4, r2, #1
   82e0a:	b30a      	cbz	r2, 82e50 <memchr+0x50>
   82e0c:	7803      	ldrb	r3, [r0, #0]
   82e0e:	42ab      	cmp	r3, r5
   82e10:	d01f      	beq.n	82e52 <memchr+0x52>
   82e12:	1c43      	adds	r3, r0, #1
   82e14:	e005      	b.n	82e22 <memchr+0x22>
   82e16:	f114 34ff 	adds.w	r4, r4, #4294967295
   82e1a:	d319      	bcc.n	82e50 <memchr+0x50>
   82e1c:	7802      	ldrb	r2, [r0, #0]
   82e1e:	42aa      	cmp	r2, r5
   82e20:	d017      	beq.n	82e52 <memchr+0x52>
   82e22:	f013 0f03 	tst.w	r3, #3
   82e26:	4618      	mov	r0, r3
   82e28:	f103 0301 	add.w	r3, r3, #1
   82e2c:	d1f3      	bne.n	82e16 <memchr+0x16>
   82e2e:	2c03      	cmp	r4, #3
   82e30:	d811      	bhi.n	82e56 <memchr+0x56>
   82e32:	b34c      	cbz	r4, 82e88 <memchr+0x88>
   82e34:	7803      	ldrb	r3, [r0, #0]
   82e36:	42ab      	cmp	r3, r5
   82e38:	d00b      	beq.n	82e52 <memchr+0x52>
   82e3a:	4404      	add	r4, r0
   82e3c:	1c43      	adds	r3, r0, #1
   82e3e:	e002      	b.n	82e46 <memchr+0x46>
   82e40:	7802      	ldrb	r2, [r0, #0]
   82e42:	42aa      	cmp	r2, r5
   82e44:	d005      	beq.n	82e52 <memchr+0x52>
   82e46:	429c      	cmp	r4, r3
   82e48:	4618      	mov	r0, r3
   82e4a:	f103 0301 	add.w	r3, r3, #1
   82e4e:	d1f7      	bne.n	82e40 <memchr+0x40>
   82e50:	2000      	movs	r0, #0
   82e52:	bc70      	pop	{r4, r5, r6}
   82e54:	4770      	bx	lr
   82e56:	0209      	lsls	r1, r1, #8
   82e58:	b289      	uxth	r1, r1
   82e5a:	4329      	orrs	r1, r5
   82e5c:	ea41 4101 	orr.w	r1, r1, r1, lsl #16
   82e60:	6803      	ldr	r3, [r0, #0]
   82e62:	4606      	mov	r6, r0
   82e64:	404b      	eors	r3, r1
   82e66:	f1a3 3201 	sub.w	r2, r3, #16843009	; 0x1010101
   82e6a:	ea22 0303 	bic.w	r3, r2, r3
   82e6e:	f013 3f80 	tst.w	r3, #2155905152	; 0x80808080
   82e72:	f100 0004 	add.w	r0, r0, #4
   82e76:	d103      	bne.n	82e80 <memchr+0x80>
   82e78:	3c04      	subs	r4, #4
   82e7a:	2c03      	cmp	r4, #3
   82e7c:	d8f0      	bhi.n	82e60 <memchr+0x60>
   82e7e:	e7d8      	b.n	82e32 <memchr+0x32>
   82e80:	4630      	mov	r0, r6
   82e82:	e7d7      	b.n	82e34 <memchr+0x34>
   82e84:	4614      	mov	r4, r2
   82e86:	e7d2      	b.n	82e2e <memchr+0x2e>
   82e88:	4620      	mov	r0, r4
   82e8a:	e7e2      	b.n	82e52 <memchr+0x52>

00082e8c <memcpy>:
   82e8c:	4684      	mov	ip, r0
   82e8e:	ea41 0300 	orr.w	r3, r1, r0
   82e92:	f013 0303 	ands.w	r3, r3, #3
   82e96:	d149      	bne.n	82f2c <memcpy+0xa0>
   82e98:	3a40      	subs	r2, #64	; 0x40
   82e9a:	d323      	bcc.n	82ee4 <memcpy+0x58>
   82e9c:	680b      	ldr	r3, [r1, #0]
   82e9e:	6003      	str	r3, [r0, #0]
   82ea0:	684b      	ldr	r3, [r1, #4]
   82ea2:	6043      	str	r3, [r0, #4]
   82ea4:	688b      	ldr	r3, [r1, #8]
   82ea6:	6083      	str	r3, [r0, #8]
   82ea8:	68cb      	ldr	r3, [r1, #12]
   82eaa:	60c3      	str	r3, [r0, #12]
   82eac:	690b      	ldr	r3, [r1, #16]
   82eae:	6103      	str	r3, [r0, #16]
   82eb0:	694b      	ldr	r3, [r1, #20]
   82eb2:	6143      	str	r3, [r0, #20]
   82eb4:	698b      	ldr	r3, [r1, #24]
   82eb6:	6183      	str	r3, [r0, #24]
   82eb8:	69cb      	ldr	r3, [r1, #28]
   82eba:	61c3      	str	r3, [r0, #28]
   82ebc:	6a0b      	ldr	r3, [r1, #32]
   82ebe:	6203      	str	r3, [r0, #32]
   82ec0:	6a4b      	ldr	r3, [r1, #36]	; 0x24
   82ec2:	6243      	str	r3, [r0, #36]	; 0x24
   82ec4:	6a8b      	ldr	r3, [r1, #40]	; 0x28
   82ec6:	6283      	str	r3, [r0, #40]	; 0x28
   82ec8:	6acb      	ldr	r3, [r1, #44]	; 0x2c
   82eca:	62c3      	str	r3, [r0, #44]	; 0x2c
   82ecc:	6b0b      	ldr	r3, [r1, #48]	; 0x30
   82ece:	6303      	str	r3, [r0, #48]	; 0x30
   82ed0:	6b4b      	ldr	r3, [r1, #52]	; 0x34
   82ed2:	6343      	str	r3, [r0, #52]	; 0x34
   82ed4:	6b8b      	ldr	r3, [r1, #56]	; 0x38
   82ed6:	6383      	str	r3, [r0, #56]	; 0x38
   82ed8:	6bcb      	ldr	r3, [r1, #60]	; 0x3c
   82eda:	63c3      	str	r3, [r0, #60]	; 0x3c
   82edc:	3040      	adds	r0, #64	; 0x40
   82ede:	3140      	adds	r1, #64	; 0x40
   82ee0:	3a40      	subs	r2, #64	; 0x40
   82ee2:	d2db      	bcs.n	82e9c <memcpy+0x10>
   82ee4:	3230      	adds	r2, #48	; 0x30
   82ee6:	d30b      	bcc.n	82f00 <memcpy+0x74>
   82ee8:	680b      	ldr	r3, [r1, #0]
   82eea:	6003      	str	r3, [r0, #0]
   82eec:	684b      	ldr	r3, [r1, #4]
   82eee:	6043      	str	r3, [r0, #4]
   82ef0:	688b      	ldr	r3, [r1, #8]
   82ef2:	6083      	str	r3, [r0, #8]
   82ef4:	68cb      	ldr	r3, [r1, #12]
   82ef6:	60c3      	str	r3, [r0, #12]
   82ef8:	3010      	adds	r0, #16
   82efa:	3110      	adds	r1, #16
   82efc:	3a10      	subs	r2, #16
   82efe:	d2f3      	bcs.n	82ee8 <memcpy+0x5c>
   82f00:	320c      	adds	r2, #12
   82f02:	d305      	bcc.n	82f10 <memcpy+0x84>
   82f04:	f851 3b04 	ldr.w	r3, [r1], #4
   82f08:	f840 3b04 	str.w	r3, [r0], #4
   82f0c:	3a04      	subs	r2, #4
   82f0e:	d2f9      	bcs.n	82f04 <memcpy+0x78>
   82f10:	3204      	adds	r2, #4
   82f12:	d008      	beq.n	82f26 <memcpy+0x9a>
   82f14:	07d2      	lsls	r2, r2, #31
   82f16:	bf1c      	itt	ne
   82f18:	f811 3b01 	ldrbne.w	r3, [r1], #1
   82f1c:	f800 3b01 	strbne.w	r3, [r0], #1
   82f20:	d301      	bcc.n	82f26 <memcpy+0x9a>
   82f22:	880b      	ldrh	r3, [r1, #0]
   82f24:	8003      	strh	r3, [r0, #0]
   82f26:	4660      	mov	r0, ip
   82f28:	4770      	bx	lr
   82f2a:	bf00      	nop
   82f2c:	2a08      	cmp	r2, #8
   82f2e:	d313      	bcc.n	82f58 <memcpy+0xcc>
   82f30:	078b      	lsls	r3, r1, #30
   82f32:	d0b1      	beq.n	82e98 <memcpy+0xc>
   82f34:	f010 0303 	ands.w	r3, r0, #3
   82f38:	d0ae      	beq.n	82e98 <memcpy+0xc>
   82f3a:	f1c3 0304 	rsb	r3, r3, #4
   82f3e:	1ad2      	subs	r2, r2, r3
   82f40:	07db      	lsls	r3, r3, #31
   82f42:	bf1c      	itt	ne
   82f44:	f811 3b01 	ldrbne.w	r3, [r1], #1
   82f48:	f800 3b01 	strbne.w	r3, [r0], #1
   82f4c:	d3a4      	bcc.n	82e98 <memcpy+0xc>
   82f4e:	f831 3b02 	ldrh.w	r3, [r1], #2
   82f52:	f820 3b02 	strh.w	r3, [r0], #2
   82f56:	e79f      	b.n	82e98 <memcpy+0xc>
   82f58:	3a04      	subs	r2, #4
   82f5a:	d3d9      	bcc.n	82f10 <memcpy+0x84>
   82f5c:	3a01      	subs	r2, #1
   82f5e:	f811 3b01 	ldrb.w	r3, [r1], #1
   82f62:	f800 3b01 	strb.w	r3, [r0], #1
   82f66:	d2f9      	bcs.n	82f5c <memcpy+0xd0>
   82f68:	780b      	ldrb	r3, [r1, #0]
   82f6a:	7003      	strb	r3, [r0, #0]
   82f6c:	784b      	ldrb	r3, [r1, #1]
   82f6e:	7043      	strb	r3, [r0, #1]
   82f70:	788b      	ldrb	r3, [r1, #2]
   82f72:	7083      	strb	r3, [r0, #2]
   82f74:	4660      	mov	r0, ip
   82f76:	4770      	bx	lr

00082f78 <memmove>:
   82f78:	4288      	cmp	r0, r1
   82f7a:	b5f0      	push	{r4, r5, r6, r7, lr}
   82f7c:	d90d      	bls.n	82f9a <memmove+0x22>
   82f7e:	188b      	adds	r3, r1, r2
   82f80:	4298      	cmp	r0, r3
   82f82:	d20a      	bcs.n	82f9a <memmove+0x22>
   82f84:	1884      	adds	r4, r0, r2
   82f86:	2a00      	cmp	r2, #0
   82f88:	d051      	beq.n	8302e <memmove+0xb6>
   82f8a:	4622      	mov	r2, r4
   82f8c:	f813 4d01 	ldrb.w	r4, [r3, #-1]!
   82f90:	4299      	cmp	r1, r3
   82f92:	f802 4d01 	strb.w	r4, [r2, #-1]!
   82f96:	d1f9      	bne.n	82f8c <memmove+0x14>
   82f98:	bdf0      	pop	{r4, r5, r6, r7, pc}
   82f9a:	2a0f      	cmp	r2, #15
   82f9c:	d948      	bls.n	83030 <memmove+0xb8>
   82f9e:	ea41 0300 	orr.w	r3, r1, r0
   82fa2:	079b      	lsls	r3, r3, #30
   82fa4:	d146      	bne.n	83034 <memmove+0xbc>
   82fa6:	4615      	mov	r5, r2
   82fa8:	f100 0410 	add.w	r4, r0, #16
   82fac:	f101 0310 	add.w	r3, r1, #16
   82fb0:	f853 6c10 	ldr.w	r6, [r3, #-16]
   82fb4:	3d10      	subs	r5, #16
   82fb6:	f844 6c10 	str.w	r6, [r4, #-16]
   82fba:	f853 6c0c 	ldr.w	r6, [r3, #-12]
   82fbe:	2d0f      	cmp	r5, #15
   82fc0:	f844 6c0c 	str.w	r6, [r4, #-12]
   82fc4:	f853 6c08 	ldr.w	r6, [r3, #-8]
   82fc8:	f104 0410 	add.w	r4, r4, #16
   82fcc:	f844 6c18 	str.w	r6, [r4, #-24]
   82fd0:	f853 6c04 	ldr.w	r6, [r3, #-4]
   82fd4:	f103 0310 	add.w	r3, r3, #16
   82fd8:	f844 6c14 	str.w	r6, [r4, #-20]
   82fdc:	d8e8      	bhi.n	82fb0 <memmove+0x38>
   82fde:	f1a2 0310 	sub.w	r3, r2, #16
   82fe2:	f023 030f 	bic.w	r3, r3, #15
   82fe6:	f002 0e0f 	and.w	lr, r2, #15
   82fea:	3310      	adds	r3, #16
   82fec:	f1be 0f03 	cmp.w	lr, #3
   82ff0:	4419      	add	r1, r3
   82ff2:	4403      	add	r3, r0
   82ff4:	d921      	bls.n	8303a <memmove+0xc2>
   82ff6:	460e      	mov	r6, r1
   82ff8:	4674      	mov	r4, lr
   82ffa:	1f1d      	subs	r5, r3, #4
   82ffc:	f856 7b04 	ldr.w	r7, [r6], #4
   83000:	3c04      	subs	r4, #4
   83002:	2c03      	cmp	r4, #3
   83004:	f845 7f04 	str.w	r7, [r5, #4]!
   83008:	d8f8      	bhi.n	82ffc <memmove+0x84>
   8300a:	f1ae 0404 	sub.w	r4, lr, #4
   8300e:	f024 0403 	bic.w	r4, r4, #3
   83012:	3404      	adds	r4, #4
   83014:	4421      	add	r1, r4
   83016:	4423      	add	r3, r4
   83018:	f002 0203 	and.w	r2, r2, #3
   8301c:	b162      	cbz	r2, 83038 <memmove+0xc0>
   8301e:	3b01      	subs	r3, #1
   83020:	440a      	add	r2, r1
   83022:	f811 4b01 	ldrb.w	r4, [r1], #1
   83026:	428a      	cmp	r2, r1
   83028:	f803 4f01 	strb.w	r4, [r3, #1]!
   8302c:	d1f9      	bne.n	83022 <memmove+0xaa>
   8302e:	bdf0      	pop	{r4, r5, r6, r7, pc}
   83030:	4603      	mov	r3, r0
   83032:	e7f3      	b.n	8301c <memmove+0xa4>
   83034:	4603      	mov	r3, r0
   83036:	e7f2      	b.n	8301e <memmove+0xa6>
   83038:	bdf0      	pop	{r4, r5, r6, r7, pc}
   8303a:	4672      	mov	r2, lr
   8303c:	e7ee      	b.n	8301c <memmove+0xa4>
   8303e:	bf00      	nop

00083040 <__malloc_lock>:
   83040:	4801      	ldr	r0, [pc, #4]	; (83048 <__malloc_lock+0x8>)
   83042:	f7ff bba1 	b.w	82788 <__retarget_lock_acquire_recursive>
   83046:	bf00      	nop
   83048:	20070c60 	.word	0x20070c60

0008304c <__malloc_unlock>:
   8304c:	4801      	ldr	r0, [pc, #4]	; (83054 <__malloc_unlock+0x8>)
   8304e:	f7ff bb9d 	b.w	8278c <__retarget_lock_release_recursive>
   83052:	bf00      	nop
   83054:	20070c60 	.word	0x20070c60

00083058 <_realloc_r>:
   83058:	2900      	cmp	r1, #0
   8305a:	f000 8094 	beq.w	83186 <_realloc_r+0x12e>
   8305e:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   83062:	460c      	mov	r4, r1
   83064:	4615      	mov	r5, r2
   83066:	b083      	sub	sp, #12
   83068:	4680      	mov	r8, r0
   8306a:	f105 060b 	add.w	r6, r5, #11
   8306e:	f7ff ffe7 	bl	83040 <__malloc_lock>
   83072:	f854 ec04 	ldr.w	lr, [r4, #-4]
   83076:	2e16      	cmp	r6, #22
   83078:	f02e 0703 	bic.w	r7, lr, #3
   8307c:	f1a4 0908 	sub.w	r9, r4, #8
   83080:	d83c      	bhi.n	830fc <_realloc_r+0xa4>
   83082:	2210      	movs	r2, #16
   83084:	4616      	mov	r6, r2
   83086:	42b5      	cmp	r5, r6
   83088:	d83d      	bhi.n	83106 <_realloc_r+0xae>
   8308a:	4297      	cmp	r7, r2
   8308c:	da43      	bge.n	83116 <_realloc_r+0xbe>
   8308e:	4bc6      	ldr	r3, [pc, #792]	; (833a8 <_realloc_r+0x350>)
   83090:	eb09 0007 	add.w	r0, r9, r7
   83094:	6899      	ldr	r1, [r3, #8]
   83096:	4288      	cmp	r0, r1
   83098:	f000 80c3 	beq.w	83222 <_realloc_r+0x1ca>
   8309c:	6843      	ldr	r3, [r0, #4]
   8309e:	f023 0101 	bic.w	r1, r3, #1
   830a2:	4401      	add	r1, r0
   830a4:	6849      	ldr	r1, [r1, #4]
   830a6:	07c9      	lsls	r1, r1, #31
   830a8:	d54d      	bpl.n	83146 <_realloc_r+0xee>
   830aa:	f01e 0f01 	tst.w	lr, #1
   830ae:	f000 809b 	beq.w	831e8 <_realloc_r+0x190>
   830b2:	4629      	mov	r1, r5
   830b4:	4640      	mov	r0, r8
   830b6:	f7ff fbeb 	bl	82890 <_malloc_r>
   830ba:	4605      	mov	r5, r0
   830bc:	2800      	cmp	r0, #0
   830be:	d03b      	beq.n	83138 <_realloc_r+0xe0>
   830c0:	f854 3c04 	ldr.w	r3, [r4, #-4]
   830c4:	f1a0 0208 	sub.w	r2, r0, #8
   830c8:	f023 0301 	bic.w	r3, r3, #1
   830cc:	444b      	add	r3, r9
   830ce:	429a      	cmp	r2, r3
   830d0:	f000 812b 	beq.w	8332a <_realloc_r+0x2d2>
   830d4:	1f3a      	subs	r2, r7, #4
   830d6:	2a24      	cmp	r2, #36	; 0x24
   830d8:	f200 8118 	bhi.w	8330c <_realloc_r+0x2b4>
   830dc:	2a13      	cmp	r2, #19
   830de:	f200 80eb 	bhi.w	832b8 <_realloc_r+0x260>
   830e2:	4603      	mov	r3, r0
   830e4:	4622      	mov	r2, r4
   830e6:	6811      	ldr	r1, [r2, #0]
   830e8:	6019      	str	r1, [r3, #0]
   830ea:	6851      	ldr	r1, [r2, #4]
   830ec:	6059      	str	r1, [r3, #4]
   830ee:	6892      	ldr	r2, [r2, #8]
   830f0:	609a      	str	r2, [r3, #8]
   830f2:	4621      	mov	r1, r4
   830f4:	4640      	mov	r0, r8
   830f6:	f7ff f8ad 	bl	82254 <_free_r>
   830fa:	e01d      	b.n	83138 <_realloc_r+0xe0>
   830fc:	f026 0607 	bic.w	r6, r6, #7
   83100:	2e00      	cmp	r6, #0
   83102:	4632      	mov	r2, r6
   83104:	dabf      	bge.n	83086 <_realloc_r+0x2e>
   83106:	2500      	movs	r5, #0
   83108:	230c      	movs	r3, #12
   8310a:	4628      	mov	r0, r5
   8310c:	f8c8 3000 	str.w	r3, [r8]
   83110:	b003      	add	sp, #12
   83112:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   83116:	4625      	mov	r5, r4
   83118:	1bbb      	subs	r3, r7, r6
   8311a:	2b0f      	cmp	r3, #15
   8311c:	f8d9 2004 	ldr.w	r2, [r9, #4]
   83120:	d81d      	bhi.n	8315e <_realloc_r+0x106>
   83122:	f002 0201 	and.w	r2, r2, #1
   83126:	433a      	orrs	r2, r7
   83128:	eb09 0107 	add.w	r1, r9, r7
   8312c:	f8c9 2004 	str.w	r2, [r9, #4]
   83130:	684b      	ldr	r3, [r1, #4]
   83132:	f043 0301 	orr.w	r3, r3, #1
   83136:	604b      	str	r3, [r1, #4]
   83138:	4640      	mov	r0, r8
   8313a:	f7ff ff87 	bl	8304c <__malloc_unlock>
   8313e:	4628      	mov	r0, r5
   83140:	b003      	add	sp, #12
   83142:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   83146:	f023 0303 	bic.w	r3, r3, #3
   8314a:	18f9      	adds	r1, r7, r3
   8314c:	4291      	cmp	r1, r2
   8314e:	db1d      	blt.n	8318c <_realloc_r+0x134>
   83150:	68c3      	ldr	r3, [r0, #12]
   83152:	6882      	ldr	r2, [r0, #8]
   83154:	4625      	mov	r5, r4
   83156:	60d3      	str	r3, [r2, #12]
   83158:	460f      	mov	r7, r1
   8315a:	609a      	str	r2, [r3, #8]
   8315c:	e7dc      	b.n	83118 <_realloc_r+0xc0>
   8315e:	f002 0201 	and.w	r2, r2, #1
   83162:	eb09 0106 	add.w	r1, r9, r6
   83166:	f043 0301 	orr.w	r3, r3, #1
   8316a:	4332      	orrs	r2, r6
   8316c:	f8c9 2004 	str.w	r2, [r9, #4]
   83170:	444f      	add	r7, r9
   83172:	604b      	str	r3, [r1, #4]
   83174:	687b      	ldr	r3, [r7, #4]
   83176:	3108      	adds	r1, #8
   83178:	f043 0301 	orr.w	r3, r3, #1
   8317c:	607b      	str	r3, [r7, #4]
   8317e:	4640      	mov	r0, r8
   83180:	f7ff f868 	bl	82254 <_free_r>
   83184:	e7d8      	b.n	83138 <_realloc_r+0xe0>
   83186:	4611      	mov	r1, r2
   83188:	f7ff bb82 	b.w	82890 <_malloc_r>
   8318c:	f01e 0f01 	tst.w	lr, #1
   83190:	d18f      	bne.n	830b2 <_realloc_r+0x5a>
   83192:	f854 1c08 	ldr.w	r1, [r4, #-8]
   83196:	eba9 0a01 	sub.w	sl, r9, r1
   8319a:	f8da 1004 	ldr.w	r1, [sl, #4]
   8319e:	f021 0103 	bic.w	r1, r1, #3
   831a2:	440b      	add	r3, r1
   831a4:	443b      	add	r3, r7
   831a6:	4293      	cmp	r3, r2
   831a8:	db26      	blt.n	831f8 <_realloc_r+0x1a0>
   831aa:	4655      	mov	r5, sl
   831ac:	68c1      	ldr	r1, [r0, #12]
   831ae:	6880      	ldr	r0, [r0, #8]
   831b0:	1f3a      	subs	r2, r7, #4
   831b2:	60c1      	str	r1, [r0, #12]
   831b4:	6088      	str	r0, [r1, #8]
   831b6:	f855 0f08 	ldr.w	r0, [r5, #8]!
   831ba:	f8da 100c 	ldr.w	r1, [sl, #12]
   831be:	2a24      	cmp	r2, #36	; 0x24
   831c0:	60c1      	str	r1, [r0, #12]
   831c2:	6088      	str	r0, [r1, #8]
   831c4:	d826      	bhi.n	83214 <_realloc_r+0x1bc>
   831c6:	2a13      	cmp	r2, #19
   831c8:	f240 8081 	bls.w	832ce <_realloc_r+0x276>
   831cc:	6821      	ldr	r1, [r4, #0]
   831ce:	2a1b      	cmp	r2, #27
   831d0:	f8ca 1008 	str.w	r1, [sl, #8]
   831d4:	6861      	ldr	r1, [r4, #4]
   831d6:	f8ca 100c 	str.w	r1, [sl, #12]
   831da:	f200 80ad 	bhi.w	83338 <_realloc_r+0x2e0>
   831de:	f104 0008 	add.w	r0, r4, #8
   831e2:	f10a 0210 	add.w	r2, sl, #16
   831e6:	e074      	b.n	832d2 <_realloc_r+0x27a>
   831e8:	f854 3c08 	ldr.w	r3, [r4, #-8]
   831ec:	eba9 0a03 	sub.w	sl, r9, r3
   831f0:	f8da 1004 	ldr.w	r1, [sl, #4]
   831f4:	f021 0103 	bic.w	r1, r1, #3
   831f8:	187b      	adds	r3, r7, r1
   831fa:	4293      	cmp	r3, r2
   831fc:	f6ff af59 	blt.w	830b2 <_realloc_r+0x5a>
   83200:	4655      	mov	r5, sl
   83202:	f8da 100c 	ldr.w	r1, [sl, #12]
   83206:	f855 0f08 	ldr.w	r0, [r5, #8]!
   8320a:	1f3a      	subs	r2, r7, #4
   8320c:	2a24      	cmp	r2, #36	; 0x24
   8320e:	60c1      	str	r1, [r0, #12]
   83210:	6088      	str	r0, [r1, #8]
   83212:	d9d8      	bls.n	831c6 <_realloc_r+0x16e>
   83214:	4621      	mov	r1, r4
   83216:	4628      	mov	r0, r5
   83218:	461f      	mov	r7, r3
   8321a:	46d1      	mov	r9, sl
   8321c:	f7ff feac 	bl	82f78 <memmove>
   83220:	e77a      	b.n	83118 <_realloc_r+0xc0>
   83222:	6841      	ldr	r1, [r0, #4]
   83224:	f106 0010 	add.w	r0, r6, #16
   83228:	f021 0b03 	bic.w	fp, r1, #3
   8322c:	44bb      	add	fp, r7
   8322e:	4583      	cmp	fp, r0
   83230:	da58      	bge.n	832e4 <_realloc_r+0x28c>
   83232:	f01e 0f01 	tst.w	lr, #1
   83236:	f47f af3c 	bne.w	830b2 <_realloc_r+0x5a>
   8323a:	f854 1c08 	ldr.w	r1, [r4, #-8]
   8323e:	eba9 0a01 	sub.w	sl, r9, r1
   83242:	f8da 1004 	ldr.w	r1, [sl, #4]
   83246:	f021 0103 	bic.w	r1, r1, #3
   8324a:	448b      	add	fp, r1
   8324c:	4558      	cmp	r0, fp
   8324e:	dcd3      	bgt.n	831f8 <_realloc_r+0x1a0>
   83250:	4655      	mov	r5, sl
   83252:	f8da 100c 	ldr.w	r1, [sl, #12]
   83256:	f855 0f08 	ldr.w	r0, [r5, #8]!
   8325a:	1f3a      	subs	r2, r7, #4
   8325c:	2a24      	cmp	r2, #36	; 0x24
   8325e:	60c1      	str	r1, [r0, #12]
   83260:	6088      	str	r0, [r1, #8]
   83262:	f200 808d 	bhi.w	83380 <_realloc_r+0x328>
   83266:	2a13      	cmp	r2, #19
   83268:	f240 8087 	bls.w	8337a <_realloc_r+0x322>
   8326c:	6821      	ldr	r1, [r4, #0]
   8326e:	2a1b      	cmp	r2, #27
   83270:	f8ca 1008 	str.w	r1, [sl, #8]
   83274:	6861      	ldr	r1, [r4, #4]
   83276:	f8ca 100c 	str.w	r1, [sl, #12]
   8327a:	f200 8088 	bhi.w	8338e <_realloc_r+0x336>
   8327e:	f104 0108 	add.w	r1, r4, #8
   83282:	f10a 0210 	add.w	r2, sl, #16
   83286:	6808      	ldr	r0, [r1, #0]
   83288:	6010      	str	r0, [r2, #0]
   8328a:	6848      	ldr	r0, [r1, #4]
   8328c:	6050      	str	r0, [r2, #4]
   8328e:	6889      	ldr	r1, [r1, #8]
   83290:	6091      	str	r1, [r2, #8]
   83292:	ebab 0206 	sub.w	r2, fp, r6
   83296:	eb0a 0106 	add.w	r1, sl, r6
   8329a:	f042 0201 	orr.w	r2, r2, #1
   8329e:	6099      	str	r1, [r3, #8]
   832a0:	604a      	str	r2, [r1, #4]
   832a2:	f8da 3004 	ldr.w	r3, [sl, #4]
   832a6:	4640      	mov	r0, r8
   832a8:	f003 0301 	and.w	r3, r3, #1
   832ac:	431e      	orrs	r6, r3
   832ae:	f8ca 6004 	str.w	r6, [sl, #4]
   832b2:	f7ff fecb 	bl	8304c <__malloc_unlock>
   832b6:	e742      	b.n	8313e <_realloc_r+0xe6>
   832b8:	6823      	ldr	r3, [r4, #0]
   832ba:	2a1b      	cmp	r2, #27
   832bc:	6003      	str	r3, [r0, #0]
   832be:	6863      	ldr	r3, [r4, #4]
   832c0:	6043      	str	r3, [r0, #4]
   832c2:	d827      	bhi.n	83314 <_realloc_r+0x2bc>
   832c4:	f100 0308 	add.w	r3, r0, #8
   832c8:	f104 0208 	add.w	r2, r4, #8
   832cc:	e70b      	b.n	830e6 <_realloc_r+0x8e>
   832ce:	4620      	mov	r0, r4
   832d0:	462a      	mov	r2, r5
   832d2:	6801      	ldr	r1, [r0, #0]
   832d4:	461f      	mov	r7, r3
   832d6:	6011      	str	r1, [r2, #0]
   832d8:	6841      	ldr	r1, [r0, #4]
   832da:	46d1      	mov	r9, sl
   832dc:	6051      	str	r1, [r2, #4]
   832de:	6883      	ldr	r3, [r0, #8]
   832e0:	6093      	str	r3, [r2, #8]
   832e2:	e719      	b.n	83118 <_realloc_r+0xc0>
   832e4:	ebab 0b06 	sub.w	fp, fp, r6
   832e8:	eb09 0106 	add.w	r1, r9, r6
   832ec:	f04b 0201 	orr.w	r2, fp, #1
   832f0:	6099      	str	r1, [r3, #8]
   832f2:	604a      	str	r2, [r1, #4]
   832f4:	f854 3c04 	ldr.w	r3, [r4, #-4]
   832f8:	4640      	mov	r0, r8
   832fa:	f003 0301 	and.w	r3, r3, #1
   832fe:	431e      	orrs	r6, r3
   83300:	f844 6c04 	str.w	r6, [r4, #-4]
   83304:	f7ff fea2 	bl	8304c <__malloc_unlock>
   83308:	4625      	mov	r5, r4
   8330a:	e718      	b.n	8313e <_realloc_r+0xe6>
   8330c:	4621      	mov	r1, r4
   8330e:	f7ff fe33 	bl	82f78 <memmove>
   83312:	e6ee      	b.n	830f2 <_realloc_r+0x9a>
   83314:	68a3      	ldr	r3, [r4, #8]
   83316:	2a24      	cmp	r2, #36	; 0x24
   83318:	6083      	str	r3, [r0, #8]
   8331a:	68e3      	ldr	r3, [r4, #12]
   8331c:	60c3      	str	r3, [r0, #12]
   8331e:	d018      	beq.n	83352 <_realloc_r+0x2fa>
   83320:	f100 0310 	add.w	r3, r0, #16
   83324:	f104 0210 	add.w	r2, r4, #16
   83328:	e6dd      	b.n	830e6 <_realloc_r+0x8e>
   8332a:	f850 3c04 	ldr.w	r3, [r0, #-4]
   8332e:	4625      	mov	r5, r4
   83330:	f023 0303 	bic.w	r3, r3, #3
   83334:	441f      	add	r7, r3
   83336:	e6ef      	b.n	83118 <_realloc_r+0xc0>
   83338:	68a1      	ldr	r1, [r4, #8]
   8333a:	2a24      	cmp	r2, #36	; 0x24
   8333c:	f8ca 1010 	str.w	r1, [sl, #16]
   83340:	68e1      	ldr	r1, [r4, #12]
   83342:	f8ca 1014 	str.w	r1, [sl, #20]
   83346:	d00d      	beq.n	83364 <_realloc_r+0x30c>
   83348:	f104 0010 	add.w	r0, r4, #16
   8334c:	f10a 0218 	add.w	r2, sl, #24
   83350:	e7bf      	b.n	832d2 <_realloc_r+0x27a>
   83352:	6922      	ldr	r2, [r4, #16]
   83354:	f100 0318 	add.w	r3, r0, #24
   83358:	6102      	str	r2, [r0, #16]
   8335a:	6961      	ldr	r1, [r4, #20]
   8335c:	f104 0218 	add.w	r2, r4, #24
   83360:	6141      	str	r1, [r0, #20]
   83362:	e6c0      	b.n	830e6 <_realloc_r+0x8e>
   83364:	6922      	ldr	r2, [r4, #16]
   83366:	f104 0018 	add.w	r0, r4, #24
   8336a:	f8ca 2018 	str.w	r2, [sl, #24]
   8336e:	6961      	ldr	r1, [r4, #20]
   83370:	f10a 0220 	add.w	r2, sl, #32
   83374:	f8ca 101c 	str.w	r1, [sl, #28]
   83378:	e7ab      	b.n	832d2 <_realloc_r+0x27a>
   8337a:	4621      	mov	r1, r4
   8337c:	462a      	mov	r2, r5
   8337e:	e782      	b.n	83286 <_realloc_r+0x22e>
   83380:	4621      	mov	r1, r4
   83382:	4628      	mov	r0, r5
   83384:	9301      	str	r3, [sp, #4]
   83386:	f7ff fdf7 	bl	82f78 <memmove>
   8338a:	9b01      	ldr	r3, [sp, #4]
   8338c:	e781      	b.n	83292 <_realloc_r+0x23a>
   8338e:	68a1      	ldr	r1, [r4, #8]
   83390:	2a24      	cmp	r2, #36	; 0x24
   83392:	f8ca 1010 	str.w	r1, [sl, #16]
   83396:	68e1      	ldr	r1, [r4, #12]
   83398:	f8ca 1014 	str.w	r1, [sl, #20]
   8339c:	d006      	beq.n	833ac <_realloc_r+0x354>
   8339e:	f104 0110 	add.w	r1, r4, #16
   833a2:	f10a 0218 	add.w	r2, sl, #24
   833a6:	e76e      	b.n	83286 <_realloc_r+0x22e>
   833a8:	200706d0 	.word	0x200706d0
   833ac:	6922      	ldr	r2, [r4, #16]
   833ae:	f104 0118 	add.w	r1, r4, #24
   833b2:	f8ca 2018 	str.w	r2, [sl, #24]
   833b6:	6960      	ldr	r0, [r4, #20]
   833b8:	f10a 0220 	add.w	r2, sl, #32
   833bc:	f8ca 001c 	str.w	r0, [sl, #28]
   833c0:	e761      	b.n	83286 <_realloc_r+0x22e>
   833c2:	bf00      	nop

000833c4 <_sbrk_r>:
   833c4:	b538      	push	{r3, r4, r5, lr}
   833c6:	2300      	movs	r3, #0
   833c8:	4c06      	ldr	r4, [pc, #24]	; (833e4 <_sbrk_r+0x20>)
   833ca:	4605      	mov	r5, r0
   833cc:	4608      	mov	r0, r1
   833ce:	6023      	str	r3, [r4, #0]
   833d0:	f7fd fc44 	bl	80c5c <_sbrk>
   833d4:	1c43      	adds	r3, r0, #1
   833d6:	d000      	beq.n	833da <_sbrk_r+0x16>
   833d8:	bd38      	pop	{r3, r4, r5, pc}
   833da:	6823      	ldr	r3, [r4, #0]
   833dc:	2b00      	cmp	r3, #0
   833de:	d0fb      	beq.n	833d8 <_sbrk_r+0x14>
   833e0:	602b      	str	r3, [r5, #0]
   833e2:	bd38      	pop	{r3, r4, r5, pc}
   833e4:	20070c74 	.word	0x20070c74

000833e8 <__sread>:
   833e8:	b510      	push	{r4, lr}
   833ea:	460c      	mov	r4, r1
   833ec:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
   833f0:	f000 fa22 	bl	83838 <_read_r>
   833f4:	2800      	cmp	r0, #0
   833f6:	db03      	blt.n	83400 <__sread+0x18>
   833f8:	6d23      	ldr	r3, [r4, #80]	; 0x50
   833fa:	4403      	add	r3, r0
   833fc:	6523      	str	r3, [r4, #80]	; 0x50
   833fe:	bd10      	pop	{r4, pc}
   83400:	89a3      	ldrh	r3, [r4, #12]
   83402:	f423 5380 	bic.w	r3, r3, #4096	; 0x1000
   83406:	81a3      	strh	r3, [r4, #12]
   83408:	bd10      	pop	{r4, pc}
   8340a:	bf00      	nop

0008340c <__swrite>:
   8340c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
   83410:	460c      	mov	r4, r1
   83412:	f9b1 100c 	ldrsh.w	r1, [r1, #12]
   83416:	461f      	mov	r7, r3
   83418:	05cb      	lsls	r3, r1, #23
   8341a:	4616      	mov	r6, r2
   8341c:	4605      	mov	r5, r0
   8341e:	d507      	bpl.n	83430 <__swrite+0x24>
   83420:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
   83424:	2302      	movs	r3, #2
   83426:	2200      	movs	r2, #0
   83428:	f000 f9f0 	bl	8380c <_lseek_r>
   8342c:	f9b4 100c 	ldrsh.w	r1, [r4, #12]
   83430:	f421 5180 	bic.w	r1, r1, #4096	; 0x1000
   83434:	81a1      	strh	r1, [r4, #12]
   83436:	463b      	mov	r3, r7
   83438:	4632      	mov	r2, r6
   8343a:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
   8343e:	4628      	mov	r0, r5
   83440:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
   83444:	f000 b8d0 	b.w	835e8 <_write_r>

00083448 <__sseek>:
   83448:	b510      	push	{r4, lr}
   8344a:	460c      	mov	r4, r1
   8344c:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
   83450:	f000 f9dc 	bl	8380c <_lseek_r>
   83454:	89a3      	ldrh	r3, [r4, #12]
   83456:	1c42      	adds	r2, r0, #1
   83458:	bf0e      	itee	eq
   8345a:	f423 5380 	biceq.w	r3, r3, #4096	; 0x1000
   8345e:	f443 5380 	orrne.w	r3, r3, #4096	; 0x1000
   83462:	6520      	strne	r0, [r4, #80]	; 0x50
   83464:	81a3      	strh	r3, [r4, #12]
   83466:	bd10      	pop	{r4, pc}

00083468 <__sclose>:
   83468:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
   8346c:	f000 b934 	b.w	836d8 <_close_r>

00083470 <strlen>:
   83470:	f020 0103 	bic.w	r1, r0, #3
   83474:	f010 0003 	ands.w	r0, r0, #3
   83478:	f1c0 0000 	rsb	r0, r0, #0
   8347c:	f851 3b04 	ldr.w	r3, [r1], #4
   83480:	f100 0c04 	add.w	ip, r0, #4
   83484:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
   83488:	f06f 0200 	mvn.w	r2, #0
   8348c:	bf1c      	itt	ne
   8348e:	fa22 f20c 	lsrne.w	r2, r2, ip
   83492:	4313      	orrne	r3, r2
   83494:	f04f 0c01 	mov.w	ip, #1
   83498:	ea4c 2c0c 	orr.w	ip, ip, ip, lsl #8
   8349c:	ea4c 4c0c 	orr.w	ip, ip, ip, lsl #16
   834a0:	eba3 020c 	sub.w	r2, r3, ip
   834a4:	ea22 0203 	bic.w	r2, r2, r3
   834a8:	ea12 12cc 	ands.w	r2, r2, ip, lsl #7
   834ac:	bf04      	itt	eq
   834ae:	f851 3b04 	ldreq.w	r3, [r1], #4
   834b2:	3004      	addeq	r0, #4
   834b4:	d0f4      	beq.n	834a0 <strlen+0x30>
   834b6:	f1c2 0100 	rsb	r1, r2, #0
   834ba:	ea02 0201 	and.w	r2, r2, r1
   834be:	fab2 f282 	clz	r2, r2
   834c2:	f1c2 021f 	rsb	r2, r2, #31
   834c6:	eb00 00d2 	add.w	r0, r0, r2, lsr #3
   834ca:	4770      	bx	lr

000834cc <__swbuf_r>:
   834cc:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
   834ce:	460d      	mov	r5, r1
   834d0:	4614      	mov	r4, r2
   834d2:	4606      	mov	r6, r0
   834d4:	b110      	cbz	r0, 834dc <__swbuf_r+0x10>
   834d6:	6b83      	ldr	r3, [r0, #56]	; 0x38
   834d8:	2b00      	cmp	r3, #0
   834da:	d04b      	beq.n	83574 <__swbuf_r+0xa8>
   834dc:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
   834e0:	69a3      	ldr	r3, [r4, #24]
   834e2:	b291      	uxth	r1, r2
   834e4:	0708      	lsls	r0, r1, #28
   834e6:	60a3      	str	r3, [r4, #8]
   834e8:	d539      	bpl.n	8355e <__swbuf_r+0x92>
   834ea:	6923      	ldr	r3, [r4, #16]
   834ec:	2b00      	cmp	r3, #0
   834ee:	d036      	beq.n	8355e <__swbuf_r+0x92>
   834f0:	b2ed      	uxtb	r5, r5
   834f2:	0489      	lsls	r1, r1, #18
   834f4:	462f      	mov	r7, r5
   834f6:	d515      	bpl.n	83524 <__swbuf_r+0x58>
   834f8:	6822      	ldr	r2, [r4, #0]
   834fa:	6961      	ldr	r1, [r4, #20]
   834fc:	1ad3      	subs	r3, r2, r3
   834fe:	428b      	cmp	r3, r1
   83500:	da1c      	bge.n	8353c <__swbuf_r+0x70>
   83502:	3301      	adds	r3, #1
   83504:	68a1      	ldr	r1, [r4, #8]
   83506:	1c50      	adds	r0, r2, #1
   83508:	3901      	subs	r1, #1
   8350a:	60a1      	str	r1, [r4, #8]
   8350c:	6020      	str	r0, [r4, #0]
   8350e:	7015      	strb	r5, [r2, #0]
   83510:	6962      	ldr	r2, [r4, #20]
   83512:	429a      	cmp	r2, r3
   83514:	d01a      	beq.n	8354c <__swbuf_r+0x80>
   83516:	89a3      	ldrh	r3, [r4, #12]
   83518:	07db      	lsls	r3, r3, #31
   8351a:	d501      	bpl.n	83520 <__swbuf_r+0x54>
   8351c:	2d0a      	cmp	r5, #10
   8351e:	d015      	beq.n	8354c <__swbuf_r+0x80>
   83520:	4638      	mov	r0, r7
   83522:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
   83524:	6e61      	ldr	r1, [r4, #100]	; 0x64
   83526:	f442 5200 	orr.w	r2, r2, #8192	; 0x2000
   8352a:	f421 5100 	bic.w	r1, r1, #8192	; 0x2000
   8352e:	81a2      	strh	r2, [r4, #12]
   83530:	6822      	ldr	r2, [r4, #0]
   83532:	6661      	str	r1, [r4, #100]	; 0x64
   83534:	6961      	ldr	r1, [r4, #20]
   83536:	1ad3      	subs	r3, r2, r3
   83538:	428b      	cmp	r3, r1
   8353a:	dbe2      	blt.n	83502 <__swbuf_r+0x36>
   8353c:	4621      	mov	r1, r4
   8353e:	4630      	mov	r0, r6
   83540:	f7fe fd0a 	bl	81f58 <_fflush_r>
   83544:	b940      	cbnz	r0, 83558 <__swbuf_r+0x8c>
   83546:	2301      	movs	r3, #1
   83548:	6822      	ldr	r2, [r4, #0]
   8354a:	e7db      	b.n	83504 <__swbuf_r+0x38>
   8354c:	4621      	mov	r1, r4
   8354e:	4630      	mov	r0, r6
   83550:	f7fe fd02 	bl	81f58 <_fflush_r>
   83554:	2800      	cmp	r0, #0
   83556:	d0e3      	beq.n	83520 <__swbuf_r+0x54>
   83558:	f04f 37ff 	mov.w	r7, #4294967295
   8355c:	e7e0      	b.n	83520 <__swbuf_r+0x54>
   8355e:	4621      	mov	r1, r4
   83560:	4630      	mov	r0, r6
   83562:	f7fe fbe9 	bl	81d38 <__swsetup_r>
   83566:	2800      	cmp	r0, #0
   83568:	d1f6      	bne.n	83558 <__swbuf_r+0x8c>
   8356a:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
   8356e:	6923      	ldr	r3, [r4, #16]
   83570:	b291      	uxth	r1, r2
   83572:	e7bd      	b.n	834f0 <__swbuf_r+0x24>
   83574:	f7fe fd48 	bl	82008 <__sinit>
   83578:	e7b0      	b.n	834dc <__swbuf_r+0x10>
   8357a:	bf00      	nop

0008357c <_wcrtomb_r>:
   8357c:	b5f0      	push	{r4, r5, r6, r7, lr}
   8357e:	4606      	mov	r6, r0
   83580:	b085      	sub	sp, #20
   83582:	461f      	mov	r7, r3
   83584:	b189      	cbz	r1, 835aa <_wcrtomb_r+0x2e>
   83586:	4c10      	ldr	r4, [pc, #64]	; (835c8 <_wcrtomb_r+0x4c>)
   83588:	4d10      	ldr	r5, [pc, #64]	; (835cc <_wcrtomb_r+0x50>)
   8358a:	6824      	ldr	r4, [r4, #0]
   8358c:	6b64      	ldr	r4, [r4, #52]	; 0x34
   8358e:	2c00      	cmp	r4, #0
   83590:	bf08      	it	eq
   83592:	462c      	moveq	r4, r5
   83594:	f8d4 40e0 	ldr.w	r4, [r4, #224]	; 0xe0
   83598:	47a0      	blx	r4
   8359a:	1c43      	adds	r3, r0, #1
   8359c:	d103      	bne.n	835a6 <_wcrtomb_r+0x2a>
   8359e:	2200      	movs	r2, #0
   835a0:	238a      	movs	r3, #138	; 0x8a
   835a2:	603a      	str	r2, [r7, #0]
   835a4:	6033      	str	r3, [r6, #0]
   835a6:	b005      	add	sp, #20
   835a8:	bdf0      	pop	{r4, r5, r6, r7, pc}
   835aa:	460c      	mov	r4, r1
   835ac:	4a06      	ldr	r2, [pc, #24]	; (835c8 <_wcrtomb_r+0x4c>)
   835ae:	4d07      	ldr	r5, [pc, #28]	; (835cc <_wcrtomb_r+0x50>)
   835b0:	6811      	ldr	r1, [r2, #0]
   835b2:	4622      	mov	r2, r4
   835b4:	6b4c      	ldr	r4, [r1, #52]	; 0x34
   835b6:	a901      	add	r1, sp, #4
   835b8:	2c00      	cmp	r4, #0
   835ba:	bf08      	it	eq
   835bc:	462c      	moveq	r4, r5
   835be:	f8d4 40e0 	ldr.w	r4, [r4, #224]	; 0xe0
   835c2:	47a0      	blx	r4
   835c4:	e7e9      	b.n	8359a <_wcrtomb_r+0x1e>
   835c6:	bf00      	nop
   835c8:	20070134 	.word	0x20070134
   835cc:	20070564 	.word	0x20070564

000835d0 <__ascii_wctomb>:
   835d0:	b119      	cbz	r1, 835da <__ascii_wctomb+0xa>
   835d2:	2aff      	cmp	r2, #255	; 0xff
   835d4:	d803      	bhi.n	835de <__ascii_wctomb+0xe>
   835d6:	700a      	strb	r2, [r1, #0]
   835d8:	2101      	movs	r1, #1
   835da:	4608      	mov	r0, r1
   835dc:	4770      	bx	lr
   835de:	238a      	movs	r3, #138	; 0x8a
   835e0:	f04f 31ff 	mov.w	r1, #4294967295
   835e4:	6003      	str	r3, [r0, #0]
   835e6:	e7f8      	b.n	835da <__ascii_wctomb+0xa>

000835e8 <_write_r>:
   835e8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
   835ea:	460e      	mov	r6, r1
   835ec:	2500      	movs	r5, #0
   835ee:	4c08      	ldr	r4, [pc, #32]	; (83610 <_write_r+0x28>)
   835f0:	4611      	mov	r1, r2
   835f2:	4607      	mov	r7, r0
   835f4:	461a      	mov	r2, r3
   835f6:	4630      	mov	r0, r6
   835f8:	6025      	str	r5, [r4, #0]
   835fa:	f7fc fe49 	bl	80290 <_write>
   835fe:	1c43      	adds	r3, r0, #1
   83600:	d000      	beq.n	83604 <_write_r+0x1c>
   83602:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
   83604:	6823      	ldr	r3, [r4, #0]
   83606:	2b00      	cmp	r3, #0
   83608:	d0fb      	beq.n	83602 <_write_r+0x1a>
   8360a:	603b      	str	r3, [r7, #0]
   8360c:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
   8360e:	bf00      	nop
   83610:	20070c74 	.word	0x20070c74

00083614 <__register_exitproc>:
   83614:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
   83618:	4d2c      	ldr	r5, [pc, #176]	; (836cc <__register_exitproc+0xb8>)
   8361a:	4606      	mov	r6, r0
   8361c:	6828      	ldr	r0, [r5, #0]
   8361e:	4698      	mov	r8, r3
   83620:	460f      	mov	r7, r1
   83622:	4691      	mov	r9, r2
   83624:	f7ff f8b0 	bl	82788 <__retarget_lock_acquire_recursive>
   83628:	4b29      	ldr	r3, [pc, #164]	; (836d0 <__register_exitproc+0xbc>)
   8362a:	681c      	ldr	r4, [r3, #0]
   8362c:	f8d4 3148 	ldr.w	r3, [r4, #328]	; 0x148
   83630:	2b00      	cmp	r3, #0
   83632:	d03e      	beq.n	836b2 <__register_exitproc+0x9e>
   83634:	685a      	ldr	r2, [r3, #4]
   83636:	2a1f      	cmp	r2, #31
   83638:	dc1c      	bgt.n	83674 <__register_exitproc+0x60>
   8363a:	f102 0e01 	add.w	lr, r2, #1
   8363e:	b176      	cbz	r6, 8365e <__register_exitproc+0x4a>
   83640:	2101      	movs	r1, #1
   83642:	eb03 0482 	add.w	r4, r3, r2, lsl #2
   83646:	f8c4 9088 	str.w	r9, [r4, #136]	; 0x88
   8364a:	f8d3 0188 	ldr.w	r0, [r3, #392]	; 0x188
   8364e:	4091      	lsls	r1, r2
   83650:	4308      	orrs	r0, r1
   83652:	2e02      	cmp	r6, #2
   83654:	f8c3 0188 	str.w	r0, [r3, #392]	; 0x188
   83658:	f8c4 8108 	str.w	r8, [r4, #264]	; 0x108
   8365c:	d023      	beq.n	836a6 <__register_exitproc+0x92>
   8365e:	3202      	adds	r2, #2
   83660:	f8c3 e004 	str.w	lr, [r3, #4]
   83664:	6828      	ldr	r0, [r5, #0]
   83666:	f843 7022 	str.w	r7, [r3, r2, lsl #2]
   8366a:	f7ff f88f 	bl	8278c <__retarget_lock_release_recursive>
   8366e:	2000      	movs	r0, #0
   83670:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
   83674:	4b17      	ldr	r3, [pc, #92]	; (836d4 <__register_exitproc+0xc0>)
   83676:	b30b      	cbz	r3, 836bc <__register_exitproc+0xa8>
   83678:	f44f 70c8 	mov.w	r0, #400	; 0x190
   8367c:	f7ff f900 	bl	82880 <malloc>
   83680:	4603      	mov	r3, r0
   83682:	b1d8      	cbz	r0, 836bc <__register_exitproc+0xa8>
   83684:	2000      	movs	r0, #0
   83686:	f8d4 1148 	ldr.w	r1, [r4, #328]	; 0x148
   8368a:	f04f 0e01 	mov.w	lr, #1
   8368e:	6058      	str	r0, [r3, #4]
   83690:	6019      	str	r1, [r3, #0]
   83692:	4602      	mov	r2, r0
   83694:	f8c4 3148 	str.w	r3, [r4, #328]	; 0x148
   83698:	f8c3 0188 	str.w	r0, [r3, #392]	; 0x188
   8369c:	f8c3 018c 	str.w	r0, [r3, #396]	; 0x18c
   836a0:	2e00      	cmp	r6, #0
   836a2:	d0dc      	beq.n	8365e <__register_exitproc+0x4a>
   836a4:	e7cc      	b.n	83640 <__register_exitproc+0x2c>
   836a6:	f8d3 018c 	ldr.w	r0, [r3, #396]	; 0x18c
   836aa:	4301      	orrs	r1, r0
   836ac:	f8c3 118c 	str.w	r1, [r3, #396]	; 0x18c
   836b0:	e7d5      	b.n	8365e <__register_exitproc+0x4a>
   836b2:	f504 73a6 	add.w	r3, r4, #332	; 0x14c
   836b6:	f8c4 3148 	str.w	r3, [r4, #328]	; 0x148
   836ba:	e7bb      	b.n	83634 <__register_exitproc+0x20>
   836bc:	6828      	ldr	r0, [r5, #0]
   836be:	f7ff f865 	bl	8278c <__retarget_lock_release_recursive>
   836c2:	f04f 30ff 	mov.w	r0, #4294967295
   836c6:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
   836ca:	bf00      	nop
   836cc:	20070560 	.word	0x20070560
   836d0:	00083ba4 	.word	0x00083ba4
   836d4:	00082881 	.word	0x00082881

000836d8 <_close_r>:
   836d8:	b538      	push	{r3, r4, r5, lr}
   836da:	2300      	movs	r3, #0
   836dc:	4c06      	ldr	r4, [pc, #24]	; (836f8 <_close_r+0x20>)
   836de:	4605      	mov	r5, r0
   836e0:	4608      	mov	r0, r1
   836e2:	6023      	str	r3, [r4, #0]
   836e4:	f7fd fad6 	bl	80c94 <_close>
   836e8:	1c43      	adds	r3, r0, #1
   836ea:	d000      	beq.n	836ee <_close_r+0x16>
   836ec:	bd38      	pop	{r3, r4, r5, pc}
   836ee:	6823      	ldr	r3, [r4, #0]
   836f0:	2b00      	cmp	r3, #0
   836f2:	d0fb      	beq.n	836ec <_close_r+0x14>
   836f4:	602b      	str	r3, [r5, #0]
   836f6:	bd38      	pop	{r3, r4, r5, pc}
   836f8:	20070c74 	.word	0x20070c74

000836fc <_fclose_r>:
   836fc:	b570      	push	{r4, r5, r6, lr}
   836fe:	b159      	cbz	r1, 83718 <_fclose_r+0x1c>
   83700:	4605      	mov	r5, r0
   83702:	460c      	mov	r4, r1
   83704:	b110      	cbz	r0, 8370c <_fclose_r+0x10>
   83706:	6b83      	ldr	r3, [r0, #56]	; 0x38
   83708:	2b00      	cmp	r3, #0
   8370a:	d03c      	beq.n	83786 <_fclose_r+0x8a>
   8370c:	6e63      	ldr	r3, [r4, #100]	; 0x64
   8370e:	07d8      	lsls	r0, r3, #31
   83710:	d505      	bpl.n	8371e <_fclose_r+0x22>
   83712:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
   83716:	b92b      	cbnz	r3, 83724 <_fclose_r+0x28>
   83718:	2600      	movs	r6, #0
   8371a:	4630      	mov	r0, r6
   8371c:	bd70      	pop	{r4, r5, r6, pc}
   8371e:	89a3      	ldrh	r3, [r4, #12]
   83720:	0599      	lsls	r1, r3, #22
   83722:	d53c      	bpl.n	8379e <_fclose_r+0xa2>
   83724:	4621      	mov	r1, r4
   83726:	4628      	mov	r0, r5
   83728:	f7fe fb7a 	bl	81e20 <__sflush_r>
   8372c:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
   8372e:	4606      	mov	r6, r0
   83730:	b133      	cbz	r3, 83740 <_fclose_r+0x44>
   83732:	69e1      	ldr	r1, [r4, #28]
   83734:	4628      	mov	r0, r5
   83736:	4798      	blx	r3
   83738:	2800      	cmp	r0, #0
   8373a:	bfb8      	it	lt
   8373c:	f04f 36ff 	movlt.w	r6, #4294967295
   83740:	89a3      	ldrh	r3, [r4, #12]
   83742:	061a      	lsls	r2, r3, #24
   83744:	d422      	bmi.n	8378c <_fclose_r+0x90>
   83746:	6b21      	ldr	r1, [r4, #48]	; 0x30
   83748:	b141      	cbz	r1, 8375c <_fclose_r+0x60>
   8374a:	f104 0340 	add.w	r3, r4, #64	; 0x40
   8374e:	4299      	cmp	r1, r3
   83750:	d002      	beq.n	83758 <_fclose_r+0x5c>
   83752:	4628      	mov	r0, r5
   83754:	f7fe fd7e 	bl	82254 <_free_r>
   83758:	2300      	movs	r3, #0
   8375a:	6323      	str	r3, [r4, #48]	; 0x30
   8375c:	6c61      	ldr	r1, [r4, #68]	; 0x44
   8375e:	b121      	cbz	r1, 8376a <_fclose_r+0x6e>
   83760:	4628      	mov	r0, r5
   83762:	f7fe fd77 	bl	82254 <_free_r>
   83766:	2300      	movs	r3, #0
   83768:	6463      	str	r3, [r4, #68]	; 0x44
   8376a:	f7fe fc7d 	bl	82068 <__sfp_lock_acquire>
   8376e:	2200      	movs	r2, #0
   83770:	6e63      	ldr	r3, [r4, #100]	; 0x64
   83772:	81a2      	strh	r2, [r4, #12]
   83774:	07db      	lsls	r3, r3, #31
   83776:	d50e      	bpl.n	83796 <_fclose_r+0x9a>
   83778:	6da0      	ldr	r0, [r4, #88]	; 0x58
   8377a:	f7ff f803 	bl	82784 <__retarget_lock_close_recursive>
   8377e:	f7fe fc79 	bl	82074 <__sfp_lock_release>
   83782:	4630      	mov	r0, r6
   83784:	bd70      	pop	{r4, r5, r6, pc}
   83786:	f7fe fc3f 	bl	82008 <__sinit>
   8378a:	e7bf      	b.n	8370c <_fclose_r+0x10>
   8378c:	6921      	ldr	r1, [r4, #16]
   8378e:	4628      	mov	r0, r5
   83790:	f7fe fd60 	bl	82254 <_free_r>
   83794:	e7d7      	b.n	83746 <_fclose_r+0x4a>
   83796:	6da0      	ldr	r0, [r4, #88]	; 0x58
   83798:	f7fe fff8 	bl	8278c <__retarget_lock_release_recursive>
   8379c:	e7ec      	b.n	83778 <_fclose_r+0x7c>
   8379e:	6da0      	ldr	r0, [r4, #88]	; 0x58
   837a0:	f7fe fff2 	bl	82788 <__retarget_lock_acquire_recursive>
   837a4:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
   837a8:	2b00      	cmp	r3, #0
   837aa:	d1bb      	bne.n	83724 <_fclose_r+0x28>
   837ac:	6e66      	ldr	r6, [r4, #100]	; 0x64
   837ae:	f016 0601 	ands.w	r6, r6, #1
   837b2:	d1b1      	bne.n	83718 <_fclose_r+0x1c>
   837b4:	6da0      	ldr	r0, [r4, #88]	; 0x58
   837b6:	f7fe ffe9 	bl	8278c <__retarget_lock_release_recursive>
   837ba:	4630      	mov	r0, r6
   837bc:	bd70      	pop	{r4, r5, r6, pc}
   837be:	bf00      	nop

000837c0 <_fstat_r>:
   837c0:	b570      	push	{r4, r5, r6, lr}
   837c2:	460d      	mov	r5, r1
   837c4:	2300      	movs	r3, #0
   837c6:	4c07      	ldr	r4, [pc, #28]	; (837e4 <_fstat_r+0x24>)
   837c8:	4606      	mov	r6, r0
   837ca:	4611      	mov	r1, r2
   837cc:	4628      	mov	r0, r5
   837ce:	6023      	str	r3, [r4, #0]
   837d0:	f7fd fa63 	bl	80c9a <_fstat>
   837d4:	1c43      	adds	r3, r0, #1
   837d6:	d000      	beq.n	837da <_fstat_r+0x1a>
   837d8:	bd70      	pop	{r4, r5, r6, pc}
   837da:	6823      	ldr	r3, [r4, #0]
   837dc:	2b00      	cmp	r3, #0
   837de:	d0fb      	beq.n	837d8 <_fstat_r+0x18>
   837e0:	6033      	str	r3, [r6, #0]
   837e2:	bd70      	pop	{r4, r5, r6, pc}
   837e4:	20070c74 	.word	0x20070c74

000837e8 <_isatty_r>:
   837e8:	b538      	push	{r3, r4, r5, lr}
   837ea:	2300      	movs	r3, #0
   837ec:	4c06      	ldr	r4, [pc, #24]	; (83808 <_isatty_r+0x20>)
   837ee:	4605      	mov	r5, r0
   837f0:	4608      	mov	r0, r1
   837f2:	6023      	str	r3, [r4, #0]
   837f4:	f7fd fa56 	bl	80ca4 <_isatty>
   837f8:	1c43      	adds	r3, r0, #1
   837fa:	d000      	beq.n	837fe <_isatty_r+0x16>
   837fc:	bd38      	pop	{r3, r4, r5, pc}
   837fe:	6823      	ldr	r3, [r4, #0]
   83800:	2b00      	cmp	r3, #0
   83802:	d0fb      	beq.n	837fc <_isatty_r+0x14>
   83804:	602b      	str	r3, [r5, #0]
   83806:	bd38      	pop	{r3, r4, r5, pc}
   83808:	20070c74 	.word	0x20070c74

0008380c <_lseek_r>:
   8380c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
   8380e:	460e      	mov	r6, r1
   83810:	2500      	movs	r5, #0
   83812:	4c08      	ldr	r4, [pc, #32]	; (83834 <_lseek_r+0x28>)
   83814:	4611      	mov	r1, r2
   83816:	4607      	mov	r7, r0
   83818:	461a      	mov	r2, r3
   8381a:	4630      	mov	r0, r6
   8381c:	6025      	str	r5, [r4, #0]
   8381e:	f7fd fa43 	bl	80ca8 <_lseek>
   83822:	1c43      	adds	r3, r0, #1
   83824:	d000      	beq.n	83828 <_lseek_r+0x1c>
   83826:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
   83828:	6823      	ldr	r3, [r4, #0]
   8382a:	2b00      	cmp	r3, #0
   8382c:	d0fb      	beq.n	83826 <_lseek_r+0x1a>
   8382e:	603b      	str	r3, [r7, #0]
   83830:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
   83832:	bf00      	nop
   83834:	20070c74 	.word	0x20070c74

00083838 <_read_r>:
   83838:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
   8383a:	460e      	mov	r6, r1
   8383c:	2500      	movs	r5, #0
   8383e:	4c08      	ldr	r4, [pc, #32]	; (83860 <_read_r+0x28>)
   83840:	4611      	mov	r1, r2
   83842:	4607      	mov	r7, r0
   83844:	461a      	mov	r2, r3
   83846:	4630      	mov	r0, r6
   83848:	6025      	str	r5, [r4, #0]
   8384a:	f7fc fc89 	bl	80160 <_read>
   8384e:	1c43      	adds	r3, r0, #1
   83850:	d000      	beq.n	83854 <_read_r+0x1c>
   83852:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
   83854:	6823      	ldr	r3, [r4, #0]
   83856:	2b00      	cmp	r3, #0
   83858:	d0fb      	beq.n	83852 <_read_r+0x1a>
   8385a:	603b      	str	r3, [r7, #0]
   8385c:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
   8385e:	bf00      	nop
   83860:	20070c74 	.word	0x20070c74

00083864 <__aeabi_uldivmod>:
   83864:	b953      	cbnz	r3, 8387c <__aeabi_uldivmod+0x18>
   83866:	b94a      	cbnz	r2, 8387c <__aeabi_uldivmod+0x18>
   83868:	2900      	cmp	r1, #0
   8386a:	bf08      	it	eq
   8386c:	2800      	cmpeq	r0, #0
   8386e:	bf1c      	itt	ne
   83870:	f04f 31ff 	movne.w	r1, #4294967295
   83874:	f04f 30ff 	movne.w	r0, #4294967295
   83878:	f000 b97a 	b.w	83b70 <__aeabi_idiv0>
   8387c:	f1ad 0c08 	sub.w	ip, sp, #8
   83880:	e96d ce04 	strd	ip, lr, [sp, #-16]!
   83884:	f000 f806 	bl	83894 <__udivmoddi4>
   83888:	f8dd e004 	ldr.w	lr, [sp, #4]
   8388c:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
   83890:	b004      	add	sp, #16
   83892:	4770      	bx	lr

00083894 <__udivmoddi4>:
   83894:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
   83898:	468c      	mov	ip, r1
   8389a:	460e      	mov	r6, r1
   8389c:	4604      	mov	r4, r0
   8389e:	9d08      	ldr	r5, [sp, #32]
   838a0:	2b00      	cmp	r3, #0
   838a2:	d150      	bne.n	83946 <__udivmoddi4+0xb2>
   838a4:	428a      	cmp	r2, r1
   838a6:	4617      	mov	r7, r2
   838a8:	d96c      	bls.n	83984 <__udivmoddi4+0xf0>
   838aa:	fab2 fe82 	clz	lr, r2
   838ae:	f1be 0f00 	cmp.w	lr, #0
   838b2:	d00b      	beq.n	838cc <__udivmoddi4+0x38>
   838b4:	f1ce 0c20 	rsb	ip, lr, #32
   838b8:	fa01 f60e 	lsl.w	r6, r1, lr
   838bc:	fa20 fc0c 	lsr.w	ip, r0, ip
   838c0:	fa02 f70e 	lsl.w	r7, r2, lr
   838c4:	ea4c 0c06 	orr.w	ip, ip, r6
   838c8:	fa00 f40e 	lsl.w	r4, r0, lr
   838cc:	0c3a      	lsrs	r2, r7, #16
   838ce:	fbbc f9f2 	udiv	r9, ip, r2
   838d2:	b2bb      	uxth	r3, r7
   838d4:	fb02 cc19 	mls	ip, r2, r9, ip
   838d8:	fb09 fa03 	mul.w	sl, r9, r3
   838dc:	ea4f 4814 	mov.w	r8, r4, lsr #16
   838e0:	ea48 460c 	orr.w	r6, r8, ip, lsl #16
   838e4:	45b2      	cmp	sl, r6
   838e6:	d90a      	bls.n	838fe <__udivmoddi4+0x6a>
   838e8:	19f6      	adds	r6, r6, r7
   838ea:	f109 31ff 	add.w	r1, r9, #4294967295
   838ee:	f080 8125 	bcs.w	83b3c <__udivmoddi4+0x2a8>
   838f2:	45b2      	cmp	sl, r6
   838f4:	f240 8122 	bls.w	83b3c <__udivmoddi4+0x2a8>
   838f8:	f1a9 0902 	sub.w	r9, r9, #2
   838fc:	443e      	add	r6, r7
   838fe:	eba6 060a 	sub.w	r6, r6, sl
   83902:	fbb6 f0f2 	udiv	r0, r6, r2
   83906:	fb02 6610 	mls	r6, r2, r0, r6
   8390a:	fb00 f303 	mul.w	r3, r0, r3
   8390e:	b2a4      	uxth	r4, r4
   83910:	ea44 4406 	orr.w	r4, r4, r6, lsl #16
   83914:	42a3      	cmp	r3, r4
   83916:	d909      	bls.n	8392c <__udivmoddi4+0x98>
   83918:	19e4      	adds	r4, r4, r7
   8391a:	f100 32ff 	add.w	r2, r0, #4294967295
   8391e:	f080 810b 	bcs.w	83b38 <__udivmoddi4+0x2a4>
   83922:	42a3      	cmp	r3, r4
   83924:	f240 8108 	bls.w	83b38 <__udivmoddi4+0x2a4>
   83928:	3802      	subs	r0, #2
   8392a:	443c      	add	r4, r7
   8392c:	2100      	movs	r1, #0
   8392e:	1ae4      	subs	r4, r4, r3
   83930:	ea40 4009 	orr.w	r0, r0, r9, lsl #16
   83934:	2d00      	cmp	r5, #0
   83936:	d062      	beq.n	839fe <__udivmoddi4+0x16a>
   83938:	2300      	movs	r3, #0
   8393a:	fa24 f40e 	lsr.w	r4, r4, lr
   8393e:	602c      	str	r4, [r5, #0]
   83940:	606b      	str	r3, [r5, #4]
   83942:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
   83946:	428b      	cmp	r3, r1
   83948:	d907      	bls.n	8395a <__udivmoddi4+0xc6>
   8394a:	2d00      	cmp	r5, #0
   8394c:	d055      	beq.n	839fa <__udivmoddi4+0x166>
   8394e:	2100      	movs	r1, #0
   83950:	e885 0041 	stmia.w	r5, {r0, r6}
   83954:	4608      	mov	r0, r1
   83956:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
   8395a:	fab3 f183 	clz	r1, r3
   8395e:	2900      	cmp	r1, #0
   83960:	f040 808f 	bne.w	83a82 <__udivmoddi4+0x1ee>
   83964:	42b3      	cmp	r3, r6
   83966:	d302      	bcc.n	8396e <__udivmoddi4+0xda>
   83968:	4282      	cmp	r2, r0
   8396a:	f200 80fc 	bhi.w	83b66 <__udivmoddi4+0x2d2>
   8396e:	1a84      	subs	r4, r0, r2
   83970:	eb66 0603 	sbc.w	r6, r6, r3
   83974:	2001      	movs	r0, #1
   83976:	46b4      	mov	ip, r6
   83978:	2d00      	cmp	r5, #0
   8397a:	d040      	beq.n	839fe <__udivmoddi4+0x16a>
   8397c:	e885 1010 	stmia.w	r5, {r4, ip}
   83980:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
   83984:	b912      	cbnz	r2, 8398c <__udivmoddi4+0xf8>
   83986:	2701      	movs	r7, #1
   83988:	fbb7 f7f2 	udiv	r7, r7, r2
   8398c:	fab7 fe87 	clz	lr, r7
   83990:	f1be 0f00 	cmp.w	lr, #0
   83994:	d135      	bne.n	83a02 <__udivmoddi4+0x16e>
   83996:	2101      	movs	r1, #1
   83998:	1bf6      	subs	r6, r6, r7
   8399a:	ea4f 4c17 	mov.w	ip, r7, lsr #16
   8399e:	fa1f f887 	uxth.w	r8, r7
   839a2:	fbb6 f2fc 	udiv	r2, r6, ip
   839a6:	fb0c 6612 	mls	r6, ip, r2, r6
   839aa:	fb08 f002 	mul.w	r0, r8, r2
   839ae:	0c23      	lsrs	r3, r4, #16
   839b0:	ea43 4606 	orr.w	r6, r3, r6, lsl #16
   839b4:	42b0      	cmp	r0, r6
   839b6:	d907      	bls.n	839c8 <__udivmoddi4+0x134>
   839b8:	19f6      	adds	r6, r6, r7
   839ba:	f102 33ff 	add.w	r3, r2, #4294967295
   839be:	d202      	bcs.n	839c6 <__udivmoddi4+0x132>
   839c0:	42b0      	cmp	r0, r6
   839c2:	f200 80d2 	bhi.w	83b6a <__udivmoddi4+0x2d6>
   839c6:	461a      	mov	r2, r3
   839c8:	1a36      	subs	r6, r6, r0
   839ca:	fbb6 f0fc 	udiv	r0, r6, ip
   839ce:	fb0c 6610 	mls	r6, ip, r0, r6
   839d2:	fb08 f800 	mul.w	r8, r8, r0
   839d6:	b2a3      	uxth	r3, r4
   839d8:	ea43 4406 	orr.w	r4, r3, r6, lsl #16
   839dc:	45a0      	cmp	r8, r4
   839de:	d907      	bls.n	839f0 <__udivmoddi4+0x15c>
   839e0:	19e4      	adds	r4, r4, r7
   839e2:	f100 33ff 	add.w	r3, r0, #4294967295
   839e6:	d202      	bcs.n	839ee <__udivmoddi4+0x15a>
   839e8:	45a0      	cmp	r8, r4
   839ea:	f200 80b9 	bhi.w	83b60 <__udivmoddi4+0x2cc>
   839ee:	4618      	mov	r0, r3
   839f0:	eba4 0408 	sub.w	r4, r4, r8
   839f4:	ea40 4002 	orr.w	r0, r0, r2, lsl #16
   839f8:	e79c      	b.n	83934 <__udivmoddi4+0xa0>
   839fa:	4629      	mov	r1, r5
   839fc:	4628      	mov	r0, r5
   839fe:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
   83a02:	fa07 f70e 	lsl.w	r7, r7, lr
   83a06:	f1ce 0320 	rsb	r3, lr, #32
   83a0a:	fa26 f203 	lsr.w	r2, r6, r3
   83a0e:	ea4f 4c17 	mov.w	ip, r7, lsr #16
   83a12:	fbb2 f1fc 	udiv	r1, r2, ip
   83a16:	fa1f f887 	uxth.w	r8, r7
   83a1a:	fb0c 2211 	mls	r2, ip, r1, r2
   83a1e:	fa06 f60e 	lsl.w	r6, r6, lr
   83a22:	fa20 f303 	lsr.w	r3, r0, r3
   83a26:	fb01 f908 	mul.w	r9, r1, r8
   83a2a:	4333      	orrs	r3, r6
   83a2c:	0c1e      	lsrs	r6, r3, #16
   83a2e:	ea46 4602 	orr.w	r6, r6, r2, lsl #16
   83a32:	45b1      	cmp	r9, r6
   83a34:	fa00 f40e 	lsl.w	r4, r0, lr
   83a38:	d909      	bls.n	83a4e <__udivmoddi4+0x1ba>
   83a3a:	19f6      	adds	r6, r6, r7
   83a3c:	f101 32ff 	add.w	r2, r1, #4294967295
   83a40:	f080 808c 	bcs.w	83b5c <__udivmoddi4+0x2c8>
   83a44:	45b1      	cmp	r9, r6
   83a46:	f240 8089 	bls.w	83b5c <__udivmoddi4+0x2c8>
   83a4a:	3902      	subs	r1, #2
   83a4c:	443e      	add	r6, r7
   83a4e:	eba6 0609 	sub.w	r6, r6, r9
   83a52:	fbb6 f0fc 	udiv	r0, r6, ip
   83a56:	fb0c 6210 	mls	r2, ip, r0, r6
   83a5a:	fb00 f908 	mul.w	r9, r0, r8
   83a5e:	b29e      	uxth	r6, r3
   83a60:	ea46 4602 	orr.w	r6, r6, r2, lsl #16
   83a64:	45b1      	cmp	r9, r6
   83a66:	d907      	bls.n	83a78 <__udivmoddi4+0x1e4>
   83a68:	19f6      	adds	r6, r6, r7
   83a6a:	f100 33ff 	add.w	r3, r0, #4294967295
   83a6e:	d271      	bcs.n	83b54 <__udivmoddi4+0x2c0>
   83a70:	45b1      	cmp	r9, r6
   83a72:	d96f      	bls.n	83b54 <__udivmoddi4+0x2c0>
   83a74:	3802      	subs	r0, #2
   83a76:	443e      	add	r6, r7
   83a78:	eba6 0609 	sub.w	r6, r6, r9
   83a7c:	ea40 4101 	orr.w	r1, r0, r1, lsl #16
   83a80:	e78f      	b.n	839a2 <__udivmoddi4+0x10e>
   83a82:	f1c1 0720 	rsb	r7, r1, #32
   83a86:	fa22 f807 	lsr.w	r8, r2, r7
   83a8a:	408b      	lsls	r3, r1
   83a8c:	ea48 0303 	orr.w	r3, r8, r3
   83a90:	fa26 f407 	lsr.w	r4, r6, r7
   83a94:	ea4f 4e13 	mov.w	lr, r3, lsr #16
   83a98:	fbb4 f9fe 	udiv	r9, r4, lr
   83a9c:	fa1f fc83 	uxth.w	ip, r3
   83aa0:	fb0e 4419 	mls	r4, lr, r9, r4
   83aa4:	408e      	lsls	r6, r1
   83aa6:	fa20 f807 	lsr.w	r8, r0, r7
   83aaa:	fb09 fa0c 	mul.w	sl, r9, ip
   83aae:	ea48 0806 	orr.w	r8, r8, r6
   83ab2:	ea4f 4618 	mov.w	r6, r8, lsr #16
   83ab6:	ea46 4404 	orr.w	r4, r6, r4, lsl #16
   83aba:	45a2      	cmp	sl, r4
   83abc:	fa02 f201 	lsl.w	r2, r2, r1
   83ac0:	fa00 f601 	lsl.w	r6, r0, r1
   83ac4:	d908      	bls.n	83ad8 <__udivmoddi4+0x244>
   83ac6:	18e4      	adds	r4, r4, r3
   83ac8:	f109 30ff 	add.w	r0, r9, #4294967295
   83acc:	d244      	bcs.n	83b58 <__udivmoddi4+0x2c4>
   83ace:	45a2      	cmp	sl, r4
   83ad0:	d942      	bls.n	83b58 <__udivmoddi4+0x2c4>
   83ad2:	f1a9 0902 	sub.w	r9, r9, #2
   83ad6:	441c      	add	r4, r3
   83ad8:	eba4 040a 	sub.w	r4, r4, sl
   83adc:	fbb4 f0fe 	udiv	r0, r4, lr
   83ae0:	fb0e 4410 	mls	r4, lr, r0, r4
   83ae4:	fb00 fc0c 	mul.w	ip, r0, ip
   83ae8:	fa1f f888 	uxth.w	r8, r8
   83aec:	ea48 4404 	orr.w	r4, r8, r4, lsl #16
   83af0:	45a4      	cmp	ip, r4
   83af2:	d907      	bls.n	83b04 <__udivmoddi4+0x270>
   83af4:	18e4      	adds	r4, r4, r3
   83af6:	f100 3eff 	add.w	lr, r0, #4294967295
   83afa:	d229      	bcs.n	83b50 <__udivmoddi4+0x2bc>
   83afc:	45a4      	cmp	ip, r4
   83afe:	d927      	bls.n	83b50 <__udivmoddi4+0x2bc>
   83b00:	3802      	subs	r0, #2
   83b02:	441c      	add	r4, r3
   83b04:	ea40 4009 	orr.w	r0, r0, r9, lsl #16
   83b08:	fba0 8902 	umull	r8, r9, r0, r2
   83b0c:	eba4 0c0c 	sub.w	ip, r4, ip
   83b10:	45cc      	cmp	ip, r9
   83b12:	46c2      	mov	sl, r8
   83b14:	46ce      	mov	lr, r9
   83b16:	d315      	bcc.n	83b44 <__udivmoddi4+0x2b0>
   83b18:	d012      	beq.n	83b40 <__udivmoddi4+0x2ac>
   83b1a:	b155      	cbz	r5, 83b32 <__udivmoddi4+0x29e>
   83b1c:	ebb6 030a 	subs.w	r3, r6, sl
   83b20:	eb6c 060e 	sbc.w	r6, ip, lr
   83b24:	fa06 f707 	lsl.w	r7, r6, r7
   83b28:	40cb      	lsrs	r3, r1
   83b2a:	431f      	orrs	r7, r3
   83b2c:	40ce      	lsrs	r6, r1
   83b2e:	602f      	str	r7, [r5, #0]
   83b30:	606e      	str	r6, [r5, #4]
   83b32:	2100      	movs	r1, #0
   83b34:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
   83b38:	4610      	mov	r0, r2
   83b3a:	e6f7      	b.n	8392c <__udivmoddi4+0x98>
   83b3c:	4689      	mov	r9, r1
   83b3e:	e6de      	b.n	838fe <__udivmoddi4+0x6a>
   83b40:	4546      	cmp	r6, r8
   83b42:	d2ea      	bcs.n	83b1a <__udivmoddi4+0x286>
   83b44:	ebb8 0a02 	subs.w	sl, r8, r2
   83b48:	eb69 0e03 	sbc.w	lr, r9, r3
   83b4c:	3801      	subs	r0, #1
   83b4e:	e7e4      	b.n	83b1a <__udivmoddi4+0x286>
   83b50:	4670      	mov	r0, lr
   83b52:	e7d7      	b.n	83b04 <__udivmoddi4+0x270>
   83b54:	4618      	mov	r0, r3
   83b56:	e78f      	b.n	83a78 <__udivmoddi4+0x1e4>
   83b58:	4681      	mov	r9, r0
   83b5a:	e7bd      	b.n	83ad8 <__udivmoddi4+0x244>
   83b5c:	4611      	mov	r1, r2
   83b5e:	e776      	b.n	83a4e <__udivmoddi4+0x1ba>
   83b60:	3802      	subs	r0, #2
   83b62:	443c      	add	r4, r7
   83b64:	e744      	b.n	839f0 <__udivmoddi4+0x15c>
   83b66:	4608      	mov	r0, r1
   83b68:	e706      	b.n	83978 <__udivmoddi4+0xe4>
   83b6a:	3a02      	subs	r2, #2
   83b6c:	443e      	add	r6, r7
   83b6e:	e72b      	b.n	839c8 <__udivmoddi4+0x134>

00083b70 <__aeabi_idiv0>:
   83b70:	4770      	bx	lr
   83b72:	bf00      	nop
   83b74:	736e6f43 	.word	0x736e6f43
   83b78:	20656c6f 	.word	0x20656c6f
   83b7c:	64616572 	.word	0x64616572
   83b80:	00000a79 	.word	0x00000a79
   83b84:	3d3d3d3d 	.word	0x3d3d3d3d
   83b88:	3d3d3d3d 	.word	0x3d3d3d3d
   83b8c:	3d3d3d3d 	.word	0x3d3d3d3d
   83b90:	00000a3d 	.word	0x00000a3d
   83b94:	646e6573 	.word	0x646e6573
   83b98:	65747942 	.word	0x65747942
   83b9c:	6425203a 	.word	0x6425203a
   83ba0:	0000000a 	.word	0x0000000a

00083ba4 <_global_impure_ptr>:
   83ba4:	20070138 33323130 37363534 42413938     8.. 0123456789AB
   83bb4:	46454443 00000000 33323130 37363534     CDEF....01234567
   83bc4:	62613938 66656463 00000000 6c756e28     89abcdef....(nul
   83bd4:	0000296c                                l)..

00083bd8 <blanks.7217>:
   83bd8:	20202020 20202020 20202020 20202020                     

00083be8 <zeroes.7218>:
   83be8:	30303030 30303030 30303030 30303030     0000000000000000
   83bf8:	00000043 49534f50 00000058 0000002e     C...POSIX.......

00083c08 <_ctype_>:
   83c08:	20202000 20202020 28282020 20282828     .         ((((( 
   83c18:	20202020 20202020 20202020 20202020                     
   83c28:	10108820 10101010 10101010 10101010      ...............
   83c38:	04040410 04040404 10040404 10101010     ................
   83c48:	41411010 41414141 01010101 01010101     ..AAAAAA........
   83c58:	01010101 01010101 01010101 10101010     ................
   83c68:	42421010 42424242 02020202 02020202     ..BBBBBB........
   83c78:	02020202 02020202 02020202 10101010     ................
   83c88:	00000020 00000000 00000000 00000000      ...............
	...

00083d0c <_init>:
   83d0c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
   83d0e:	bf00      	nop
   83d10:	bcf8      	pop	{r3, r4, r5, r6, r7}
   83d12:	bc08      	pop	{r3}
   83d14:	469e      	mov	lr, r3
   83d16:	4770      	bx	lr

00083d18 <__init_array_start>:
   83d18:	00081e01 	.word	0x00081e01

00083d1c <__frame_dummy_init_array_entry>:
   83d1c:	00080119                                ....

00083d20 <_fini>:
   83d20:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
   83d22:	bf00      	nop
   83d24:	bcf8      	pop	{r3, r4, r5, r6, r7}
   83d26:	bc08      	pop	{r3}
   83d28:	469e      	mov	lr, r3
   83d2a:	4770      	bx	lr

00083d2c <__fini_array_start>:
   83d2c:	000800f5 	.word	0x000800f5

Disassembly of section .relocate:

20070000 <SystemInit>:
	EFC0->EEFC_FMR = EEFC_FMR_FWS(4);
20070000:	f44f 6380 	mov.w	r3, #1024	; 0x400
20070004:	4a20      	ldr	r2, [pc, #128]	; (20070088 <SystemInit+0x88>)
20070006:	6013      	str	r3, [r2, #0]
	EFC1->EEFC_FMR = EEFC_FMR_FWS(4);
20070008:	f502 7200 	add.w	r2, r2, #512	; 0x200
2007000c:	6013      	str	r3, [r2, #0]
	if (!(PMC->CKGR_MOR & CKGR_MOR_MOSCSEL)) {
2007000e:	4b1f      	ldr	r3, [pc, #124]	; (2007008c <SystemInit+0x8c>)
20070010:	6a1b      	ldr	r3, [r3, #32]
20070012:	f013 7f80 	tst.w	r3, #16777216	; 0x1000000
20070016:	d107      	bne.n	20070028 <SystemInit+0x28>
		PMC->CKGR_MOR = SYS_CKGR_MOR_KEY_VALUE | SYS_BOARD_OSCOUNT | 
20070018:	4a1d      	ldr	r2, [pc, #116]	; (20070090 <SystemInit+0x90>)
2007001a:	4b1c      	ldr	r3, [pc, #112]	; (2007008c <SystemInit+0x8c>)
2007001c:	621a      	str	r2, [r3, #32]
		while (!(PMC->PMC_SR & PMC_SR_MOSCXTS)) {
2007001e:	461a      	mov	r2, r3
20070020:	6e93      	ldr	r3, [r2, #104]	; 0x68
20070022:	f013 0f01 	tst.w	r3, #1
20070026:	d0fb      	beq.n	20070020 <SystemInit+0x20>
	PMC->CKGR_MOR = SYS_CKGR_MOR_KEY_VALUE | SYS_BOARD_OSCOUNT | 
20070028:	4a1a      	ldr	r2, [pc, #104]	; (20070094 <SystemInit+0x94>)
2007002a:	4b18      	ldr	r3, [pc, #96]	; (2007008c <SystemInit+0x8c>)
2007002c:	621a      	str	r2, [r3, #32]
	while (!(PMC->PMC_SR & PMC_SR_MOSCSELS)) {
2007002e:	461a      	mov	r2, r3
20070030:	6e93      	ldr	r3, [r2, #104]	; 0x68
20070032:	f413 3f80 	tst.w	r3, #65536	; 0x10000
20070036:	d0fb      	beq.n	20070030 <SystemInit+0x30>
 	PMC->PMC_MCKR = (PMC->PMC_MCKR & ~(uint32_t)PMC_MCKR_CSS_Msk) | 
20070038:	4a14      	ldr	r2, [pc, #80]	; (2007008c <SystemInit+0x8c>)
2007003a:	6b13      	ldr	r3, [r2, #48]	; 0x30
2007003c:	f023 0303 	bic.w	r3, r3, #3
20070040:	f043 0301 	orr.w	r3, r3, #1
20070044:	6313      	str	r3, [r2, #48]	; 0x30
	while (!(PMC->PMC_SR & PMC_SR_MCKRDY)) {
20070046:	6e93      	ldr	r3, [r2, #104]	; 0x68
20070048:	f013 0f08 	tst.w	r3, #8
2007004c:	d0fb      	beq.n	20070046 <SystemInit+0x46>
	PMC->CKGR_PLLAR = SYS_BOARD_PLLAR;
2007004e:	4a12      	ldr	r2, [pc, #72]	; (20070098 <SystemInit+0x98>)
20070050:	4b0e      	ldr	r3, [pc, #56]	; (2007008c <SystemInit+0x8c>)
20070052:	629a      	str	r2, [r3, #40]	; 0x28
	while (!(PMC->PMC_SR & PMC_SR_LOCKA)) {
20070054:	461a      	mov	r2, r3
20070056:	6e93      	ldr	r3, [r2, #104]	; 0x68
20070058:	f013 0f02 	tst.w	r3, #2
2007005c:	d0fb      	beq.n	20070056 <SystemInit+0x56>
	PMC->PMC_MCKR = (SYS_BOARD_MCKR & ~PMC_MCKR_CSS_Msk) | PMC_MCKR_CSS_MAIN_CLK;
2007005e:	2211      	movs	r2, #17
20070060:	4b0a      	ldr	r3, [pc, #40]	; (2007008c <SystemInit+0x8c>)
20070062:	631a      	str	r2, [r3, #48]	; 0x30
	while (!(PMC->PMC_SR & PMC_SR_MCKRDY)) {
20070064:	461a      	mov	r2, r3
20070066:	6e93      	ldr	r3, [r2, #104]	; 0x68
20070068:	f013 0f08 	tst.w	r3, #8
2007006c:	d0fb      	beq.n	20070066 <SystemInit+0x66>
	PMC->PMC_MCKR = SYS_BOARD_MCKR;
2007006e:	2212      	movs	r2, #18
20070070:	4b06      	ldr	r3, [pc, #24]	; (2007008c <SystemInit+0x8c>)
20070072:	631a      	str	r2, [r3, #48]	; 0x30
	while (!(PMC->PMC_SR & PMC_SR_MCKRDY)) {
20070074:	461a      	mov	r2, r3
20070076:	6e93      	ldr	r3, [r2, #104]	; 0x68
20070078:	f013 0f08 	tst.w	r3, #8
2007007c:	d0fb      	beq.n	20070076 <SystemInit+0x76>
	SystemCoreClock = CHIP_FREQ_CPU_MAX;
2007007e:	4a07      	ldr	r2, [pc, #28]	; (2007009c <SystemInit+0x9c>)
20070080:	4b07      	ldr	r3, [pc, #28]	; (200700a0 <SystemInit+0xa0>)
20070082:	601a      	str	r2, [r3, #0]
20070084:	4770      	bx	lr
20070086:	bf00      	nop
20070088:	400e0a00 	.word	0x400e0a00
2007008c:	400e0600 	.word	0x400e0600
20070090:	00370809 	.word	0x00370809
20070094:	01370809 	.word	0x01370809
20070098:	200d3f01 	.word	0x200d3f01
2007009c:	0501bd00 	.word	0x0501bd00
200700a0:	20070130 	.word	0x20070130

200700a4 <system_init_flash>:
__no_inline
RAMFUNC
void system_init_flash(uint32_t ul_clk)
{
	/* Set FWS for embedded Flash access according to operating frequency */
	if (ul_clk < CHIP_FREQ_FWS_0) {
200700a4:	4b1b      	ldr	r3, [pc, #108]	; (20070114 <system_init_flash+0x70>)
200700a6:	4298      	cmp	r0, r3
200700a8:	d915      	bls.n	200700d6 <system_init_flash+0x32>
		EFC0->EEFC_FMR = EEFC_FMR_FWS(0);
		EFC1->EEFC_FMR = EEFC_FMR_FWS(0);
	} else if (ul_clk < CHIP_FREQ_FWS_1) {
200700aa:	4b1b      	ldr	r3, [pc, #108]	; (20070118 <system_init_flash+0x74>)
200700ac:	4298      	cmp	r0, r3
200700ae:	d919      	bls.n	200700e4 <system_init_flash+0x40>
		EFC0->EEFC_FMR = EEFC_FMR_FWS(1);
		EFC1->EEFC_FMR = EEFC_FMR_FWS(1);
	} else if (ul_clk < CHIP_FREQ_FWS_2) {
200700b0:	4b1a      	ldr	r3, [pc, #104]	; (2007011c <system_init_flash+0x78>)
200700b2:	4298      	cmp	r0, r3
200700b4:	d91e      	bls.n	200700f4 <system_init_flash+0x50>
		EFC0->EEFC_FMR = EEFC_FMR_FWS(2);
		EFC1->EEFC_FMR = EEFC_FMR_FWS(2);
	} else if (ul_clk < CHIP_FREQ_FWS_3) {
200700b6:	4b1a      	ldr	r3, [pc, #104]	; (20070120 <system_init_flash+0x7c>)
200700b8:	4298      	cmp	r0, r3
200700ba:	d923      	bls.n	20070104 <system_init_flash+0x60>
		EFC0->EEFC_FMR = EEFC_FMR_FWS(3);
		EFC1->EEFC_FMR = EEFC_FMR_FWS(3);
	} else if (ul_clk < CHIP_FREQ_FWS_4) {
200700bc:	4b19      	ldr	r3, [pc, #100]	; (20070124 <system_init_flash+0x80>)
200700be:	4298      	cmp	r0, r3
		EFC0->EEFC_FMR = EEFC_FMR_FWS(4);
200700c0:	bf94      	ite	ls
200700c2:	f44f 6380 	movls.w	r3, #1024	; 0x400
		EFC1->EEFC_FMR = EEFC_FMR_FWS(4);	
	} else {
		EFC0->EEFC_FMR = EEFC_FMR_FWS(5);
200700c6:	f44f 63a0 	movhi.w	r3, #1280	; 0x500
200700ca:	4a17      	ldr	r2, [pc, #92]	; (20070128 <system_init_flash+0x84>)
200700cc:	6013      	str	r3, [r2, #0]
		EFC1->EEFC_FMR = EEFC_FMR_FWS(5);
200700ce:	f502 7200 	add.w	r2, r2, #512	; 0x200
200700d2:	6013      	str	r3, [r2, #0]
200700d4:	4770      	bx	lr
		EFC0->EEFC_FMR = EEFC_FMR_FWS(0);
200700d6:	2300      	movs	r3, #0
200700d8:	4a13      	ldr	r2, [pc, #76]	; (20070128 <system_init_flash+0x84>)
200700da:	6013      	str	r3, [r2, #0]
		EFC1->EEFC_FMR = EEFC_FMR_FWS(0);
200700dc:	f502 7200 	add.w	r2, r2, #512	; 0x200
200700e0:	6013      	str	r3, [r2, #0]
200700e2:	4770      	bx	lr
		EFC0->EEFC_FMR = EEFC_FMR_FWS(1);
200700e4:	f44f 7380 	mov.w	r3, #256	; 0x100
200700e8:	4a0f      	ldr	r2, [pc, #60]	; (20070128 <system_init_flash+0x84>)
200700ea:	6013      	str	r3, [r2, #0]
		EFC1->EEFC_FMR = EEFC_FMR_FWS(1);
200700ec:	f502 7200 	add.w	r2, r2, #512	; 0x200
200700f0:	6013      	str	r3, [r2, #0]
200700f2:	4770      	bx	lr
		EFC0->EEFC_FMR = EEFC_FMR_FWS(2);
200700f4:	f44f 7300 	mov.w	r3, #512	; 0x200
200700f8:	4a0b      	ldr	r2, [pc, #44]	; (20070128 <system_init_flash+0x84>)
200700fa:	6013      	str	r3, [r2, #0]
		EFC1->EEFC_FMR = EEFC_FMR_FWS(2);
200700fc:	f502 7200 	add.w	r2, r2, #512	; 0x200
20070100:	6013      	str	r3, [r2, #0]
20070102:	4770      	bx	lr
		EFC0->EEFC_FMR = EEFC_FMR_FWS(3);
20070104:	f44f 7340 	mov.w	r3, #768	; 0x300
20070108:	4a07      	ldr	r2, [pc, #28]	; (20070128 <system_init_flash+0x84>)
2007010a:	6013      	str	r3, [r2, #0]
		EFC1->EEFC_FMR = EEFC_FMR_FWS(3);
2007010c:	f502 7200 	add.w	r2, r2, #512	; 0x200
20070110:	6013      	str	r3, [r2, #0]
20070112:	4770      	bx	lr
20070114:	0121eabf 	.word	0x0121eabf
20070118:	02faf07f 	.word	0x02faf07f
2007011c:	03d08fff 	.word	0x03d08fff
20070120:	04c4b3ff 	.word	0x04c4b3ff
20070124:	055d4a7f 	.word	0x055d4a7f
20070128:	400e0a00 	.word	0x400e0a00

2007012c <g_interrupt_enabled>:
2007012c:	00000001                                ....

20070130 <SystemCoreClock>:
20070130:	003d0900                                ..=.

20070134 <_impure_ptr>:
20070134:	20070138                                8.. 

20070138 <impure_data>:
20070138:	00000000 20070424 2007048c 200704f4     ....$.. ... ... 
	...
200701e0:	00000001 00000000 abcd330e e66d1234     .........3..4.m.
200701f0:	0005deec 0000000b 00000000 00000000     ................
	...

20070560 <__atexit_recursive_mutex>:
20070560:	20070c50                                P.. 

20070564 <__global_locale>:
20070564:	00000043 00000000 00000000 00000000     C...............
	...
20070584:	00000043 00000000 00000000 00000000     C...............
	...
200705a4:	00000043 00000000 00000000 00000000     C...............
	...
200705c4:	00000043 00000000 00000000 00000000     C...............
	...
200705e4:	00000043 00000000 00000000 00000000     C...............
	...
20070604:	00000043 00000000 00000000 00000000     C...............
	...
20070624:	00000043 00000000 00000000 00000000     C...............
	...
20070644:	000835d1 00082dd5 00000000 00083c08     .5...-.......<..
20070654:	00083c04 00083bb8 00083bb8 00083bb8     .<...;...;...;..
20070664:	00083bb8 00083bb8 00083bb8 00083bb8     .;...;...;...;..
20070674:	00083bb8 00083bb8 ffffffff ffffffff     .;...;..........
20070684:	ffffffff 0000ffff 53410001 00494943     ..........ASCII.
	...
200706ac:	53410000 00494943 00000000 00000000     ..ASCII.........
	...

200706d0 <__malloc_av_>:
	...
200706d8:	200706d0 200706d0 200706d8 200706d8     ... ... ... ... 
200706e8:	200706e0 200706e0 200706e8 200706e8     ... ... ... ... 
200706f8:	200706f0 200706f0 200706f8 200706f8     ... ... ... ... 
20070708:	20070700 20070700 20070708 20070708     ... ... ... ... 
20070718:	20070710 20070710 20070718 20070718     ... ... ... ... 
20070728:	20070720 20070720 20070728 20070728      ..  .. (.. (.. 
20070738:	20070730 20070730 20070738 20070738     0.. 0.. 8.. 8.. 
20070748:	20070740 20070740 20070748 20070748     @.. @.. H.. H.. 
20070758:	20070750 20070750 20070758 20070758     P.. P.. X.. X.. 
20070768:	20070760 20070760 20070768 20070768     `.. `.. h.. h.. 
20070778:	20070770 20070770 20070778 20070778     p.. p.. x.. x.. 
20070788:	20070780 20070780 20070788 20070788     ... ... ... ... 
20070798:	20070790 20070790 20070798 20070798     ... ... ... ... 
200707a8:	200707a0 200707a0 200707a8 200707a8     ... ... ... ... 
200707b8:	200707b0 200707b0 200707b8 200707b8     ... ... ... ... 
200707c8:	200707c0 200707c0 200707c8 200707c8     ... ... ... ... 
200707d8:	200707d0 200707d0 200707d8 200707d8     ... ... ... ... 
200707e8:	200707e0 200707e0 200707e8 200707e8     ... ... ... ... 
200707f8:	200707f0 200707f0 200707f8 200707f8     ... ... ... ... 
20070808:	20070800 20070800 20070808 20070808     ... ... ... ... 
20070818:	20070810 20070810 20070818 20070818     ... ... ... ... 
20070828:	20070820 20070820 20070828 20070828      ..  .. (.. (.. 
20070838:	20070830 20070830 20070838 20070838     0.. 0.. 8.. 8.. 
20070848:	20070840 20070840 20070848 20070848     @.. @.. H.. H.. 
20070858:	20070850 20070850 20070858 20070858     P.. P.. X.. X.. 
20070868:	20070860 20070860 20070868 20070868     `.. `.. h.. h.. 
20070878:	20070870 20070870 20070878 20070878     p.. p.. x.. x.. 
20070888:	20070880 20070880 20070888 20070888     ... ... ... ... 
20070898:	20070890 20070890 20070898 20070898     ... ... ... ... 
200708a8:	200708a0 200708a0 200708a8 200708a8     ... ... ... ... 
200708b8:	200708b0 200708b0 200708b8 200708b8     ... ... ... ... 
200708c8:	200708c0 200708c0 200708c8 200708c8     ... ... ... ... 
200708d8:	200708d0 200708d0 200708d8 200708d8     ... ... ... ... 
200708e8:	200708e0 200708e0 200708e8 200708e8     ... ... ... ... 
200708f8:	200708f0 200708f0 200708f8 200708f8     ... ... ... ... 
20070908:	20070900 20070900 20070908 20070908     ... ... ... ... 
20070918:	20070910 20070910 20070918 20070918     ... ... ... ... 
20070928:	20070920 20070920 20070928 20070928      ..  .. (.. (.. 
20070938:	20070930 20070930 20070938 20070938     0.. 0.. 8.. 8.. 
20070948:	20070940 20070940 20070948 20070948     @.. @.. H.. H.. 
20070958:	20070950 20070950 20070958 20070958     P.. P.. X.. X.. 
20070968:	20070960 20070960 20070968 20070968     `.. `.. h.. h.. 
20070978:	20070970 20070970 20070978 20070978     p.. p.. x.. x.. 
20070988:	20070980 20070980 20070988 20070988     ... ... ... ... 
20070998:	20070990 20070990 20070998 20070998     ... ... ... ... 
200709a8:	200709a0 200709a0 200709a8 200709a8     ... ... ... ... 
200709b8:	200709b0 200709b0 200709b8 200709b8     ... ... ... ... 
200709c8:	200709c0 200709c0 200709c8 200709c8     ... ... ... ... 
200709d8:	200709d0 200709d0 200709d8 200709d8     ... ... ... ... 
200709e8:	200709e0 200709e0 200709e8 200709e8     ... ... ... ... 
200709f8:	200709f0 200709f0 200709f8 200709f8     ... ... ... ... 
20070a08:	20070a00 20070a00 20070a08 20070a08     ... ... ... ... 
20070a18:	20070a10 20070a10 20070a18 20070a18     ... ... ... ... 
20070a28:	20070a20 20070a20 20070a28 20070a28      ..  .. (.. (.. 
20070a38:	20070a30 20070a30 20070a38 20070a38     0.. 0.. 8.. 8.. 
20070a48:	20070a40 20070a40 20070a48 20070a48     @.. @.. H.. H.. 
20070a58:	20070a50 20070a50 20070a58 20070a58     P.. P.. X.. X.. 
20070a68:	20070a60 20070a60 20070a68 20070a68     `.. `.. h.. h.. 
20070a78:	20070a70 20070a70 20070a78 20070a78     p.. p.. x.. x.. 
20070a88:	20070a80 20070a80 20070a88 20070a88     ... ... ... ... 
20070a98:	20070a90 20070a90 20070a98 20070a98     ... ... ... ... 
20070aa8:	20070aa0 20070aa0 20070aa8 20070aa8     ... ... ... ... 
20070ab8:	20070ab0 20070ab0 20070ab8 20070ab8     ... ... ... ... 
20070ac8:	20070ac0 20070ac0 20070ac8 20070ac8     ... ... ... ... 

20070ad8 <__malloc_sbrk_base>:
20070ad8:	ffffffff                                ....

20070adc <__malloc_trim_threshold>:
20070adc:	00020000                                ....
